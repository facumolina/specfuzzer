===========================================================================
DataStructures.AvlTreeList:::OBJECT
DataStructures.AvlTreeList$Node.EMPTY_LEAF.value == DataStructures.AvlTreeList$Node.EMPTY_LEAF.height
DataStructures.AvlTreeList$Node.EMPTY_LEAF.value == DataStructures.AvlTreeList$Node.EMPTY_LEAF.size
DataStructures.AvlTreeList$Node.EMPTY_LEAF.value == DataStructures.AvlTreeList$Node.$assertionsDisabled
DataStructures.AvlTreeList$Node.EMPTY_LEAF.height == DataStructures.AvlTreeList$Node.EMPTY_LEAF.left
DataStructures.AvlTreeList$Node.EMPTY_LEAF.height == DataStructures.AvlTreeList$Node.EMPTY_LEAF.right
DataStructures.AvlTreeList$Node.EMPTY_LEAF.size == DataStructures.AvlTreeList$Node.EMPTY_LEAF.left
DataStructures.AvlTreeList$Node.EMPTY_LEAF.size == DataStructures.AvlTreeList$Node.EMPTY_LEAF.right
DataStructures.AvlTreeList$Node.EMPTY_LEAF.left == DataStructures.AvlTreeList$Node.$assertionsDisabled
DataStructures.AvlTreeList$Node.EMPTY_LEAF.right == DataStructures.AvlTreeList$Node.$assertionsDisabled
this.root.value.getClass().getName() == this.root.left.value.getClass().getName()
this.root.value.getClass().getName() == this.root.right.value.getClass().getName()
this.root.left.value.getClass().getName() == this.root.right.value.getClass().getName()
DataStructures.AvlTreeList$Node.EMPTY_LEAF has only one value
DataStructures.AvlTreeList$Node.EMPTY_LEAF != null
DataStructures.AvlTreeList$Node.EMPTY_LEAF.value == null
DataStructures.AvlTreeList$Node.EMPTY_LEAF.height == 0
DataStructures.AvlTreeList$Node.EMPTY_LEAF.size == 0
DataStructures.AvlTreeList$Node.EMPTY_LEAF.left == null
DataStructures.AvlTreeList$Node.EMPTY_LEAF.right == null
DataStructures.AvlTreeList$Node.$assertionsDisabled == false
this.root.value.getClass().getName() == java.lang.String.class
this.root.height >= 0
this.root.size >= 0
this.root.left.value.getClass().getName() == java.lang.String.class
this.root.left.height >= 0
this.root.left.size >= 0
this.root.right.value.getClass().getName() == java.lang.String.class
this.root.right.height one of { 0, 1, 2 }
this.root.right.size >= 0
DataStructures.AvlTreeList$Node.EMPTY_LEAF.height <= this.root.height
DataStructures.AvlTreeList$Node.EMPTY_LEAF.height <= this.root.left.height
DataStructures.AvlTreeList$Node.EMPTY_LEAF.height <= this.root.right.height
DataStructures.AvlTreeList$Node.EMPTY_LEAF.size <= this.root.size
DataStructures.AvlTreeList$Node.EMPTY_LEAF.size <= this.root.left.size
DataStructures.AvlTreeList$Node.EMPTY_LEAF.size <= this.root.right.size
this.root.height > this.root.left.height
this.root.height > this.root.right.height
this.root.size > this.root.left.size
this.root.size > this.root.right.size
this.root.size - this.root.left.size - this.root.right.size - 1 == 0
===========================================================================
DataStructures.AvlTreeList.remove(int):::ENTER
this.root != null
this.root.height one of { 1, 2, 3 }
this.root.size >= 1
this.root.left != null
this.root.left.height one of { 0, 1, 2 }
this.root.right != null
index >= 0
DataStructures.AvlTreeList$Node.EMPTY_LEAF.height < this.root.height
DataStructures.AvlTreeList$Node.EMPTY_LEAF.size < this.root.size
DataStructures.AvlTreeList$Node.EMPTY_LEAF.size <= index
this.root.size > index
===========================================================================
DataStructures.AvlTreeList.remove(int):::EXIT
DataStructures.AvlTreeList$Node.EMPTY_LEAF == orig(DataStructures.AvlTreeList$Node.EMPTY_LEAF)
DataStructures.AvlTreeList$Node.EMPTY_LEAF.value == orig(DataStructures.AvlTreeList$Node.EMPTY_LEAF.value)
DataStructures.AvlTreeList$Node.EMPTY_LEAF.height == orig(DataStructures.AvlTreeList$Node.EMPTY_LEAF.height)
DataStructures.AvlTreeList$Node.EMPTY_LEAF.size == orig(DataStructures.AvlTreeList$Node.EMPTY_LEAF.size)
DataStructures.AvlTreeList$Node.EMPTY_LEAF.left == orig(DataStructures.AvlTreeList$Node.EMPTY_LEAF.left)
DataStructures.AvlTreeList$Node.EMPTY_LEAF.right == orig(DataStructures.AvlTreeList$Node.EMPTY_LEAF.right)
DataStructures.AvlTreeList$Node.$assertionsDisabled == orig(DataStructures.AvlTreeList$Node.$assertionsDisabled)
this.root.value.getClass().getName() == return.getClass().getName()
this.root.value.getClass().getName() == orig(this.root.value.getClass().getName())
this.root.value.getClass().getName() == orig(this.root.left.value.getClass().getName())
this.root.value.getClass().getName() == orig(this.root.right.value.getClass().getName())
this.root.left.value.getClass().getName() == return.getClass().getName()
this.root.left.value.getClass().getName() == orig(this.root.value.getClass().getName())
this.root.left.value.getClass().getName() == orig(this.root.left.value.getClass().getName())
this.root.left.value.getClass().getName() == orig(this.root.right.value.getClass().getName())
this.root.right.value.getClass().getName() == return.getClass().getName()
this.root.right.value.getClass().getName() == orig(this.root.value.getClass().getName())
this.root.right.value.getClass().getName() == orig(this.root.left.value.getClass().getName())
this.root.right.value.getClass().getName() == orig(this.root.right.value.getClass().getName())
return.getClass().getName() == orig(this.root.value.getClass().getName())
return.getClass().getName() == orig(this.root.left.value.getClass().getName())
return.getClass().getName() == orig(this.root.right.value.getClass().getName())
this.root != null
this.root.left.height one of { 0, 1, 2 }
this.root.left.size one of { 0, 1, 2 }
return.getClass().getName() == java.lang.String.class
DataStructures.AvlTreeList$Node.EMPTY_LEAF.height < orig(this.root.height)
DataStructures.AvlTreeList$Node.EMPTY_LEAF.height <= orig(this.root.left.height)
DataStructures.AvlTreeList$Node.EMPTY_LEAF.height <= orig(this.root.right.height)
DataStructures.AvlTreeList$Node.EMPTY_LEAF.size < orig(this.root.size)
DataStructures.AvlTreeList$Node.EMPTY_LEAF.size <= orig(this.root.left.size)
DataStructures.AvlTreeList$Node.EMPTY_LEAF.size <= orig(this.root.right.size)
DataStructures.AvlTreeList$Node.EMPTY_LEAF.size <= orig(index)
this.root.height <= orig(this.root.height)
this.root.height >= orig(this.root.left.height)
this.root.height >= orig(this.root.right.height)
this.root.size - orig(this.root.size) + 1 == 0
this.root.size >= orig(this.root.left.size)
this.root.size >= orig(this.root.right.size)
this.root.size >= orig(index)
this.root.left.height < orig(this.root.height)
this.root.left.height <= orig(this.root.left.height)
this.root.left.size < orig(this.root.size)
this.root.left.size <= orig(this.root.left.size)
this.root.right.height < orig(this.root.height)
this.root.right.size < orig(this.root.size)
this.root.size - orig(this.root.left.size) - orig(this.root.right.size) == 0
this.root.left.size + this.root.right.size - orig(this.root.size) + 2 == 0
