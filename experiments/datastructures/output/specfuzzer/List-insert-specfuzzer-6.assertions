===========================================================================
DataStructures.List:::OBJECT
FuzzedInvariant ( #(List.*(next)) != #(List.*(next)) + 1 ) holds for: this
FuzzedInvariant ( #(List.*(next)) != #(List.*(next)) - #(List.*(next)) ) holds for: this
FuzzedInvariant ( #(List.*(next)) != #(List.^(next)) ) holds for: this
FuzzedInvariant ( #(List.*(next)) != #(List.^(next)) + 0 ) holds for: this
FuzzedInvariant ( #(List.*(next)) != #(List.^(next)) - 1 ) holds for: this
FuzzedInvariant ( #(List.*(next)) != 0 ) holds for: this
FuzzedInvariant ( #(List.*(next)) <= #(List.*(next)) ) holds for: this
FuzzedInvariant ( #(List.*(next)) <= #(List.*(next)) + #(List.^(next)) ) holds for: this
FuzzedInvariant ( #(List.*(next)) <= #(List.*(next)) + 0 ) holds for: this
FuzzedInvariant ( #(List.*(next)) = #(List.*(next)) ) holds for: this
FuzzedInvariant ( #(List.*(next)) = #(List.*(next)) + 0 ) holds for: this
FuzzedInvariant ( #(List.*(next)) > #(List.*(next)) - #(List.*(next)) ) holds for: this
FuzzedInvariant ( #(List.*(next)) > #(List.*(next)) - 1 ) holds for: this
FuzzedInvariant ( #(List.*(next)) > #(List.^(next)) ) holds for: this
FuzzedInvariant ( #(List.*(next)) >= #(List.*(next)) ) holds for: this
FuzzedInvariant ( #(List.*(next)) >= #(List.*(next)) - #(List.*(next)) ) holds for: this
FuzzedInvariant ( #(List.*(next)) >= #(List.^(next)) ) holds for: this
FuzzedInvariant ( #(List.*(next)) >= #(List.^(next)) - 0 ) holds for: this
FuzzedInvariant ( #(List.*(next)) >= 0 ) holds for: this
FuzzedInvariant ( #(List.*(next)) >= 1 ) holds for: this
FuzzedInvariant ( #(List.^(next)) != #(List.*(next)) ) holds for: this
FuzzedInvariant ( #(List.^(next)) != #(List.*(next)) + 0 ) holds for: this
FuzzedInvariant ( #(List.^(next)) != #(List.*(next)) + 1 ) holds for: this
FuzzedInvariant ( #(List.^(next)) < #(List.*(next)) ) holds for: this
FuzzedInvariant ( #(List.^(next)) <= #(List.*(next)) ) holds for: this
FuzzedInvariant ( #(List.^(next)) <= #(List.*(next)) + #(List.*(next)) ) holds for: this
FuzzedInvariant ( #(List.^(next)) <= #(List.^(next)) ) holds for: this
FuzzedInvariant ( #(List.^(next)) <= #(List.^(next)) + 0 ) holds for: this
FuzzedInvariant ( #(List.^(next)) = #(List.^(next)) ) holds for: this
FuzzedInvariant ( #(List.^(next)) >= #(List.^(next)) ) holds for: this
FuzzedInvariant ( #(List.^(next)) >= #(List.^(next)) - #(List.^(next)) ) holds for: this
FuzzedInvariant ( #(List.^(next)) >= 0 ) holds for: this
FuzzedInvariant ( List.x != List.x + 1 ) holds for: this
FuzzedInvariant ( List.x <= List.x ) holds for: this
FuzzedInvariant ( List.x = List.x ) holds for: this
FuzzedInvariant ( List.x = List.x + 0 ) holds for: this
FuzzedInvariant ( List.x > List.x - 1 ) holds for: this
FuzzedInvariant ( List.x >= List.x ) holds for: this
FuzzedInvariant ( List.x >= List.x + 0 ) holds for: this
FuzzedInvariant ( List.x >= List.x - #(List.*(next)) ) holds for: this
FuzzedInvariant ( List.x >= List.x - #(List.^(next)) ) holds for: this
FuzzedInvariant ( all n : List.*(next) : n != n.next ) holds for: this
FuzzedInvariant ( all n : List.*(next) : n != n.next.next ) holds for: this
FuzzedInvariant ( all n : List.*(next) : n != null ) holds for: this
FuzzedInvariant ( all n : List.*(next) : n not in n.^(next) ) holds for: this
FuzzedInvariant ( all n : List.*(next) : n.x <= n.next.x ) holds for: this
FuzzedInvariant ( all n : List.^(next) : n != n.next ) holds for: this
FuzzedInvariant ( all n : List.^(next) : n != n.next.next ) holds for: this
FuzzedInvariant ( all n : List.^(next) : n != null ) holds for: this
FuzzedInvariant ( all n : List.^(next) : n not in n.^(next) ) holds for: this
FuzzedInvariant ( all n : List.^(next) : n.x <= n.next.x ) holds for: this
FuzzedInvariant ( all n : List.^(next) : n.x >= List.x ) holds for: this
FuzzedInvariant ( no n : List.*(next) : n = n.next ) holds for: this
FuzzedInvariant ( no n : List.*(next) : n = n.next.next ) holds for: this
FuzzedInvariant ( no n : List.*(next) : n = null ) holds for: this
FuzzedInvariant ( no n : List.*(next) : n in n.^(next) ) holds for: this
FuzzedInvariant ( no n : List.*(next) : n.x > n.next.x ) holds for: this
FuzzedInvariant ( no n : List.^(next) : n = n.next ) holds for: this
FuzzedInvariant ( no n : List.^(next) : n = n.next.next ) holds for: this
FuzzedInvariant ( no n : List.^(next) : n = null ) holds for: this
FuzzedInvariant ( no n : List.^(next) : n in n.^(next) ) holds for: this
FuzzedInvariant ( no n : List.^(next) : n.x < List.x ) holds for: this
FuzzedInvariant ( no n : List.^(next) : n.x > n.next.x ) holds for: this
FuzzedInvariant ( some n : List.*(next) : n != n.next ) holds for: this
FuzzedInvariant ( some n : List.*(next) : n != null ) holds for: this
FuzzedInvariant ( some n : List.*(next) : n not in n.^(next) ) holds for: this
FuzzedInvariant ( some n : List.*(next) : n.x != 0 ) holds for: this
FuzzedInvariant ( some n : List.*(next) : n.x != 1 ) holds for: this
FuzzedInvariant ( some n : List.*(next) : n.x <= List.x ) holds for: this
FuzzedInvariant ( some n : List.*(next) : n.x = List.x ) holds for: this
FuzzedInvariant ( some n : List.*(next) : n.x > 1 ) holds for: this
FuzzedInvariant ( some n : List.*(next) : n.x >= #(List.*(next)) ) holds for: this
FuzzedInvariant ( some n : List.*(next) : n.x >= #(List.^(next)) ) holds for: this
FuzzedInvariant ( some n : List.*(next) : n.x >= 0 ) holds for: this
FuzzedInvariant ( some n : List.*(next) : n.x >= List.x ) holds for: this
FuzzedInvariant ( #(List.*(next)) != Integer_Variable ) holds for: <this , DataStructures.List.SENTINEL>
FuzzedInvariant ( #(List.*(next)) != List.x + Integer_Variable ) holds for: <this , DataStructures.List.SENTINEL>
FuzzedInvariant ( #(List.*(next)) != List.x - Integer_Variable ) holds for: <this , DataStructures.List.SENTINEL>
FuzzedInvariant ( #(List.*(next)) < Integer_Variable ) holds for: <this , DataStructures.List.SENTINEL>
FuzzedInvariant ( #(List.*(next)) <= Integer_Variable ) holds for: <this , DataStructures.List.SENTINEL>
FuzzedInvariant ( #(List.*(next)) >= #(List.*(next)) - Integer_Variable ) holds for: <this , DataStructures.List.SENTINEL>
FuzzedInvariant ( #(List.^(next)) != Integer_Variable ) holds for: <this , DataStructures.List.SENTINEL>
FuzzedInvariant ( #(List.^(next)) != List.x + Integer_Variable ) holds for: <this , DataStructures.List.SENTINEL>
FuzzedInvariant ( #(List.^(next)) < Integer_Variable ) holds for: <this , DataStructures.List.SENTINEL>
FuzzedInvariant ( #(List.^(next)) <= Integer_Variable ) holds for: <this , DataStructures.List.SENTINEL>
FuzzedInvariant ( #(List.^(next)) > #(List.*(next)) + Integer_Variable ) holds for: <this , DataStructures.List.SENTINEL>
FuzzedInvariant ( #(List.^(next)) > #(List.*(next)) - Integer_Variable ) holds for: <this , DataStructures.List.SENTINEL>
FuzzedInvariant ( #(List.^(next)) > #(List.^(next)) - Integer_Variable ) holds for: <this , DataStructures.List.SENTINEL>
FuzzedInvariant ( #(List.^(next)) >= #(List.*(next)) + Integer_Variable ) holds for: <this , DataStructures.List.SENTINEL>
FuzzedInvariant ( #(List.^(next)) >= #(List.^(next)) - Integer_Variable ) holds for: <this , DataStructures.List.SENTINEL>
FuzzedInvariant ( Integer_Variable in List.*(next).x ) holds for: <this , DataStructures.List.SENTINEL>
FuzzedInvariant ( List.x != #(List.*(next)) + Integer_Variable ) holds for: <this , DataStructures.List.SENTINEL>
FuzzedInvariant ( List.x != List.x + Integer_Variable ) holds for: <this , DataStructures.List.SENTINEL>
FuzzedInvariant ( List.x != List.x - Integer_Variable ) holds for: <this , DataStructures.List.SENTINEL>
FuzzedInvariant ( List.x <= Integer_Variable ) holds for: <this , DataStructures.List.SENTINEL>
FuzzedInvariant ( List.x > #(List.*(next)) - Integer_Variable ) holds for: <this , DataStructures.List.SENTINEL>
FuzzedInvariant ( List.x > #(List.^(next)) - Integer_Variable ) holds for: <this , DataStructures.List.SENTINEL>
FuzzedInvariant ( List.x >= #(List.*(next)) + Integer_Variable ) holds for: <this , DataStructures.List.SENTINEL>
FuzzedInvariant ( List.x >= #(List.*(next)) - Integer_Variable ) holds for: <this , DataStructures.List.SENTINEL>
FuzzedInvariant ( List.x >= #(List.^(next)) + Integer_Variable ) holds for: <this , DataStructures.List.SENTINEL>
FuzzedInvariant ( all n : List.*(next) : n.x <= Integer_Variable ) holds for: <this , DataStructures.List.SENTINEL>
FuzzedInvariant ( all n : List.^(next) : n.x <= Integer_Variable ) holds for: <this , DataStructures.List.SENTINEL>
FuzzedInvariant ( no n : List.*(next) : n.x > Integer_Variable ) holds for: <this , DataStructures.List.SENTINEL>
FuzzedInvariant ( no n : List.^(next) : n.x > Integer_Variable ) holds for: <this , DataStructures.List.SENTINEL>
FuzzedInvariant ( some n : List.*(next) : n.x <= Integer_Variable ) holds for: <this , DataStructures.List.SENTINEL>
FuzzedInvariant ( some n : List.*(next) : n.x = Integer_Variable ) holds for: <this , DataStructures.List.SENTINEL>
FuzzedInvariant ( some n : List.*(next) : n.x >= Integer_Variable ) holds for: <this , DataStructures.List.SENTINEL>
this.x <= this.next.x
this.x <= this.next.next.x
this.next.x <= this.next.next.x
===========================================================================
DataStructures.List.insert(int):::ENTER
FuzzedInvariant ( some n : List.*(next) : n.x != Integer_Variable ) holds for: <this , data>
FuzzedInvariant ( some n : List.*(next) : n.x > Integer_Variable ) holds for: <this , data>
FuzzedInvariant ( some n : List.*(next) : n.x >= Integer_Variable ) holds for: <this , data>
===========================================================================
DataStructures.List.insert(int):::EXIT
this.next != null
FuzzedInvariant ( #(List.*(next)) != #(List.*(next)) - #(List.^(next)) ) holds for: orig(this)
FuzzedInvariant ( #(List.*(next)) != 1 ) holds for: orig(this)
FuzzedInvariant ( #(List.*(next)) > 1 ) holds for: orig(this)
FuzzedInvariant ( #(List.^(next)) != 0 ) holds for: orig(this)
FuzzedInvariant ( #(List.^(next)) > 0 ) holds for: orig(this)
FuzzedInvariant ( #(List.^(next)) >= 1 ) holds for: orig(this)
FuzzedInvariant ( List.x != List.x + #(List.^(next)) ) holds for: orig(this)
FuzzedInvariant ( List.x < #(List.^(next)) + List.x ) holds for: orig(this)
FuzzedInvariant ( List.x < List.x + 1 ) holds for: orig(this)
FuzzedInvariant ( List.x <= List.x + 1 ) holds for: orig(this)
FuzzedInvariant ( some n : List.*(next) : n != n.next.next ) holds for: orig(this)
FuzzedInvariant ( some n : List.*(next) : n.x != n.next.x ) holds for: orig(this)
FuzzedInvariant ( some n : List.*(next) : n.x < n.next.x ) holds for: orig(this)
FuzzedInvariant ( some n : List.*(next) : n.x <= n.next.x ) holds for: orig(this)
FuzzedInvariant ( some n : List.^(next) : n != n.next ) holds for: orig(this)
FuzzedInvariant ( some n : List.^(next) : n != null ) holds for: orig(this)
FuzzedInvariant ( some n : List.^(next) : n not in n.^(next) ) holds for: orig(this)
FuzzedInvariant ( some n : List.^(next) : n.x != #(List.*(next)) ) holds for: orig(this)
FuzzedInvariant ( some n : List.^(next) : n.x != 0 ) holds for: orig(this)
FuzzedInvariant ( some n : List.^(next) : n.x > 0 ) holds for: orig(this)
FuzzedInvariant ( some n : List.^(next) : n.x > 1 ) holds for: orig(this)
FuzzedInvariant ( some n : List.^(next) : n.x > List.x ) holds for: orig(this)
FuzzedInvariant ( some n : List.^(next) : n.x >= #(List.*(next)) ) holds for: orig(this)
FuzzedInvariant ( some n : List.^(next) : n.x >= 0 ) holds for: orig(this)
FuzzedInvariant ( some n : List.^(next) : n.x >= 1 ) holds for: orig(this)
FuzzedInvariant ( #(List.*(next)) != List.x - Integer_Variable ) holds for: <this.x , orig(this)>
FuzzedInvariant ( #(List.*(next)) > List.x - Integer_Variable ) holds for: <this.x , orig(this)>
FuzzedInvariant ( #(List.*(next)) >= List.x - Integer_Variable ) holds for: <this.x , orig(this)>
FuzzedInvariant ( #(List.^(next)) != List.x - Integer_Variable ) holds for: <this.x , orig(this)>
FuzzedInvariant ( #(List.^(next)) >= List.x - Integer_Variable ) holds for: <this.x , orig(this)>
FuzzedInvariant ( Integer_Variable in List.*(next).x ) holds for: <this.x , orig(this)>
FuzzedInvariant ( List.x != #(List.*(next)) + Integer_Variable ) holds for: <this.x , orig(this)>
FuzzedInvariant ( List.x != #(List.^(next)) + Integer_Variable ) holds for: <this.x , orig(this)>
FuzzedInvariant ( List.x < #(List.*(next)) + Integer_Variable ) holds for: <this.x , orig(this)>
FuzzedInvariant ( List.x < #(List.^(next)) + Integer_Variable ) holds for: <this.x , orig(this)>
FuzzedInvariant ( List.x <= #(List.*(next)) + Integer_Variable ) holds for: <this.x , orig(this)>
FuzzedInvariant ( List.x <= Integer_Variable ) holds for: <this.x , orig(this)>
FuzzedInvariant ( List.x = Integer_Variable ) holds for: <this.x , orig(this)>
FuzzedInvariant ( List.x >= Integer_Variable ) holds for: <this.x , orig(this)>
FuzzedInvariant ( all n : List.*(next) : n.x >= Integer_Variable ) holds for: <this.x , orig(this)>
FuzzedInvariant ( all n : List.^(next) : n.x >= Integer_Variable ) holds for: <this.x , orig(this)>
FuzzedInvariant ( some n : List.*(next) : n.x != Integer_Variable ) holds for: <this.x , orig(this)>
FuzzedInvariant ( some n : List.*(next) : n.x <= Integer_Variable ) holds for: <this.x , orig(this)>
FuzzedInvariant ( some n : List.*(next) : n.x = Integer_Variable ) holds for: <this.x , orig(this)>
FuzzedInvariant ( some n : List.*(next) : n.x > Integer_Variable ) holds for: <this.x , orig(this)>
FuzzedInvariant ( some n : List.*(next) : n.x >= Integer_Variable ) holds for: <this.x , orig(this)>
FuzzedInvariant ( some n : List.^(next) : n.x > Integer_Variable ) holds for: <this.x , orig(this)>
FuzzedInvariant ( some n : List.^(next) : n.x >= Integer_Variable ) holds for: <this.x , orig(this)>
this.x <= \old(this.x)
this.x <= \old(this.next.x)
this.x <= \old(this.next.next.x)
this.x <= \old(data)
FuzzedInvariant ( #(List.*(next)) != List.x - Integer_Variable ) holds for: <this.next.x , orig(this)>
FuzzedInvariant ( #(List.^(next)) != List.x - Integer_Variable ) holds for: <this.next.x , orig(this)>
FuzzedInvariant ( Integer_Variable in List.*(next).x ) holds for: <this.next.x , orig(this)>
FuzzedInvariant ( Integer_Variable in List.^(next).x ) holds for: <this.next.x , orig(this)>
FuzzedInvariant ( List.x != #(List.*(next)) + Integer_Variable ) holds for: <this.next.x , orig(this)>
FuzzedInvariant ( List.x != #(List.^(next)) + Integer_Variable ) holds for: <this.next.x , orig(this)>
FuzzedInvariant ( List.x <= Integer_Variable ) holds for: <this.next.x , orig(this)>
FuzzedInvariant ( all n : List.^(next) : n.x >= Integer_Variable ) holds for: <this.next.x , orig(this)>
FuzzedInvariant ( some n : List.*(next) : n.x != Integer_Variable ) holds for: <this.next.x , orig(this)>
FuzzedInvariant ( some n : List.*(next) : n.x <= Integer_Variable ) holds for: <this.next.x , orig(this)>
FuzzedInvariant ( some n : List.*(next) : n.x = Integer_Variable ) holds for: <this.next.x , orig(this)>
FuzzedInvariant ( some n : List.*(next) : n.x >= Integer_Variable ) holds for: <this.next.x , orig(this)>
FuzzedInvariant ( some n : List.^(next) : n.x <= Integer_Variable ) holds for: <this.next.x , orig(this)>
FuzzedInvariant ( some n : List.^(next) : n.x >= Integer_Variable ) holds for: <this.next.x , orig(this)>
this.next.x >= \old(this.x)
this.next.x <= \old(this.next.x)
this.next.x <= \old(this.next.next.x)
this.next.next.x >= \old(this.x)
this.next.next.x >= \old(this.next.x)
this.next.next.x <= \old(this.next.next.x)
FuzzedInvariant ( #(List.^(next)) != List.x - Integer_Variable ) holds for: <DataStructures.List.SENTINEL , orig(this)>
FuzzedInvariant ( #(List.^(next)) >= #(List.^(next)) + Integer_Variable ) holds for: <DataStructures.List.SENTINEL , orig(this)>
FuzzedInvariant ( Integer_Variable in List.^(next).x ) holds for: <DataStructures.List.SENTINEL , orig(this)>
FuzzedInvariant ( List.x != #(List.^(next)) + Integer_Variable ) holds for: <DataStructures.List.SENTINEL , orig(this)>
FuzzedInvariant ( List.x != Integer_Variable ) holds for: <DataStructures.List.SENTINEL , orig(this)>
FuzzedInvariant ( List.x < Integer_Variable ) holds for: <DataStructures.List.SENTINEL , orig(this)>
FuzzedInvariant ( some n : List.*(next) : n.x != Integer_Variable ) holds for: <DataStructures.List.SENTINEL , orig(this)>
FuzzedInvariant ( some n : List.*(next) : n.x < Integer_Variable ) holds for: <DataStructures.List.SENTINEL , orig(this)>
FuzzedInvariant ( some n : List.^(next) : n.x <= Integer_Variable ) holds for: <DataStructures.List.SENTINEL , orig(this)>
FuzzedInvariant ( some n : List.^(next) : n.x >= Integer_Variable ) holds for: <DataStructures.List.SENTINEL , orig(this)>
FuzzedInvariant ( #(List.*(next)) != List.x - Integer_Variable ) holds for: <orig(this) , orig(data)>
FuzzedInvariant ( #(List.*(next)) > List.x - Integer_Variable ) holds for: <orig(this) , orig(data)>
FuzzedInvariant ( #(List.*(next)) >= List.x - Integer_Variable ) holds for: <orig(this) , orig(data)>
FuzzedInvariant ( #(List.^(next)) != List.x - Integer_Variable ) holds for: <orig(this) , orig(data)>
FuzzedInvariant ( #(List.^(next)) >= List.x - Integer_Variable ) holds for: <orig(this) , orig(data)>
FuzzedInvariant ( Integer_Variable in List.*(next).x ) holds for: <orig(this) , orig(data)>
FuzzedInvariant ( List.x != #(List.*(next)) + Integer_Variable ) holds for: <orig(this) , orig(data)>
FuzzedInvariant ( List.x != #(List.^(next)) + Integer_Variable ) holds for: <orig(this) , orig(data)>
FuzzedInvariant ( List.x < #(List.*(next)) + Integer_Variable ) holds for: <orig(this) , orig(data)>
FuzzedInvariant ( List.x < #(List.^(next)) + Integer_Variable ) holds for: <orig(this) , orig(data)>
FuzzedInvariant ( List.x <= #(List.*(next)) + Integer_Variable ) holds for: <orig(this) , orig(data)>
FuzzedInvariant ( List.x <= Integer_Variable ) holds for: <orig(this) , orig(data)>
FuzzedInvariant ( some n : List.*(next) : n.x <= Integer_Variable ) holds for: <orig(this) , orig(data)>
FuzzedInvariant ( some n : List.*(next) : n.x = Integer_Variable ) holds for: <orig(this) , orig(data)>
FuzzedInvariant ( some n : List.^(next) : n.x > Integer_Variable ) holds for: <orig(this) , orig(data)>
FuzzedInvariant ( some n : List.^(next) : n.x >= Integer_Variable ) holds for: <orig(this) , orig(data)>
