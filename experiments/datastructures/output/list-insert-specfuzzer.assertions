===========================================================================
DataStructures.List:::OBJECT
FuzzedInvariant ( #(List.^(next)) <= #(List.*(next)) + 0 ) holds for: this
FuzzedInvariant ( #(List.^(next)) <= #(List.*(next)) - 0 ) holds for: this
FuzzedInvariant ( List.x = List.x ) holds for: this
FuzzedInvariant ( all n : List.*(next) : n in n.*(next) ) holds for: this
FuzzedInvariant ( all n : List.*(next) : n.x <= n.next.x ) holds for: this
FuzzedInvariant ( all n : List.^(next) : n in n.*(next) ) holds for: this
FuzzedInvariant ( no n : List.^(next) : n = null ) holds for: this
FuzzedInvariant ( some n : List.*(next) : n.x = List.x ) holds for: this
FuzzedInvariant ( some n : List.*(next) : n.x > 0 ) holds for: this
FuzzedInvariant ( #(List.^(next)) != Integer_Variable ) holds for: <this , DataStructures.List.SENTINEL>
FuzzedInvariant ( Integer_Variable in List.*(next).x ) holds for: <this , DataStructures.List.SENTINEL>
FuzzedInvariant ( no n : List.*(next) : n.x > Integer_Variable ) holds for: <this , DataStructures.List.SENTINEL>
FuzzedInvariant ( some n : List.*(next) : n.x >= Integer_Variable ) holds for: <this , DataStructures.List.SENTINEL>
this.x <= this.next.x
this.x <= this.next.next.x
this.next.x <= this.next.next.x
===========================================================================
DataStructures.List.insert(int):::ENTER
FuzzedInvariant ( some n : List.*(next) : n.x >= Integer_Variable ) holds for: <this , data>
===========================================================================
DataStructures.List.insert(int):::EXIT
this.next != null
FuzzedInvariant ( List.x < List.x + 1 ) holds for: orig(this)
FuzzedInvariant ( List.x > List.x - #(List.^(next)) ) holds for: orig(this)
FuzzedInvariant ( #(List.*(next)) >= List.x - Integer_Variable ) holds for: <this.x , orig(this)>
FuzzedInvariant ( Integer_Variable in List.*(next).x ) holds for: <this.x , orig(this)>
FuzzedInvariant ( some n : List.*(next) : n.x >= Integer_Variable ) holds for: <this.x , orig(this)>
this.x <= orig(this.x)
this.x <= orig(this.next.x)
this.x <= orig(this.next.next.x)
this.x <= orig(data)
FuzzedInvariant ( Integer_Variable in List.*(next).x ) holds for: <this.next.x , orig(this)>
FuzzedInvariant ( Integer_Variable in List.^(next).x ) holds for: <this.next.x , orig(this)>
FuzzedInvariant ( some n : List.*(next) : n.x >= Integer_Variable ) holds for: <this.next.x , orig(this)>
this.next.x >= orig(this.x)
this.next.x <= orig(this.next.x)
this.next.x <= orig(this.next.next.x)
this.next.next.x >= orig(this.x)
this.next.next.x >= orig(this.next.x)
this.next.next.x <= orig(this.next.next.x)
FuzzedInvariant ( Integer_Variable in List.^(next).x ) holds for: <DataStructures.List.SENTINEL , orig(this)>
FuzzedInvariant ( List.x != Integer_Variable ) holds for: <DataStructures.List.SENTINEL , orig(this)>
FuzzedInvariant ( #(List.*(next)) >= List.x - Integer_Variable ) holds for: <orig(this) , orig(data)>
FuzzedInvariant ( Integer_Variable in List.*(next).x ) holds for: <orig(this) , orig(data)>
