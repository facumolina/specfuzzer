package testers;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class TreeListTester0 {

    public static boolean debug = false;

    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test001");
        DataStructures.commonscollections.TreeList<java.util.ArrayList<java.lang.Comparable<java.lang.String>>> strComparableListList0 = new DataStructures.commonscollections.TreeList<java.util.ArrayList<java.lang.Comparable<java.lang.String>>>();
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test002");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList1 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableList1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableList1.size();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable6 = strComparableList1.set(4, (java.lang.Comparable<java.lang.String>) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:4, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test003");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator3 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList0.replaceAll(strComparableUnaryOperator3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test004");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        // The following exception was thrown during execution in test generation
        try {
            strComparableList0.add((-7), (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-7, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test005");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList8 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int10 = strComparableList8.indexOf((java.lang.Object) (-7));
        strComparableList8.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = strComparableList2.addAll((-10), (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -10, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test006");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList11 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList11.size();
        boolean boolean14 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList11);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList18 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean22 = strComparableList18.remove((java.lang.Object) 10.0f);
        boolean boolean24 = strComparableList18.remove((java.lang.Object) 0);
        boolean boolean25 = strComparableList18.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList29 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean31 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean33 = strComparableList29.remove((java.lang.Object) 10.0f);
        boolean boolean34 = strComparableList18.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList29);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean35 = strComparableList2.addAll(7, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList18);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 7, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test007");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        int int4 = strComparableList0.indexOf((java.lang.Object) (-1.0d));
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable7 = strComparableList0.set((int) (short) 100, (java.lang.Comparable<java.lang.String>) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:100, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test008");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator13 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList9.replaceAll(strComparableUnaryOperator13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test009");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableList17.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList24 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean26 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableList24.indexOf((java.lang.Object) (-3));
        boolean boolean29 = strComparableList17.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList24);
        boolean boolean31 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        int int32 = strComparableList2.indexOf((java.lang.Object) "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable35 = strComparableList2.set((int) ' ', (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:32, size=4");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test010");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable8 = strComparableList2.remove((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-1, size=2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test011");
        DataStructures.commonscollections.TreeList<java.util.RandomAccess> randomAccessList0 = new DataStructures.commonscollections.TreeList<java.util.RandomAccess>();
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test012");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList1 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableList1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableList1.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList7 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableList7.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean9 = strComparableList7.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList7.remove((java.lang.Object) 10.0f);
        boolean boolean13 = strComparableList7.remove((java.lang.Object) 0);
        boolean boolean14 = strComparableList7.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList18 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean22 = strComparableList18.remove((java.lang.Object) 10.0f);
        boolean boolean23 = strComparableList7.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList18);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int27 = strComparableList25.indexOf((java.lang.Object) (-7));
        int int29 = strComparableList25.indexOf((java.lang.Object) (-1.0d));
        boolean boolean30 = strComparableList18.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList25);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean31 = strComparableList1.addAll((-3), (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList25);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -3, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test013");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        int int14 = strComparableList2.indexOf((java.lang.Object) strComparableList9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable17 = strComparableList9.set((int) (byte) 10, (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:10, size=3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test014");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable4 = strComparableList0.remove((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:1, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test015");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList13 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean17 = strComparableList13.remove((java.lang.Object) 10.0f);
        boolean boolean18 = strComparableList2.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int22 = strComparableList20.indexOf((java.lang.Object) (-7));
        int int24 = strComparableList20.indexOf((java.lang.Object) (-1.0d));
        boolean boolean25 = strComparableList13.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable27 = strComparableList20.remove((-4));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-4, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test016");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList11 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList11.size();
        boolean boolean14 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList11);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList15 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean22 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean23 = strComparableList15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList18);
        boolean boolean24 = strComparableList2.remove((java.lang.Object) strComparableList15);
        boolean boolean25 = strComparableList15.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList29 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean31 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList29.indexOf((java.lang.Object) 10.0f);
        int int34 = strComparableList29.size();
        boolean boolean35 = strComparableList29.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList36 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int38 = strComparableList36.indexOf((java.lang.Object) (-7));
        boolean boolean39 = strComparableList29.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList36);
        boolean boolean41 = strComparableList29.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int42 = strComparableList29.getSizeField();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean43 = strComparableList15.addAll((-100), (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList29);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -100, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test017");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList9 = strComparableList2.subList(7, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test018");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList11 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList11.size();
        boolean boolean14 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList11);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList15 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean22 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean23 = strComparableList15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList18);
        boolean boolean24 = strComparableList2.remove((java.lang.Object) strComparableList15);
        int int26 = strComparableList15.indexOf((java.lang.Object) 1);
        // The following exception was thrown during execution in test generation
        try {
            strComparableList15.add((int) (byte) 100, (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:100, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test019");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableList17.size();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = strComparableList9.addAll(6, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList17);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 6, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test020");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList3 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean4 = strComparableList3.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean5 = strComparableList3.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean7 = strComparableList3.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean8 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList3);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable10 = strComparableList0.get((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:0, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test021");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        int int15 = strComparableList2.getSizeField();
        int int16 = strComparableList2.getSizeField();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList19 = strComparableList2.subList(10, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(10) > toIndex(2)");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test022");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList3 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean4 = strComparableList3.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean5 = strComparableList3.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean7 = strComparableList3.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean8 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList3);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable11 = strComparableList3.set((-7), (java.lang.Comparable<java.lang.String>) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-7, size=3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test023");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList13 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean17 = strComparableList13.remove((java.lang.Object) 10.0f);
        boolean boolean18 = strComparableList2.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator19 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList2.replaceAll(strComparableUnaryOperator19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test024");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableList17.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList24 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean26 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableList24.indexOf((java.lang.Object) (-3));
        boolean boolean29 = strComparableList17.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList24);
        boolean boolean31 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        int int32 = strComparableList2.indexOf((java.lang.Object) "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable34 = strComparableList2.get((-9));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-9, size=4");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test025");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList3 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean4 = strComparableList3.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean5 = strComparableList3.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean7 = strComparableList3.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean8 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList3);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable10 = strComparableList3.get((-3));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-3, size=3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test026");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator10 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList2.replaceAll(strComparableUnaryOperator10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test027");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        int int14 = strComparableList9.indexOf((java.lang.Object) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable16 = strComparableList9.get(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:1, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test028");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList13 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean17 = strComparableList13.remove((java.lang.Object) 10.0f);
        boolean boolean18 = strComparableList2.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int22 = strComparableList20.indexOf((java.lang.Object) (-7));
        int int24 = strComparableList20.indexOf((java.lang.Object) (-1.0d));
        boolean boolean25 = strComparableList13.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList29 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean31 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList29.indexOf((java.lang.Object) 10.0f);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean34 = strComparableList20.addAll(7, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList29);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 7, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test029");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        int int15 = strComparableList9.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableList18.indexOf((java.lang.Object) 10.0f);
        int int23 = strComparableList18.size();
        boolean boolean24 = strComparableList18.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int27 = strComparableList25.indexOf((java.lang.Object) (-7));
        boolean boolean28 = strComparableList18.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList25);
        boolean boolean30 = strComparableList18.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int31 = strComparableList18.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList34 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean36 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableList34.indexOf((java.lang.Object) 10.0f);
        int int39 = strComparableList34.size();
        boolean boolean40 = strComparableList34.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList41 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int43 = strComparableList41.indexOf((java.lang.Object) (-7));
        boolean boolean44 = strComparableList34.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList41);
        boolean boolean45 = strComparableList18.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList34);
        boolean boolean46 = strComparableList9.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList34);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList49 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean51 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean53 = strComparableList49.remove((java.lang.Object) 10.0f);
        boolean boolean55 = strComparableList49.remove((java.lang.Object) 0);
        boolean boolean56 = strComparableList49.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList58 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableList58.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableList58.size();
        boolean boolean61 = strComparableList49.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList58);
        int int62 = strComparableList58.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList65 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableList65.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean67 = strComparableList65.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int69 = strComparableList65.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList72 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean73 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean74 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int76 = strComparableList72.indexOf((java.lang.Object) (-3));
        boolean boolean77 = strComparableList65.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList72);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList80 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean81 = strComparableList80.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean82 = strComparableList80.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int84 = strComparableList80.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList87 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean88 = strComparableList87.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean89 = strComparableList87.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int91 = strComparableList87.indexOf((java.lang.Object) (-3));
        boolean boolean92 = strComparableList80.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList87);
        boolean boolean94 = strComparableList80.add((java.lang.Comparable<java.lang.String>) "");
        int int95 = strComparableList65.indexOf((java.lang.Object) "");
        boolean boolean96 = strComparableList58.remove((java.lang.Object) int95);
        boolean boolean97 = strComparableList9.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList58);
        boolean boolean99 = strComparableList58.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test030");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        int int15 = strComparableList9.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableList18.indexOf((java.lang.Object) 10.0f);
        int int23 = strComparableList18.size();
        boolean boolean24 = strComparableList18.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int27 = strComparableList25.indexOf((java.lang.Object) (-7));
        boolean boolean28 = strComparableList18.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList25);
        boolean boolean30 = strComparableList18.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int31 = strComparableList18.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList34 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean36 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableList34.indexOf((java.lang.Object) 10.0f);
        int int39 = strComparableList34.size();
        boolean boolean40 = strComparableList34.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList41 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int43 = strComparableList41.indexOf((java.lang.Object) (-7));
        boolean boolean44 = strComparableList34.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList41);
        boolean boolean45 = strComparableList18.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList34);
        boolean boolean46 = strComparableList9.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList34);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable49 = strComparableList9.set((int) (short) 1, (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:1, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test031");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable14 = strComparableList9.remove((-9));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-9, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test032");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList0.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList9 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.remove((java.lang.Object) 10.0f);
        boolean boolean15 = strComparableList9.remove((java.lang.Object) 0);
        boolean boolean16 = strComparableList9.isEmpty();
        boolean boolean17 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList21 = strComparableList18.subList(2, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test033");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable18 = strComparableList2.remove((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable20 = strComparableList2.get((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:32, size=4");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test034");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.getSizeField();
        boolean boolean17 = strComparableList2.remove((java.lang.Object) (byte) 100);
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator18 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList2.replaceAll(strComparableUnaryOperator18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test035");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList0.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList9 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.remove((java.lang.Object) 10.0f);
        boolean boolean15 = strComparableList9.remove((java.lang.Object) 0);
        boolean boolean16 = strComparableList9.isEmpty();
        boolean boolean17 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int20 = strComparableList18.indexOf((java.lang.Object) (-7));
        strComparableList18.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList18.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList27 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean29 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean31 = strComparableList27.remove((java.lang.Object) 10.0f);
        boolean boolean33 = strComparableList27.remove((java.lang.Object) 0);
        boolean boolean34 = strComparableList27.isEmpty();
        boolean boolean35 = strComparableList18.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList27);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList36 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList27);
        int int37 = strComparableList0.indexOf((java.lang.Object) strComparableList27);
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator38 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList0.replaceAll(strComparableUnaryOperator38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test036");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList11 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList11.size();
        boolean boolean14 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList11);
        int int15 = strComparableList11.getSizeField();
        int int17 = strComparableList11.indexOf((java.lang.Object) (-10));
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test037");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableList0.indexOf((java.lang.Object) false);
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList0.replaceAll(strComparableUnaryOperator8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test038");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList6 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int8 = strComparableList6.indexOf((java.lang.Object) (-7));
        int int10 = strComparableList6.indexOf((java.lang.Object) (-1.0d));
        boolean boolean11 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList6);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableList13.size();
        boolean boolean16 = strComparableList0.remove((java.lang.Object) strComparableList13);
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator17 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList13.replaceAll(strComparableUnaryOperator17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test039");
        DataStructures.commonscollections.TreeList<java.util.AbstractCollection<java.lang.Comparable<java.lang.String>>> strComparableCollectionList0 = new DataStructures.commonscollections.TreeList<java.util.AbstractCollection<java.lang.Comparable<java.lang.String>>>();
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test040");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        boolean boolean4 = strComparableList0.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator5 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList0.replaceAll(strComparableUnaryOperator5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test041");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList0.size();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable9 = strComparableList0.set((-1), (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-1, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test042");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        int int15 = strComparableList2.getSizeField();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList18 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean22 = strComparableList18.remove((java.lang.Object) 10.0f);
        boolean boolean24 = strComparableList18.remove((java.lang.Object) 0);
        boolean boolean25 = strComparableList18.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList29 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean31 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean33 = strComparableList29.remove((java.lang.Object) 10.0f);
        boolean boolean34 = strComparableList18.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList29);
        boolean boolean35 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList29);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList37 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int39 = strComparableList37.indexOf((java.lang.Object) (-7));
        strComparableList37.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableList37.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList46 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableList46.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean48 = strComparableList46.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean50 = strComparableList46.remove((java.lang.Object) 10.0f);
        boolean boolean52 = strComparableList46.remove((java.lang.Object) 0);
        boolean boolean53 = strComparableList46.isEmpty();
        boolean boolean54 = strComparableList37.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList46);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList55 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int57 = strComparableList55.indexOf((java.lang.Object) (-7));
        strComparableList55.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int61 = strComparableList55.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList64 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean66 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean68 = strComparableList64.remove((java.lang.Object) 10.0f);
        boolean boolean70 = strComparableList64.remove((java.lang.Object) 0);
        boolean boolean71 = strComparableList64.isEmpty();
        boolean boolean72 = strComparableList55.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList64);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList73 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList64);
        int int74 = strComparableList37.indexOf((java.lang.Object) strComparableList64);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean75 = strComparableList2.addAll((-4), (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList64);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -4, Size: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test043");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList1 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableList1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableList1.size();
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator4 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList1.replaceAll(strComparableUnaryOperator4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test044");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList6 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int8 = strComparableList6.indexOf((java.lang.Object) (-7));
        int int10 = strComparableList6.indexOf((java.lang.Object) (-1.0d));
        boolean boolean11 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList6);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableList13.size();
        boolean boolean16 = strComparableList0.remove((java.lang.Object) strComparableList13);
        boolean boolean18 = strComparableList0.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int22 = strComparableList20.indexOf((java.lang.Object) (-7));
        strComparableList20.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean27 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean29 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList32 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean34 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableList32.indexOf((java.lang.Object) 10.0f);
        int int37 = strComparableList32.size();
        boolean boolean38 = strComparableList20.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList32);
        int int39 = strComparableList32.getSizeField();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean40 = strComparableList0.addAll(5, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList32);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 5, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test045");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList6 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int8 = strComparableList6.indexOf((java.lang.Object) (-7));
        int int10 = strComparableList6.indexOf((java.lang.Object) (-1.0d));
        boolean boolean11 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList6);
        java.lang.Comparable<java.lang.String> strComparable13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable14 = strComparableList6.set(2, strComparable13);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:2, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test046");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList3 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean4 = strComparableList3.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean5 = strComparableList3.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean7 = strComparableList3.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean8 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList3);
        int int9 = strComparableList0.size();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable11 = strComparableList0.remove((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:1, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test047");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableList17.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList24 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean26 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableList24.indexOf((java.lang.Object) (-3));
        boolean boolean29 = strComparableList17.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList24);
        boolean boolean31 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        int int32 = strComparableList2.indexOf((java.lang.Object) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList35 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean37 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean39 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList42 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean44 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean46 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        int int47 = strComparableList35.indexOf((java.lang.Object) strComparableList42);
        boolean boolean48 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList35);
        strComparableList35.add(0, (java.lang.Comparable<java.lang.String>) "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable53 = strComparableList35.get((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-1, size=4");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test048");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int19 = strComparableList17.indexOf((java.lang.Object) (-7));
        boolean boolean21 = strComparableList17.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList24 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean26 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean28 = strComparableList24.remove((java.lang.Object) 10.0f);
        boolean boolean29 = strComparableList17.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList24);
        strComparableList17.clear();
        boolean boolean31 = strComparableList2.remove((java.lang.Object) strComparableList17);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable33 = strComparableList17.get((-8));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-8, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test049");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList11 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList11.size();
        boolean boolean14 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList11);
        int int15 = strComparableList11.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableList18.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean27 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableList25.indexOf((java.lang.Object) (-3));
        boolean boolean30 = strComparableList18.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList25);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList33 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableList33.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean35 = strComparableList33.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int37 = strComparableList33.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList40 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableList40.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean42 = strComparableList40.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableList40.indexOf((java.lang.Object) (-3));
        boolean boolean45 = strComparableList33.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList40);
        boolean boolean47 = strComparableList33.add((java.lang.Comparable<java.lang.String>) "");
        int int48 = strComparableList18.indexOf((java.lang.Object) "");
        boolean boolean49 = strComparableList11.remove((java.lang.Object) int48);
        java.util.Collection<java.lang.Comparable<java.lang.String>> strComparableCollection50 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean51 = strComparableList11.addAll(strComparableCollection50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test050");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        int int14 = strComparableList9.indexOf((java.lang.Object) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable16 = strComparableList9.remove((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-1, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test051");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable18 = strComparableList2.get(9);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:9, size=5");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test052");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        java.lang.Comparable<java.lang.String> strComparable4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable5 = strComparableList0.set((-7), strComparable4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-7, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test053");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        int int25 = strComparableList2.indexOf((java.lang.Object) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int28 = strComparableList26.indexOf((java.lang.Object) (-7));
        strComparableList26.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList26.indexOf((java.lang.Object) false);
        int int34 = strComparableList26.getSizeField();
        int int35 = strComparableList26.getSizeField();
        boolean boolean36 = strComparableList20.remove((java.lang.Object) strComparableList26);
        // The following exception was thrown during execution in test generation
        try {
            strComparableList26.add((int) ' ', (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:32, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test054");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableList17.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList24 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean26 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableList24.indexOf((java.lang.Object) (-3));
        boolean boolean29 = strComparableList17.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList24);
        boolean boolean31 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        int int32 = strComparableList2.indexOf((java.lang.Object) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList35 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean37 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean39 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList42 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean44 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean46 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        int int47 = strComparableList35.indexOf((java.lang.Object) strComparableList42);
        boolean boolean48 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList35);
        boolean boolean49 = strComparableList2.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList52 = strComparableList2.subList((-9), 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: fromIndex = -9");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test055");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        int int14 = strComparableList2.indexOf((java.lang.Object) strComparableList9);
        // The following exception was thrown during execution in test generation
        try {
            strComparableList2.add(8, (java.lang.Comparable<java.lang.String>) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:8, size=3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test056");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        boolean boolean8 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean9 = strComparableList2.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable11 = strComparableList2.remove(3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:3, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test057");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.getSizeField();
        boolean boolean17 = strComparableList2.remove((java.lang.Object) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList20 = strComparableList2.subList(1, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(1) > toIndex(0)");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test058");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.getSizeField();
        int int16 = strComparableList2.size();
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator17 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList2.replaceAll(strComparableUnaryOperator17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test059");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList6 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int8 = strComparableList6.indexOf((java.lang.Object) (-7));
        int int10 = strComparableList6.indexOf((java.lang.Object) (-1.0d));
        boolean boolean11 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList6);
        // The following exception was thrown during execution in test generation
        try {
            strComparableList6.add(3, (java.lang.Comparable<java.lang.String>) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:3, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test060");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.getSizeField();
        boolean boolean17 = strComparableList2.remove((java.lang.Object) (byte) 100);
        boolean boolean19 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList22 = strComparableList2.subList(1, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 8");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test061");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable18 = strComparableList2.remove((int) (byte) 0);
        int int19 = strComparableList2.size();
        boolean boolean20 = strComparableList2.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable22 = strComparableList2.get((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:97, size=4");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test062");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        // The following exception was thrown during execution in test generation
        try {
            strComparableList2.add((-6), (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-6, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test063");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator7 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList2.replaceAll(strComparableUnaryOperator7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test064");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean7 = strComparableList0.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean9 = strComparableList0.add((java.lang.Comparable<java.lang.String>) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList12 = strComparableList0.subList(5, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(5) > toIndex(-1)");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test065");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean7 = strComparableList0.add((java.lang.Comparable<java.lang.String>) "");
        int int8 = strComparableList0.getSizeField();
        boolean boolean9 = strComparableList0.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList12 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableList12.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean14 = strComparableList12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int16 = strComparableList12.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList19 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableList19.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean21 = strComparableList19.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableList19.indexOf((java.lang.Object) (-3));
        boolean boolean24 = strComparableList12.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList19);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList27 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean29 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int31 = strComparableList27.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList34 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean36 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableList34.indexOf((java.lang.Object) (-3));
        boolean boolean39 = strComparableList27.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList34);
        boolean boolean41 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "");
        int int42 = strComparableList12.indexOf((java.lang.Object) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList45 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableList45.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean47 = strComparableList45.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean49 = strComparableList45.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList52 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean54 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean56 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "");
        int int57 = strComparableList45.indexOf((java.lang.Object) strComparableList52);
        boolean boolean58 = strComparableList12.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList45);
        java.lang.Comparable<java.lang.String> strComparable60 = strComparableList12.remove(4);
        boolean boolean61 = strComparableList0.remove((java.lang.Object) strComparable60);
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test066");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList6 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int8 = strComparableList6.indexOf((java.lang.Object) (-7));
        int int10 = strComparableList6.indexOf((java.lang.Object) (-1.0d));
        boolean boolean11 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList6);
        boolean boolean13 = strComparableList6.add((java.lang.Comparable<java.lang.String>) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            strComparableList6.add(10, (java.lang.Comparable<java.lang.String>) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:10, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test067");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList0.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList9 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.remove((java.lang.Object) 10.0f);
        boolean boolean15 = strComparableList9.remove((java.lang.Object) 0);
        boolean boolean16 = strComparableList9.isEmpty();
        boolean boolean17 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean19 = strComparableList0.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList23 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableList23.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean25 = strComparableList23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int27 = strComparableList23.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList30 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean32 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableList30.indexOf((java.lang.Object) (-3));
        boolean boolean35 = strComparableList23.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList30);
        boolean boolean37 = strComparableList23.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList23.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList41 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableList41.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean43 = strComparableList41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int45 = strComparableList41.indexOf((java.lang.Object) (-3));
        int int46 = strComparableList23.indexOf((java.lang.Object) strComparableList41);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean47 = strComparableList0.addAll((-9), (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList41);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -9, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test068");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        int int4 = strComparableList0.indexOf((java.lang.Object) 10.0d);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList7 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableList7.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean9 = strComparableList7.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList7.remove((java.lang.Object) 10.0f);
        boolean boolean13 = strComparableList7.remove((java.lang.Object) 0);
        boolean boolean14 = strComparableList7.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList18 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean22 = strComparableList18.remove((java.lang.Object) 10.0f);
        boolean boolean23 = strComparableList7.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList18);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int27 = strComparableList25.indexOf((java.lang.Object) (-7));
        int int29 = strComparableList25.indexOf((java.lang.Object) (-1.0d));
        boolean boolean30 = strComparableList18.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList25);
        boolean boolean31 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList25);
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator32 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList0.replaceAll(strComparableUnaryOperator32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test069");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableList17.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList24 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean26 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableList24.indexOf((java.lang.Object) (-3));
        boolean boolean29 = strComparableList17.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList24);
        boolean boolean31 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        int int32 = strComparableList2.indexOf((java.lang.Object) "");
        java.lang.Comparable<java.lang.String> strComparable35 = strComparableList2.set(0, (java.lang.Comparable<java.lang.String>) "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable38 = strComparableList2.set(10, (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:10, size=4");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test070");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList11 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList11.size();
        boolean boolean14 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList11);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList16 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int18 = strComparableList16.indexOf((java.lang.Object) (-7));
        boolean boolean20 = strComparableList16.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList23 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableList23.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean25 = strComparableList23.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean27 = strComparableList23.remove((java.lang.Object) 10.0f);
        boolean boolean28 = strComparableList16.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList23);
        boolean boolean30 = strComparableList16.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean31 = strComparableList11.addAll(1, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList16);
        boolean boolean33 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "");
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test071");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        boolean boolean8 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test072");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList13 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean17 = strComparableList13.remove((java.lang.Object) 10.0f);
        boolean boolean18 = strComparableList2.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int22 = strComparableList20.indexOf((java.lang.Object) (-7));
        int int24 = strComparableList20.indexOf((java.lang.Object) (-1.0d));
        boolean boolean25 = strComparableList13.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean27 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "");
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList30 = strComparableList20.subList(0, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 52");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test073");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean7 = strComparableList0.add((java.lang.Comparable<java.lang.String>) "");
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList10 = strComparableList0.subList((int) '#', (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test074");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int15 = strComparableList13.indexOf((java.lang.Object) (-7));
        strComparableList13.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableList13.size();
        boolean boolean20 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList23 = strComparableList13.subList(7, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test075");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        boolean boolean8 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        strComparableList9.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableList9.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList18 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean22 = strComparableList18.remove((java.lang.Object) 10.0f);
        boolean boolean24 = strComparableList18.remove((java.lang.Object) 0);
        boolean boolean25 = strComparableList18.isEmpty();
        boolean boolean26 = strComparableList9.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList18);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList27 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int29 = strComparableList27.indexOf((java.lang.Object) (-7));
        strComparableList27.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList27.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList36 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableList36.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean38 = strComparableList36.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean40 = strComparableList36.remove((java.lang.Object) 10.0f);
        boolean boolean42 = strComparableList36.remove((java.lang.Object) 0);
        boolean boolean43 = strComparableList36.isEmpty();
        boolean boolean44 = strComparableList27.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList36);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList45 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList36);
        int int46 = strComparableList9.indexOf((java.lang.Object) strComparableList36);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList50 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableList50.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean52 = strComparableList50.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableList50.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList57 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableList57.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean59 = strComparableList57.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int61 = strComparableList57.indexOf((java.lang.Object) (-3));
        boolean boolean62 = strComparableList50.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList57);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList65 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableList65.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean67 = strComparableList65.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int69 = strComparableList65.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList72 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean73 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean74 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int76 = strComparableList72.indexOf((java.lang.Object) (-3));
        boolean boolean77 = strComparableList65.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList72);
        boolean boolean79 = strComparableList65.add((java.lang.Comparable<java.lang.String>) "");
        int int80 = strComparableList50.indexOf((java.lang.Object) "");
        java.lang.Comparable<java.lang.String> strComparable83 = strComparableList50.set(0, (java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable85 = strComparableList50.get(1);
        boolean boolean86 = strComparableList36.addAll(2, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList50);
        int int87 = strComparableList2.indexOf((java.lang.Object) strComparableList50);
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test076");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList6 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int8 = strComparableList6.indexOf((java.lang.Object) (-7));
        int int10 = strComparableList6.indexOf((java.lang.Object) (-1.0d));
        boolean boolean11 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList6);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable13 = strComparableList6.get(5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:5, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test077");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableList17.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList24 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean26 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableList24.indexOf((java.lang.Object) (-3));
        boolean boolean29 = strComparableList17.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList24);
        boolean boolean31 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        int int32 = strComparableList2.indexOf((java.lang.Object) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList35 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean37 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean39 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList42 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean44 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean46 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        int int47 = strComparableList35.indexOf((java.lang.Object) strComparableList42);
        boolean boolean48 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList35);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList51 = strComparableList2.subList((int) (short) 1, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test078");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList11 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList11.size();
        boolean boolean14 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList11);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList15 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean22 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean23 = strComparableList15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList18);
        boolean boolean24 = strComparableList2.remove((java.lang.Object) strComparableList15);
        int int26 = strComparableList15.indexOf((java.lang.Object) 1);
        strComparableList15.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable29 = strComparableList15.get(0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:0, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test079");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean7 = strComparableList0.add((java.lang.Comparable<java.lang.String>) "");
        int int8 = strComparableList0.getSizeField();
        java.lang.Comparable<java.lang.String> strComparable10 = strComparableList0.remove(1);
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test080");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.getSizeField();
        int int16 = strComparableList2.size();
        java.lang.Comparable<java.lang.String> strComparable19 = strComparableList2.set(0, (java.lang.Comparable<java.lang.String>) "");
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test081");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        int int14 = strComparableList2.indexOf((java.lang.Object) strComparableList9);
        int int15 = strComparableList2.getSizeField();
        boolean boolean17 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        int int19 = strComparableList2.size();
        // The following exception was thrown during execution in test generation
        try {
            strComparableList2.add((-4), (java.lang.Comparable<java.lang.String>) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-4, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test082");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList13 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean17 = strComparableList13.remove((java.lang.Object) 10.0f);
        boolean boolean18 = strComparableList2.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int22 = strComparableList20.indexOf((java.lang.Object) (-7));
        int int24 = strComparableList20.indexOf((java.lang.Object) (-1.0d));
        boolean boolean25 = strComparableList13.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator27 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList13.replaceAll(strComparableUnaryOperator27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test083");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable18 = strComparableList2.remove((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-1, size=5");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test084");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList11 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList11.size();
        boolean boolean14 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList11);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList15 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean22 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean23 = strComparableList15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList18);
        boolean boolean24 = strComparableList2.remove((java.lang.Object) strComparableList15);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int27 = strComparableList25.indexOf((java.lang.Object) (-7));
        int int29 = strComparableList25.indexOf((java.lang.Object) 10.0d);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList32 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean34 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean36 = strComparableList32.remove((java.lang.Object) 10.0f);
        boolean boolean38 = strComparableList32.remove((java.lang.Object) 0);
        boolean boolean39 = strComparableList32.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList43 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean45 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean47 = strComparableList43.remove((java.lang.Object) 10.0f);
        boolean boolean48 = strComparableList32.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList43);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList50 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int52 = strComparableList50.indexOf((java.lang.Object) (-7));
        int int54 = strComparableList50.indexOf((java.lang.Object) (-1.0d));
        boolean boolean55 = strComparableList43.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList50);
        boolean boolean56 = strComparableList25.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList50);
        boolean boolean57 = strComparableList2.remove((java.lang.Object) boolean56);
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test085");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        boolean boolean7 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable10 = strComparableList2.set(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableList13.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        boolean boolean25 = strComparableList13.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean27 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList13.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList31 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean33 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableList31.indexOf((java.lang.Object) (-3));
        int int36 = strComparableList13.indexOf((java.lang.Object) strComparableList31);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList37 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int39 = strComparableList37.indexOf((java.lang.Object) (-7));
        strComparableList37.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableList37.indexOf((java.lang.Object) false);
        int int45 = strComparableList37.getSizeField();
        int int46 = strComparableList37.getSizeField();
        boolean boolean47 = strComparableList31.remove((java.lang.Object) strComparableList37);
        boolean boolean48 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList37);
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator49 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList2.replaceAll(strComparableUnaryOperator49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test086");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        boolean boolean8 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableList2.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList10 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int12 = strComparableList10.indexOf((java.lang.Object) (-7));
        boolean boolean14 = strComparableList10.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList17 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean21 = strComparableList17.remove((java.lang.Object) 10.0f);
        boolean boolean22 = strComparableList10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList17);
        strComparableList10.clear();
        int int24 = strComparableList2.indexOf((java.lang.Object) strComparableList10);
        int int25 = strComparableList10.size();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable27 = strComparableList10.remove((int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:0, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test087");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList13 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean17 = strComparableList13.remove((java.lang.Object) 10.0f);
        boolean boolean18 = strComparableList2.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList21 = strComparableList2.subList(2, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test088");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList11 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList11.size();
        boolean boolean14 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList11);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList15 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean22 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean23 = strComparableList15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList18);
        boolean boolean24 = strComparableList2.remove((java.lang.Object) strComparableList15);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList27 = strComparableList2.subList((int) ' ', (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 35");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test089");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        // The following exception was thrown during execution in test generation
        try {
            strComparableList2.add((int) (byte) 100, (java.lang.Comparable<java.lang.String>) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:100, size=2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test090");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList11 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList11.size();
        boolean boolean14 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList11);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList16 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int18 = strComparableList16.indexOf((java.lang.Object) (-7));
        boolean boolean20 = strComparableList16.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList23 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableList23.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean25 = strComparableList23.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean27 = strComparableList23.remove((java.lang.Object) 10.0f);
        boolean boolean28 = strComparableList16.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList23);
        boolean boolean30 = strComparableList16.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean31 = strComparableList11.addAll(1, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList16);
        // The following exception was thrown during execution in test generation
        try {
            strComparableList16.add((int) '#', (java.lang.Comparable<java.lang.String>) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:35, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test091");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableList17.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList24 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean26 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableList24.indexOf((java.lang.Object) (-3));
        boolean boolean29 = strComparableList17.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList24);
        boolean boolean31 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        int int32 = strComparableList2.indexOf((java.lang.Object) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList35 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean37 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean39 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList42 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean44 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean46 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        int int47 = strComparableList35.indexOf((java.lang.Object) strComparableList42);
        boolean boolean48 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList35);
        java.lang.Comparable<java.lang.String> strComparable50 = strComparableList2.remove(4);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList54 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean55 = strComparableList54.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean56 = strComparableList54.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int58 = strComparableList54.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList61 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean63 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int65 = strComparableList61.indexOf((java.lang.Object) (-3));
        boolean boolean66 = strComparableList54.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList61);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean67 = strComparableList2.addAll((int) '#', (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList54);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Size: 6");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test092");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.getSizeField();
        boolean boolean17 = strComparableList2.remove((java.lang.Object) (byte) 100);
        boolean boolean19 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator20 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList2.replaceAll(strComparableUnaryOperator20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test093");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        boolean boolean4 = strComparableList0.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList7 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableList7.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean9 = strComparableList7.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList7.remove((java.lang.Object) 10.0f);
        boolean boolean12 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList7);
        strComparableList0.clear();
        boolean boolean15 = strComparableList0.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            strComparableList0.add((int) (short) 1, (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:1, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test094");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        int int14 = strComparableList2.indexOf((java.lang.Object) strComparableList9);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList16 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean18 = strComparableList9.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList16);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList21 = strComparableList9.subList((-1), (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: fromIndex = -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test095");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        boolean boolean7 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable10 = strComparableList2.set(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableList13.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        boolean boolean25 = strComparableList13.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean27 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList13.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList31 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean33 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableList31.indexOf((java.lang.Object) (-3));
        int int36 = strComparableList13.indexOf((java.lang.Object) strComparableList31);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList37 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int39 = strComparableList37.indexOf((java.lang.Object) (-7));
        strComparableList37.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableList37.indexOf((java.lang.Object) false);
        int int45 = strComparableList37.getSizeField();
        int int46 = strComparableList37.getSizeField();
        boolean boolean47 = strComparableList31.remove((java.lang.Object) strComparableList37);
        boolean boolean48 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList37);
        int int49 = strComparableList2.size();
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test096");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.getSizeField();
        boolean boolean17 = strComparableList2.remove((java.lang.Object) (byte) 100);
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList19 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int21 = strComparableList19.indexOf((java.lang.Object) (-7));
        int int23 = strComparableList19.indexOf((java.lang.Object) (-1.0d));
        boolean boolean24 = strComparableList2.remove((java.lang.Object) int23);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList2);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable27 = strComparableList25.get(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:1, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test097");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList6 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int8 = strComparableList6.indexOf((java.lang.Object) (-7));
        int int10 = strComparableList6.indexOf((java.lang.Object) (-1.0d));
        boolean boolean11 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList6);
        boolean boolean13 = strComparableList6.add((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList15 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int17 = strComparableList15.indexOf((java.lang.Object) (-7));
        strComparableList15.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableList15.size();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = strComparableList6.addAll((-1), (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList15);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test098");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        int int14 = strComparableList2.indexOf((java.lang.Object) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableList17.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList24 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean26 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableList24.indexOf((java.lang.Object) (-3));
        boolean boolean29 = strComparableList17.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList24);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList32 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean34 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableList32.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList39 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean41 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableList39.indexOf((java.lang.Object) (-3));
        boolean boolean44 = strComparableList32.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList39);
        boolean boolean46 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "");
        int int47 = strComparableList17.indexOf((java.lang.Object) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList51 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableList51.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean53 = strComparableList51.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int55 = strComparableList51.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList58 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableList58.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean60 = strComparableList58.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int62 = strComparableList58.indexOf((java.lang.Object) (-3));
        boolean boolean63 = strComparableList51.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList58);
        int int64 = strComparableList58.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList67 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean68 = strComparableList67.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean69 = strComparableList67.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int71 = strComparableList67.indexOf((java.lang.Object) 10.0f);
        int int72 = strComparableList67.size();
        boolean boolean73 = strComparableList67.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList74 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int76 = strComparableList74.indexOf((java.lang.Object) (-7));
        boolean boolean77 = strComparableList67.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList74);
        boolean boolean79 = strComparableList67.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int80 = strComparableList67.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList83 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean84 = strComparableList83.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean85 = strComparableList83.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int87 = strComparableList83.indexOf((java.lang.Object) 10.0f);
        int int88 = strComparableList83.size();
        boolean boolean89 = strComparableList83.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList90 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int92 = strComparableList90.indexOf((java.lang.Object) (-7));
        boolean boolean93 = strComparableList83.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList90);
        boolean boolean94 = strComparableList67.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList83);
        boolean boolean95 = strComparableList58.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList83);
        boolean boolean96 = strComparableList17.addAll(2, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList83);
        boolean boolean97 = strComparableList2.remove((java.lang.Object) strComparableList17);
        int int98 = strComparableList17.getSizeField();
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test099");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList0.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList9 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.remove((java.lang.Object) 10.0f);
        boolean boolean15 = strComparableList9.remove((java.lang.Object) 0);
        boolean boolean16 = strComparableList9.isEmpty();
        boolean boolean17 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) 10.0f);
        int int25 = strComparableList20.size();
        boolean boolean26 = strComparableList20.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList27 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int29 = strComparableList27.indexOf((java.lang.Object) (-7));
        boolean boolean30 = strComparableList20.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList27);
        boolean boolean32 = strComparableList20.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int33 = strComparableList20.getSizeField();
        boolean boolean35 = strComparableList20.remove((java.lang.Object) (byte) 100);
        boolean boolean36 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable38 = strComparableList0.get((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:100, size=4");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test100");
        DataStructures.commonscollections.TreeList<java.lang.String> strList0 = new DataStructures.commonscollections.TreeList<java.lang.String>();
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test101");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator13 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList2.replaceAll(strComparableUnaryOperator13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test102");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator1 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList0.replaceAll(strComparableUnaryOperator1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test103");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.size();
        int int16 = strComparableList2.size();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable18 = strComparableList2.remove(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:100, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test104");
        DataStructures.commonscollections.TreeList<DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>> strComparableListList0 = new DataStructures.commonscollections.TreeList<DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>>();
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test105");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList1 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableList1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableList1.size();
        int int4 = strComparableList1.size();
        strComparableList1.clear();
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test106");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        int int4 = strComparableList0.indexOf((java.lang.Object) (-1.0d));
        int int5 = strComparableList0.getSizeField();
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test107");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Object> objList6 = new DataStructures.commonscollections.TreeList<java.lang.Object>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList2);
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator7 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList2.replaceAll(strComparableUnaryOperator7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test108");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        int int14 = strComparableList9.indexOf((java.lang.Object) (byte) 10);
        int int15 = strComparableList9.getSizeField();
        boolean boolean17 = strComparableList9.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test109");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        int int15 = strComparableList9.size();
        strComparableList9.add((int) (short) 0, (java.lang.Comparable<java.lang.String>) "hi!");
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test110");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList13 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean17 = strComparableList13.remove((java.lang.Object) 10.0f);
        boolean boolean18 = strComparableList2.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int22 = strComparableList20.indexOf((java.lang.Object) (-7));
        int int24 = strComparableList20.indexOf((java.lang.Object) (-1.0d));
        boolean boolean25 = strComparableList13.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean27 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean28 = strComparableList20.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList29 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList32 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean34 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableList32.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList39 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean41 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableList39.indexOf((java.lang.Object) (-3));
        boolean boolean44 = strComparableList32.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList39);
        boolean boolean46 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList32.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList50 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableList50.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean52 = strComparableList50.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableList50.indexOf((java.lang.Object) (-3));
        int int55 = strComparableList32.indexOf((java.lang.Object) strComparableList50);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList56 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int58 = strComparableList56.indexOf((java.lang.Object) (-7));
        strComparableList56.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int63 = strComparableList56.indexOf((java.lang.Object) false);
        int int64 = strComparableList56.getSizeField();
        int int65 = strComparableList56.getSizeField();
        boolean boolean66 = strComparableList50.remove((java.lang.Object) strComparableList56);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList69 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean70 = strComparableList69.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean71 = strComparableList69.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int73 = strComparableList69.indexOf((java.lang.Object) 10.0f);
        int int74 = strComparableList69.size();
        boolean boolean75 = strComparableList69.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList76 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int78 = strComparableList76.indexOf((java.lang.Object) (-7));
        boolean boolean79 = strComparableList69.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList76);
        boolean boolean81 = strComparableList69.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int82 = strComparableList69.getSizeField();
        int int83 = strComparableList69.size();
        int int84 = strComparableList56.indexOf((java.lang.Object) int83);
        java.lang.Comparable<java.lang.String> strComparable86 = strComparableList56.get(0);
        boolean boolean87 = strComparableList29.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList56);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList90 = strComparableList56.subList((int) (byte) 100, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(100) > toIndex(1)");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test111");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList6 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int8 = strComparableList6.indexOf((java.lang.Object) (-7));
        int int10 = strComparableList6.indexOf((java.lang.Object) (-1.0d));
        boolean boolean11 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList6);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableList13.size();
        boolean boolean16 = strComparableList0.remove((java.lang.Object) strComparableList13);
        boolean boolean18 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList21 = strComparableList13.subList((int) '4', (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(52) > toIndex(-1)");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test112");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        boolean boolean7 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable10 = strComparableList2.set(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableList13.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        boolean boolean25 = strComparableList13.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean27 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList13.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList31 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean33 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableList31.indexOf((java.lang.Object) (-3));
        int int36 = strComparableList13.indexOf((java.lang.Object) strComparableList31);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList37 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int39 = strComparableList37.indexOf((java.lang.Object) (-7));
        strComparableList37.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableList37.indexOf((java.lang.Object) false);
        int int45 = strComparableList37.getSizeField();
        int int46 = strComparableList37.getSizeField();
        boolean boolean47 = strComparableList31.remove((java.lang.Object) strComparableList37);
        boolean boolean48 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList37);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList49 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int51 = strComparableList49.indexOf((java.lang.Object) (-7));
        strComparableList49.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean56 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean58 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList61 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean63 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int65 = strComparableList61.indexOf((java.lang.Object) 10.0f);
        int int66 = strComparableList61.size();
        boolean boolean67 = strComparableList49.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList61);
        int int68 = strComparableList61.getSizeField();
        int int69 = strComparableList37.indexOf((java.lang.Object) int68);
        boolean boolean71 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "");
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test113");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        int int25 = strComparableList2.indexOf((java.lang.Object) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int28 = strComparableList26.indexOf((java.lang.Object) (-7));
        strComparableList26.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList26.indexOf((java.lang.Object) false);
        int int34 = strComparableList26.getSizeField();
        int int35 = strComparableList26.getSizeField();
        boolean boolean36 = strComparableList20.remove((java.lang.Object) strComparableList26);
        boolean boolean38 = strComparableList26.removeElem((java.lang.Comparable<java.lang.String>) "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable41 = strComparableList26.set((int) (byte) 10, (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:10, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test114");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableList17.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList24 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean26 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableList24.indexOf((java.lang.Object) (-3));
        boolean boolean29 = strComparableList17.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList24);
        boolean boolean31 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        int int32 = strComparableList2.indexOf((java.lang.Object) "");
        java.lang.Comparable<java.lang.String> strComparable35 = strComparableList2.set(0, (java.lang.Comparable<java.lang.String>) "");
        boolean boolean36 = strComparableList2.isEmpty();
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test115");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        boolean boolean8 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean9 = strComparableList2.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList12 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableList12.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean14 = strComparableList12.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean16 = strComparableList12.remove((java.lang.Object) 10.0f);
        boolean boolean18 = strComparableList12.remove((java.lang.Object) 0);
        boolean boolean19 = strComparableList12.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList21 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableList21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableList21.size();
        boolean boolean24 = strComparableList12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList21);
        int int25 = strComparableList21.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList28 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableList28.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean30 = strComparableList28.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableList28.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList35 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean37 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableList35.indexOf((java.lang.Object) (-3));
        boolean boolean40 = strComparableList28.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList35);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList43 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean45 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableList43.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList50 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableList50.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean52 = strComparableList50.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableList50.indexOf((java.lang.Object) (-3));
        boolean boolean55 = strComparableList43.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList50);
        boolean boolean57 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "");
        int int58 = strComparableList28.indexOf((java.lang.Object) "");
        boolean boolean59 = strComparableList21.remove((java.lang.Object) int58);
        boolean boolean60 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList21);
        int int61 = strComparableList21.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList65 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableList65.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean67 = strComparableList65.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int69 = strComparableList65.indexOf((java.lang.Object) 10.0f);
        int int70 = strComparableList65.size();
        boolean boolean71 = strComparableList65.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList72 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int74 = strComparableList72.indexOf((java.lang.Object) (-7));
        boolean boolean75 = strComparableList65.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList72);
        boolean boolean77 = strComparableList65.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int78 = strComparableList65.getSizeField();
        boolean boolean80 = strComparableList65.remove((java.lang.Object) (byte) 100);
        boolean boolean82 = strComparableList65.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean83 = strComparableList21.addAll((-1), (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList65);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test116");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        int int4 = strComparableList0.indexOf((java.lang.Object) (-1.0d));
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable6 = strComparableList0.get((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:10, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test117");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        boolean boolean7 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList8 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList2);
        boolean boolean10 = strComparableList2.remove((java.lang.Object) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable12 = strComparableList2.remove(6);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:6, size=3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test118");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        boolean boolean7 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList8 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList2);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList11 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean15 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableList18.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean27 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableList25.indexOf((java.lang.Object) (-3));
        boolean boolean30 = strComparableList18.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList25);
        int int31 = strComparableList18.getSizeField();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList34 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean36 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean38 = strComparableList34.remove((java.lang.Object) 10.0f);
        boolean boolean40 = strComparableList34.remove((java.lang.Object) 0);
        boolean boolean41 = strComparableList34.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList45 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableList45.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean47 = strComparableList45.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean49 = strComparableList45.remove((java.lang.Object) 10.0f);
        boolean boolean50 = strComparableList34.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList45);
        boolean boolean51 = strComparableList18.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList45);
        boolean boolean52 = strComparableList11.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList45);
        boolean boolean54 = strComparableList11.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int55 = strComparableList2.indexOf((java.lang.Object) boolean54);
        java.lang.Comparable<java.lang.String> strComparable57 = strComparableList2.get((int) (short) 0);
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test119");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        boolean boolean7 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList8 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList2);
        boolean boolean10 = strComparableList2.remove((java.lang.Object) (short) 0);
        int int11 = strComparableList2.getSizeField();
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test120");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        int int14 = strComparableList9.indexOf((java.lang.Object) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable16 = strComparableList9.get((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:32, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test121");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        int int12 = strComparableList9.getSizeField();
        int int14 = strComparableList9.indexOf((java.lang.Object) 0.0f);
        boolean boolean16 = strComparableList9.removeElem((java.lang.Comparable<java.lang.String>) "");
        strComparableList9.clear();
        boolean boolean18 = strComparableList2.remove((java.lang.Object) strComparableList9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable20 = strComparableList9.remove((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:0, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test122");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean7 = strComparableList0.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int8 = strComparableList0.getSizeField();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable10 = strComparableList0.remove(3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:3, size=2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test123");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        boolean boolean7 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int8 = strComparableList2.size();
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test124");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        int int14 = strComparableList9.indexOf((java.lang.Object) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable16 = strComparableList9.remove(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:10, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test125");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        int int14 = strComparableList9.indexOf((java.lang.Object) (byte) 10);
        int int15 = strComparableList9.getSizeField();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList18 = strComparableList9.subList((int) '#', (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(35) > toIndex(-100)");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test126");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList0.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList9 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.remove((java.lang.Object) 10.0f);
        boolean boolean15 = strComparableList9.remove((java.lang.Object) 0);
        boolean boolean16 = strComparableList9.isEmpty();
        boolean boolean17 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int20 = strComparableList18.indexOf((java.lang.Object) (-7));
        strComparableList18.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList18.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList27 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean29 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean31 = strComparableList27.remove((java.lang.Object) 10.0f);
        boolean boolean33 = strComparableList27.remove((java.lang.Object) 0);
        boolean boolean34 = strComparableList27.isEmpty();
        boolean boolean35 = strComparableList18.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList27);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList36 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList27);
        int int37 = strComparableList0.indexOf((java.lang.Object) strComparableList27);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList41 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableList41.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean43 = strComparableList41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int45 = strComparableList41.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList48 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean50 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int52 = strComparableList48.indexOf((java.lang.Object) (-3));
        boolean boolean53 = strComparableList41.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList48);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList56 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableList56.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean58 = strComparableList56.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableList56.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList63 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean64 = strComparableList63.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean65 = strComparableList63.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int67 = strComparableList63.indexOf((java.lang.Object) (-3));
        boolean boolean68 = strComparableList56.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList63);
        boolean boolean70 = strComparableList56.add((java.lang.Comparable<java.lang.String>) "");
        int int71 = strComparableList41.indexOf((java.lang.Object) "");
        java.lang.Comparable<java.lang.String> strComparable74 = strComparableList41.set(0, (java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable76 = strComparableList41.get(1);
        boolean boolean77 = strComparableList27.addAll(2, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList41);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList80 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean81 = strComparableList80.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean82 = strComparableList80.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int84 = strComparableList80.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList87 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean88 = strComparableList87.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean89 = strComparableList87.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int91 = strComparableList87.indexOf((java.lang.Object) (-3));
        boolean boolean92 = strComparableList80.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList87);
        boolean boolean94 = strComparableList80.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable96 = strComparableList80.remove((int) (byte) 0);
        int int97 = strComparableList80.size();
        boolean boolean98 = strComparableList27.remove((java.lang.Object) strComparableList80);
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test127");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable18 = strComparableList2.remove((int) (byte) 0);
        int int19 = strComparableList2.size();
        boolean boolean20 = strComparableList2.isEmpty();
        int int21 = strComparableList2.size();
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test128");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable18 = strComparableList2.remove((int) (byte) 0);
        boolean boolean19 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList22 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableList22.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean24 = strComparableList22.add((java.lang.Comparable<java.lang.String>) "");
        int int25 = strComparableList22.getSizeField();
        java.lang.Comparable<java.lang.String> strComparable27 = strComparableList22.get(1);
        boolean boolean28 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable30 = strComparableList2.get((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-1, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test129");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList6 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int8 = strComparableList6.indexOf((java.lang.Object) (-7));
        int int10 = strComparableList6.indexOf((java.lang.Object) (-1.0d));
        boolean boolean11 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList6);
        boolean boolean12 = strComparableList0.isEmpty();
        int int13 = strComparableList0.getSizeField();
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test130");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        int int7 = strComparableList2.indexOf((java.lang.Object) 0.0f);
        boolean boolean9 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int10 = strComparableList2.getSizeField();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList13 = strComparableList2.subList(100, (-4));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(100) > toIndex(-4)");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test131");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        // The following exception was thrown during execution in test generation
        try {
            strComparableList2.add((int) (short) 10, (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:10, size=2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test132");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        boolean boolean7 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable10 = strComparableList2.set(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableList13.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        boolean boolean25 = strComparableList13.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean27 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList13.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList31 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean33 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableList31.indexOf((java.lang.Object) (-3));
        int int36 = strComparableList13.indexOf((java.lang.Object) strComparableList31);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList37 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int39 = strComparableList37.indexOf((java.lang.Object) (-7));
        strComparableList37.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableList37.indexOf((java.lang.Object) false);
        int int45 = strComparableList37.getSizeField();
        int int46 = strComparableList37.getSizeField();
        boolean boolean47 = strComparableList31.remove((java.lang.Object) strComparableList37);
        boolean boolean48 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList37);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList49 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int51 = strComparableList49.indexOf((java.lang.Object) (-7));
        strComparableList49.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean56 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean58 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList61 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean63 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int65 = strComparableList61.indexOf((java.lang.Object) 10.0f);
        int int66 = strComparableList61.size();
        boolean boolean67 = strComparableList49.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList61);
        int int68 = strComparableList61.getSizeField();
        int int69 = strComparableList37.indexOf((java.lang.Object) int68);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable72 = strComparableList37.set(10, (java.lang.Comparable<java.lang.String>) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:10, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test133");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableList0.indexOf((java.lang.Object) false);
        int int8 = strComparableList0.getSizeField();
        int int9 = strComparableList0.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList12 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableList12.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean14 = strComparableList12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int16 = strComparableList12.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList19 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableList19.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean21 = strComparableList19.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableList19.indexOf((java.lang.Object) (-3));
        boolean boolean24 = strComparableList12.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList19);
        boolean boolean26 = strComparableList12.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable28 = strComparableList12.remove((int) (byte) 0);
        boolean boolean29 = strComparableList12.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList32 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean34 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "");
        int int35 = strComparableList32.getSizeField();
        java.lang.Comparable<java.lang.String> strComparable37 = strComparableList32.get(1);
        boolean boolean38 = strComparableList12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList32);
        boolean boolean39 = strComparableList0.remove((java.lang.Object) strComparableList32);
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator40 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList0.replaceAll(strComparableUnaryOperator40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test134");
        DataStructures.commonscollections.TreeList<java.io.Serializable> serializableList0 = new DataStructures.commonscollections.TreeList<java.io.Serializable>();
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test135");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableList0.indexOf((java.lang.Object) false);
        int int8 = strComparableList0.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList11 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableList11.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableList18.indexOf((java.lang.Object) (-3));
        boolean boolean23 = strComparableList11.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList18);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableList26.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean28 = strComparableList26.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int30 = strComparableList26.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList33 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableList33.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean35 = strComparableList33.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int37 = strComparableList33.indexOf((java.lang.Object) (-3));
        boolean boolean38 = strComparableList26.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList33);
        boolean boolean40 = strComparableList26.add((java.lang.Comparable<java.lang.String>) "");
        int int41 = strComparableList11.indexOf((java.lang.Object) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList45 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableList45.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean47 = strComparableList45.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableList45.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList52 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean54 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int56 = strComparableList52.indexOf((java.lang.Object) (-3));
        boolean boolean57 = strComparableList45.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList52);
        int int58 = strComparableList52.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList61 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean63 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int65 = strComparableList61.indexOf((java.lang.Object) 10.0f);
        int int66 = strComparableList61.size();
        boolean boolean67 = strComparableList61.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList68 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int70 = strComparableList68.indexOf((java.lang.Object) (-7));
        boolean boolean71 = strComparableList61.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList68);
        boolean boolean73 = strComparableList61.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int74 = strComparableList61.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList77 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean78 = strComparableList77.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean79 = strComparableList77.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int81 = strComparableList77.indexOf((java.lang.Object) 10.0f);
        int int82 = strComparableList77.size();
        boolean boolean83 = strComparableList77.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList84 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int86 = strComparableList84.indexOf((java.lang.Object) (-7));
        boolean boolean87 = strComparableList77.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList84);
        boolean boolean88 = strComparableList61.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList77);
        boolean boolean89 = strComparableList52.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList77);
        boolean boolean90 = strComparableList11.addAll(2, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList77);
        int int91 = strComparableList11.size();
        boolean boolean92 = strComparableList0.remove((java.lang.Object) int91);
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test136");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable18 = strComparableList2.remove((int) (byte) 0);
        boolean boolean19 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList22 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableList22.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean24 = strComparableList22.add((java.lang.Comparable<java.lang.String>) "");
        int int25 = strComparableList22.getSizeField();
        java.lang.Comparable<java.lang.String> strComparable27 = strComparableList22.get(1);
        boolean boolean28 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList22);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList32 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean34 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableList32.indexOf((java.lang.Object) 10.0f);
        java.lang.Object obj37 = null;
        int int38 = strComparableList32.indexOf(obj37);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean39 = strComparableList22.addAll((-9), (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList32);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -9, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test137");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList13 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean17 = strComparableList13.remove((java.lang.Object) 10.0f);
        boolean boolean18 = strComparableList2.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int22 = strComparableList20.indexOf((java.lang.Object) (-7));
        int int24 = strComparableList20.indexOf((java.lang.Object) (-1.0d));
        boolean boolean25 = strComparableList13.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean27 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean28 = strComparableList20.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList29 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        // The following exception was thrown during execution in test generation
        try {
            strComparableList29.add(5, (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:5, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test138");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        int int18 = strComparableList2.size();
        int int19 = strComparableList2.getSizeField();
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test139");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList0.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList9 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.remove((java.lang.Object) 10.0f);
        boolean boolean15 = strComparableList9.remove((java.lang.Object) 0);
        boolean boolean16 = strComparableList9.isEmpty();
        boolean boolean17 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) 10.0f);
        int int25 = strComparableList20.size();
        boolean boolean26 = strComparableList20.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList27 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int29 = strComparableList27.indexOf((java.lang.Object) (-7));
        boolean boolean30 = strComparableList20.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList27);
        boolean boolean32 = strComparableList20.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int33 = strComparableList20.getSizeField();
        boolean boolean35 = strComparableList20.remove((java.lang.Object) (byte) 100);
        boolean boolean36 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList37 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int39 = strComparableList37.indexOf((java.lang.Object) (-7));
        strComparableList37.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList43 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int45 = strComparableList43.indexOf((java.lang.Object) (-7));
        int int47 = strComparableList43.indexOf((java.lang.Object) (-1.0d));
        boolean boolean48 = strComparableList37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList43);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList50 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableList50.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int52 = strComparableList50.size();
        boolean boolean53 = strComparableList37.remove((java.lang.Object) strComparableList50);
        boolean boolean55 = strComparableList37.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean56 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList37);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable59 = strComparableList37.set((int) (byte) 10, (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:10, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test140");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        int int15 = strComparableList9.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableList18.indexOf((java.lang.Object) 10.0f);
        int int23 = strComparableList18.size();
        boolean boolean24 = strComparableList18.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int27 = strComparableList25.indexOf((java.lang.Object) (-7));
        boolean boolean28 = strComparableList18.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList25);
        boolean boolean30 = strComparableList18.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int31 = strComparableList18.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList34 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean36 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableList34.indexOf((java.lang.Object) 10.0f);
        int int39 = strComparableList34.size();
        boolean boolean40 = strComparableList34.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList41 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int43 = strComparableList41.indexOf((java.lang.Object) (-7));
        boolean boolean44 = strComparableList34.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList41);
        boolean boolean45 = strComparableList18.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList34);
        boolean boolean46 = strComparableList9.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList34);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList49 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean51 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean53 = strComparableList49.remove((java.lang.Object) 10.0f);
        boolean boolean55 = strComparableList49.remove((java.lang.Object) 0);
        boolean boolean56 = strComparableList49.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList58 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableList58.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableList58.size();
        boolean boolean61 = strComparableList49.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList58);
        int int62 = strComparableList58.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList65 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableList65.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean67 = strComparableList65.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int69 = strComparableList65.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList72 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean73 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean74 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int76 = strComparableList72.indexOf((java.lang.Object) (-3));
        boolean boolean77 = strComparableList65.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList72);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList80 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean81 = strComparableList80.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean82 = strComparableList80.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int84 = strComparableList80.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList87 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean88 = strComparableList87.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean89 = strComparableList87.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int91 = strComparableList87.indexOf((java.lang.Object) (-3));
        boolean boolean92 = strComparableList80.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList87);
        boolean boolean94 = strComparableList80.add((java.lang.Comparable<java.lang.String>) "");
        int int95 = strComparableList65.indexOf((java.lang.Object) "");
        boolean boolean96 = strComparableList58.remove((java.lang.Object) int95);
        boolean boolean97 = strComparableList9.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList58);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList98 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList58);
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test141");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        int int25 = strComparableList2.indexOf((java.lang.Object) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int28 = strComparableList26.indexOf((java.lang.Object) (-7));
        strComparableList26.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList26.indexOf((java.lang.Object) false);
        int int34 = strComparableList26.getSizeField();
        int int35 = strComparableList26.getSizeField();
        boolean boolean36 = strComparableList20.remove((java.lang.Object) strComparableList26);
        boolean boolean37 = strComparableList20.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList38 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList41 = strComparableList38.subList(3, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(3) > toIndex(-7)");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test142");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList11 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList11.size();
        boolean boolean14 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList11);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList15 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean22 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean23 = strComparableList15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList18);
        boolean boolean24 = strComparableList2.remove((java.lang.Object) strComparableList15);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList27 = strComparableList2.subList(9, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(9) > toIndex(-7)");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test143");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList3 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int5 = strComparableList3.indexOf((java.lang.Object) (-7));
        strComparableList3.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean10 = strComparableList3.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean12 = strComparableList3.add((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList15 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableList15.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean17 = strComparableList15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableList15.indexOf((java.lang.Object) 10.0f);
        int int20 = strComparableList15.size();
        boolean boolean21 = strComparableList3.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList15);
        boolean boolean22 = strComparableList0.remove((java.lang.Object) strComparableList15);
        int int23 = strComparableList0.size();
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test144");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        int int14 = strComparableList2.indexOf((java.lang.Object) strComparableList9);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList17 = strComparableList9.subList((int) (byte) 0, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test145");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableList17.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList24 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean26 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableList24.indexOf((java.lang.Object) (-3));
        boolean boolean29 = strComparableList17.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList24);
        boolean boolean31 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        int int32 = strComparableList2.indexOf((java.lang.Object) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList35 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean37 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean39 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList42 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean44 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean46 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        int int47 = strComparableList35.indexOf((java.lang.Object) strComparableList42);
        boolean boolean48 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList35);
        java.lang.Comparable<java.lang.String> strComparable50 = strComparableList2.remove(4);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList53 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableList53.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean55 = strComparableList53.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int57 = strComparableList53.indexOf((java.lang.Object) 10.0f);
        int int58 = strComparableList53.size();
        boolean boolean59 = strComparableList53.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList60 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int62 = strComparableList60.indexOf((java.lang.Object) (-7));
        boolean boolean63 = strComparableList53.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList60);
        boolean boolean64 = strComparableList53.isEmpty();
        boolean boolean65 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList53);
        int int66 = strComparableList53.size();
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test146");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList0.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList9 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.remove((java.lang.Object) 10.0f);
        boolean boolean15 = strComparableList9.remove((java.lang.Object) 0);
        boolean boolean16 = strComparableList9.isEmpty();
        boolean boolean17 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int20 = strComparableList18.indexOf((java.lang.Object) (-7));
        strComparableList18.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList18.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList27 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean29 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean31 = strComparableList27.remove((java.lang.Object) 10.0f);
        boolean boolean33 = strComparableList27.remove((java.lang.Object) 0);
        boolean boolean34 = strComparableList27.isEmpty();
        boolean boolean35 = strComparableList18.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList27);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList36 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList27);
        int int37 = strComparableList0.indexOf((java.lang.Object) strComparableList27);
        int int39 = strComparableList0.indexOf((java.lang.Object) 100);
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test147");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList11 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList11.size();
        boolean boolean14 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList11);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList15 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean22 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean23 = strComparableList15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList18);
        boolean boolean24 = strComparableList2.remove((java.lang.Object) strComparableList15);
        // The following exception was thrown during execution in test generation
        try {
            strComparableList15.add(1, (java.lang.Comparable<java.lang.String>) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:1, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test148");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        int int14 = strComparableList2.indexOf((java.lang.Object) strComparableList9);
        int int15 = strComparableList2.getSizeField();
        boolean boolean17 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        int int19 = strComparableList2.size();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable21 = strComparableList2.get(5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:5, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test149");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        int int25 = strComparableList2.indexOf((java.lang.Object) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int28 = strComparableList26.indexOf((java.lang.Object) (-7));
        strComparableList26.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList26.indexOf((java.lang.Object) false);
        int int34 = strComparableList26.getSizeField();
        int int35 = strComparableList26.getSizeField();
        boolean boolean36 = strComparableList20.remove((java.lang.Object) strComparableList26);
        boolean boolean37 = strComparableList20.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList38 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean40 = strComparableList20.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList43 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean45 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean47 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList50 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableList50.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean52 = strComparableList50.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableList50.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList57 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableList57.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean59 = strComparableList57.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int61 = strComparableList57.indexOf((java.lang.Object) (-3));
        boolean boolean62 = strComparableList50.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList57);
        int int63 = strComparableList50.getSizeField();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList66 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean67 = strComparableList66.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean68 = strComparableList66.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean70 = strComparableList66.remove((java.lang.Object) 10.0f);
        boolean boolean72 = strComparableList66.remove((java.lang.Object) 0);
        boolean boolean73 = strComparableList66.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList77 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean78 = strComparableList77.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean79 = strComparableList77.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean81 = strComparableList77.remove((java.lang.Object) 10.0f);
        boolean boolean82 = strComparableList66.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList77);
        boolean boolean83 = strComparableList50.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList77);
        boolean boolean84 = strComparableList43.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList77);
        boolean boolean85 = strComparableList20.remove((java.lang.Object) strComparableList43);
        int int86 = strComparableList20.getSizeField();
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test150");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableList17.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList24 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean26 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableList24.indexOf((java.lang.Object) (-3));
        boolean boolean29 = strComparableList17.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList24);
        boolean boolean31 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        int int32 = strComparableList2.indexOf((java.lang.Object) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList35 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean37 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean39 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList42 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean44 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean46 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        int int47 = strComparableList35.indexOf((java.lang.Object) strComparableList42);
        boolean boolean48 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList35);
        java.lang.Comparable<java.lang.String> strComparable50 = strComparableList2.remove(4);
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator51 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList2.replaceAll(strComparableUnaryOperator51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test151");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        int int15 = strComparableList2.getSizeField();
        int int16 = strComparableList2.getSizeField();
        // The following exception was thrown during execution in test generation
        try {
            strComparableList2.add(10, (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:10, size=4");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test152");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        int int25 = strComparableList2.indexOf((java.lang.Object) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int28 = strComparableList26.indexOf((java.lang.Object) (-7));
        strComparableList26.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList26.indexOf((java.lang.Object) false);
        int int34 = strComparableList26.getSizeField();
        int int35 = strComparableList26.getSizeField();
        boolean boolean36 = strComparableList20.remove((java.lang.Object) strComparableList26);
        boolean boolean37 = strComparableList20.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList38 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean40 = strComparableList20.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator41 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList20.replaceAll(strComparableUnaryOperator41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test153");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        boolean boolean7 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList2.replaceAll(strComparableUnaryOperator8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test154");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.getSizeField();
        boolean boolean17 = strComparableList2.remove((java.lang.Object) (byte) 100);
        strComparableList2.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable20 = strComparableList2.remove((-9));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-9, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test155");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList0.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList9 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.remove((java.lang.Object) 10.0f);
        boolean boolean15 = strComparableList9.remove((java.lang.Object) 0);
        boolean boolean16 = strComparableList9.isEmpty();
        boolean boolean17 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean18 = strComparableList0.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList19 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int21 = strComparableList19.indexOf((java.lang.Object) (-7));
        strComparableList19.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableList19.indexOf((java.lang.Object) false);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList28 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableList28.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int30 = strComparableList28.size();
        boolean boolean31 = strComparableList19.remove((java.lang.Object) strComparableList28);
        int int32 = strComparableList0.indexOf((java.lang.Object) strComparableList28);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable35 = strComparableList28.set((-1), (java.lang.Comparable<java.lang.String>) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-1, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test156");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        boolean boolean8 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable10 = strComparableList2.remove((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-1, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test157");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableList17.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList24 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean26 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableList24.indexOf((java.lang.Object) (-3));
        boolean boolean29 = strComparableList17.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList24);
        boolean boolean31 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        int int32 = strComparableList2.indexOf((java.lang.Object) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList35 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean37 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean39 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList42 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean44 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean46 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        int int47 = strComparableList35.indexOf((java.lang.Object) strComparableList42);
        boolean boolean48 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList35);
        strComparableList35.add(0, (java.lang.Comparable<java.lang.String>) "");
        int int52 = strComparableList35.size();
        strComparableList35.add((int) (byte) 1, (java.lang.Comparable<java.lang.String>) "hi!");
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test158");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        int int14 = strComparableList2.indexOf((java.lang.Object) strComparableList9);
        java.util.Collection<java.lang.Comparable<java.lang.String>> strComparableCollection15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = strComparableList9.removeAll(strComparableCollection15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test159");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        int int15 = strComparableList9.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableList18.indexOf((java.lang.Object) 10.0f);
        int int23 = strComparableList18.size();
        boolean boolean24 = strComparableList18.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int27 = strComparableList25.indexOf((java.lang.Object) (-7));
        boolean boolean28 = strComparableList18.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList25);
        boolean boolean30 = strComparableList18.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int31 = strComparableList18.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList34 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean36 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableList34.indexOf((java.lang.Object) 10.0f);
        int int39 = strComparableList34.size();
        boolean boolean40 = strComparableList34.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList41 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int43 = strComparableList41.indexOf((java.lang.Object) (-7));
        boolean boolean44 = strComparableList34.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList41);
        boolean boolean45 = strComparableList18.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList34);
        boolean boolean46 = strComparableList9.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList34);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList49 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean51 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean53 = strComparableList49.remove((java.lang.Object) 10.0f);
        boolean boolean55 = strComparableList49.remove((java.lang.Object) 0);
        boolean boolean56 = strComparableList49.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList58 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableList58.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableList58.size();
        boolean boolean61 = strComparableList49.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList58);
        int int62 = strComparableList58.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList65 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableList65.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean67 = strComparableList65.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int69 = strComparableList65.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList72 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean73 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean74 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int76 = strComparableList72.indexOf((java.lang.Object) (-3));
        boolean boolean77 = strComparableList65.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList72);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList80 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean81 = strComparableList80.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean82 = strComparableList80.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int84 = strComparableList80.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList87 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean88 = strComparableList87.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean89 = strComparableList87.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int91 = strComparableList87.indexOf((java.lang.Object) (-3));
        boolean boolean92 = strComparableList80.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList87);
        boolean boolean94 = strComparableList80.add((java.lang.Comparable<java.lang.String>) "");
        int int95 = strComparableList65.indexOf((java.lang.Object) "");
        boolean boolean96 = strComparableList58.remove((java.lang.Object) int95);
        boolean boolean97 = strComparableList9.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList58);
        strComparableList58.clear();
        int int99 = strComparableList58.getSizeField();
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test160");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        boolean boolean4 = strComparableList0.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList7 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableList7.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean9 = strComparableList7.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList7.remove((java.lang.Object) 10.0f);
        boolean boolean12 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList7);
        int int13 = strComparableList0.size();
        boolean boolean15 = strComparableList0.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.lang.Comparable<java.lang.String> strComparable17 = strComparableList0.get(0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable19 = strComparableList0.remove((-9));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-9, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test161");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList13 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean17 = strComparableList13.remove((java.lang.Object) 10.0f);
        boolean boolean18 = strComparableList2.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        boolean boolean20 = strComparableList2.remove((java.lang.Object) (byte) 0);
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test162");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        // The following exception was thrown during execution in test generation
        try {
            strComparableList2.add((-4), (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-4, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test163");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        int int15 = strComparableList2.getSizeField();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable17 = strComparableList2.remove((-3));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-3, size=4");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test164");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean7 = strComparableList0.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList10 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean12 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "");
        int int13 = strComparableList10.getSizeField();
        boolean boolean14 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList10);
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator15 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList0.replaceAll(strComparableUnaryOperator15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test165");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.getSizeField();
        boolean boolean17 = strComparableList2.remove((java.lang.Object) (byte) 100);
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList19 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int21 = strComparableList19.indexOf((java.lang.Object) (-7));
        int int23 = strComparableList19.indexOf((java.lang.Object) (-1.0d));
        boolean boolean24 = strComparableList2.remove((java.lang.Object) int23);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList2);
        // The following exception was thrown during execution in test generation
        try {
            strComparableList2.add((-6), (java.lang.Comparable<java.lang.String>) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-6, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test166");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        boolean boolean7 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable10 = strComparableList2.set(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean12 = strComparableList2.remove((java.lang.Object) 100);
        strComparableList2.clear();
        strComparableList2.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test167");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableList17.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList24 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean26 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableList24.indexOf((java.lang.Object) (-3));
        boolean boolean29 = strComparableList17.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList24);
        boolean boolean31 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        int int32 = strComparableList2.indexOf((java.lang.Object) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList36 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableList36.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean38 = strComparableList36.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int40 = strComparableList36.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList43 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean45 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableList43.indexOf((java.lang.Object) (-3));
        boolean boolean48 = strComparableList36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList43);
        int int49 = strComparableList43.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList52 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean54 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int56 = strComparableList52.indexOf((java.lang.Object) 10.0f);
        int int57 = strComparableList52.size();
        boolean boolean58 = strComparableList52.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList59 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int61 = strComparableList59.indexOf((java.lang.Object) (-7));
        boolean boolean62 = strComparableList52.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList59);
        boolean boolean64 = strComparableList52.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int65 = strComparableList52.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList68 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableList68.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean70 = strComparableList68.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int72 = strComparableList68.indexOf((java.lang.Object) 10.0f);
        int int73 = strComparableList68.size();
        boolean boolean74 = strComparableList68.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList75 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int77 = strComparableList75.indexOf((java.lang.Object) (-7));
        boolean boolean78 = strComparableList68.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList75);
        boolean boolean79 = strComparableList52.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList68);
        boolean boolean80 = strComparableList43.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList68);
        boolean boolean81 = strComparableList2.addAll(2, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList68);
        boolean boolean83 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test168");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int1 = strComparableList0.getSizeField();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable4 = strComparableList0.set((int) (byte) 0, (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:0, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test169");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        int int15 = strComparableList2.getSizeField();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList18 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean22 = strComparableList18.remove((java.lang.Object) 10.0f);
        boolean boolean24 = strComparableList18.remove((java.lang.Object) 0);
        boolean boolean25 = strComparableList18.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList29 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean31 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean33 = strComparableList29.remove((java.lang.Object) 10.0f);
        boolean boolean34 = strComparableList18.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList29);
        boolean boolean35 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList29);
        int int36 = strComparableList2.size();
        int int37 = strComparableList2.size();
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator38 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList2.replaceAll(strComparableUnaryOperator38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test170");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList0.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList9 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.remove((java.lang.Object) 10.0f);
        boolean boolean15 = strComparableList9.remove((java.lang.Object) 0);
        boolean boolean16 = strComparableList9.isEmpty();
        boolean boolean17 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable19 = strComparableList0.get((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-1, size=3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test171");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        boolean boolean8 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableList2.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList10 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int12 = strComparableList10.indexOf((java.lang.Object) (-7));
        boolean boolean14 = strComparableList10.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList17 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean21 = strComparableList17.remove((java.lang.Object) 10.0f);
        boolean boolean22 = strComparableList10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList17);
        strComparableList10.clear();
        int int24 = strComparableList2.indexOf((java.lang.Object) strComparableList10);
        boolean boolean26 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList29 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean31 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList29.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList36 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableList36.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean38 = strComparableList36.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int40 = strComparableList36.indexOf((java.lang.Object) (-3));
        boolean boolean41 = strComparableList29.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList36);
        boolean boolean43 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable45 = strComparableList29.remove((int) (byte) 0);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList48 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean50 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int52 = strComparableList48.indexOf((java.lang.Object) 10.0f);
        int int53 = strComparableList48.size();
        boolean boolean54 = strComparableList48.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList55 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int57 = strComparableList55.indexOf((java.lang.Object) (-7));
        boolean boolean58 = strComparableList48.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList55);
        boolean boolean60 = strComparableList48.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int61 = strComparableList48.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList64 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean66 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int68 = strComparableList64.indexOf((java.lang.Object) 10.0f);
        int int69 = strComparableList64.size();
        boolean boolean70 = strComparableList64.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList71 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int73 = strComparableList71.indexOf((java.lang.Object) (-7));
        boolean boolean74 = strComparableList64.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList71);
        boolean boolean75 = strComparableList48.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList64);
        boolean boolean76 = strComparableList29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList64);
        boolean boolean77 = strComparableList2.remove((java.lang.Object) strComparableList64);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable80 = strComparableList64.set((-10), (java.lang.Comparable<java.lang.String>) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-10, size=2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test172");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableList0.indexOf((java.lang.Object) false);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int11 = strComparableList9.size();
        boolean boolean12 = strComparableList0.remove((java.lang.Object) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList16 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean18 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableList16.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList23 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableList23.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean25 = strComparableList23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int27 = strComparableList23.indexOf((java.lang.Object) (-3));
        boolean boolean28 = strComparableList16.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList23);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList31 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean33 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableList31.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList38 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableList38.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean40 = strComparableList38.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int42 = strComparableList38.indexOf((java.lang.Object) (-3));
        boolean boolean43 = strComparableList31.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList38);
        boolean boolean45 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "");
        int int46 = strComparableList16.indexOf((java.lang.Object) "");
        java.lang.Comparable<java.lang.String> strComparable49 = strComparableList16.set(0, (java.lang.Comparable<java.lang.String>) "");
        int int50 = strComparableList16.size();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean51 = strComparableList9.addAll((int) (byte) -1, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList16);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test173");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        boolean boolean8 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableList2.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList10 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int12 = strComparableList10.indexOf((java.lang.Object) (-7));
        boolean boolean14 = strComparableList10.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList17 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean21 = strComparableList17.remove((java.lang.Object) 10.0f);
        boolean boolean22 = strComparableList10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList17);
        strComparableList10.clear();
        int int24 = strComparableList2.indexOf((java.lang.Object) strComparableList10);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList27 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean29 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int31 = strComparableList27.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList34 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean36 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableList34.indexOf((java.lang.Object) (-3));
        boolean boolean39 = strComparableList27.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList34);
        int int40 = strComparableList34.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList43 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean45 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableList43.indexOf((java.lang.Object) 10.0f);
        int int48 = strComparableList43.size();
        boolean boolean49 = strComparableList43.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList50 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int52 = strComparableList50.indexOf((java.lang.Object) (-7));
        boolean boolean53 = strComparableList43.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList50);
        boolean boolean55 = strComparableList43.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int56 = strComparableList43.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList59 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableList59.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean61 = strComparableList59.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int63 = strComparableList59.indexOf((java.lang.Object) 10.0f);
        int int64 = strComparableList59.size();
        boolean boolean65 = strComparableList59.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList66 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int68 = strComparableList66.indexOf((java.lang.Object) (-7));
        boolean boolean69 = strComparableList59.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList66);
        boolean boolean70 = strComparableList43.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList59);
        boolean boolean71 = strComparableList34.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList59);
        boolean boolean72 = strComparableList10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList59);
        boolean boolean74 = strComparableList59.add((java.lang.Comparable<java.lang.String>) "hi!");
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test174");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        int int18 = strComparableList2.size();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList21 = strComparableList2.subList(0, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 8");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test175");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.size();
        int int16 = strComparableList2.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList19 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableList19.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean21 = strComparableList19.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableList19.indexOf((java.lang.Object) (-3));
        boolean boolean25 = strComparableList19.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableList19.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList27 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int29 = strComparableList27.indexOf((java.lang.Object) (-7));
        boolean boolean31 = strComparableList27.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList34 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean36 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean38 = strComparableList34.remove((java.lang.Object) 10.0f);
        boolean boolean39 = strComparableList27.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList34);
        strComparableList27.clear();
        int int41 = strComparableList19.indexOf((java.lang.Object) strComparableList27);
        int int42 = strComparableList2.indexOf((java.lang.Object) strComparableList19);
        int int43 = strComparableList2.getSizeField();
        boolean boolean45 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test176");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        int int25 = strComparableList2.indexOf((java.lang.Object) strComparableList20);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable27 = strComparableList2.get((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-1, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test177");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        int int14 = strComparableList2.indexOf((java.lang.Object) strComparableList9);
        int int15 = strComparableList2.size();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList18 = strComparableList2.subList(0, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test178");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        int int14 = strComparableList2.indexOf((java.lang.Object) strComparableList9);
        int int15 = strComparableList2.getSizeField();
        boolean boolean17 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable19 = strComparableList2.remove(9);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:9, size=2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test179");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Object> objList6 = new DataStructures.commonscollections.TreeList<java.lang.Object>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList2);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList9 = strComparableList2.subList((-5), (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: fromIndex = -5");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test180");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        int int15 = strComparableList2.getSizeField();
        int int16 = strComparableList2.getSizeField();
        int int17 = strComparableList2.getSizeField();
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator18 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList2.replaceAll(strComparableUnaryOperator18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test181");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.getSizeField();
        int int16 = strComparableList2.size();
        boolean boolean18 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableList2.getSizeField();
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test182");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.getSizeField();
        boolean boolean17 = strComparableList2.remove((java.lang.Object) (byte) 100);
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList19 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int21 = strComparableList19.indexOf((java.lang.Object) (-7));
        int int23 = strComparableList19.indexOf((java.lang.Object) (-1.0d));
        boolean boolean24 = strComparableList2.remove((java.lang.Object) int23);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList2);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int28 = strComparableList26.indexOf((java.lang.Object) (-7));
        strComparableList26.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean33 = strComparableList26.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean34 = strComparableList26.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList35 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int37 = strComparableList35.indexOf((java.lang.Object) (-7));
        strComparableList35.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList41 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int43 = strComparableList41.indexOf((java.lang.Object) (-7));
        int int45 = strComparableList41.indexOf((java.lang.Object) (-1.0d));
        boolean boolean46 = strComparableList35.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList41);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList48 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int50 = strComparableList48.size();
        boolean boolean51 = strComparableList35.remove((java.lang.Object) strComparableList48);
        boolean boolean53 = strComparableList35.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean54 = strComparableList26.remove((java.lang.Object) boolean53);
        boolean boolean55 = strComparableList25.remove((java.lang.Object) boolean54);
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test183");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean1 = strComparableList0.isEmpty();
        int int2 = strComparableList0.getSizeField();
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test184");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList16 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean18 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableList16.indexOf((java.lang.Object) (-3));
        boolean boolean21 = strComparableList9.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList16);
        int int22 = strComparableList9.getSizeField();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList25 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean27 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean29 = strComparableList25.remove((java.lang.Object) 10.0f);
        boolean boolean31 = strComparableList25.remove((java.lang.Object) 0);
        boolean boolean32 = strComparableList25.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList36 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableList36.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean38 = strComparableList36.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean40 = strComparableList36.remove((java.lang.Object) 10.0f);
        boolean boolean41 = strComparableList25.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList36);
        boolean boolean42 = strComparableList9.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList36);
        boolean boolean43 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList36);
        boolean boolean45 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableList2.size();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable48 = strComparableList2.remove(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:100, size=4");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test185");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList11 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList11.size();
        boolean boolean14 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList11);
        boolean boolean16 = strComparableList11.removeElem((java.lang.Comparable<java.lang.String>) "");
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test186");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        int int25 = strComparableList2.indexOf((java.lang.Object) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int28 = strComparableList26.indexOf((java.lang.Object) (-7));
        strComparableList26.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList26.indexOf((java.lang.Object) false);
        int int34 = strComparableList26.getSizeField();
        int int35 = strComparableList26.getSizeField();
        boolean boolean36 = strComparableList20.remove((java.lang.Object) strComparableList26);
        boolean boolean37 = strComparableList20.isEmpty();
        boolean boolean39 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "");
        int int40 = strComparableList20.size();
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test187");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList7 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int9 = strComparableList7.indexOf((java.lang.Object) (-7));
        strComparableList7.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean14 = strComparableList7.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean16 = strComparableList7.add((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList19 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableList19.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean21 = strComparableList19.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableList19.indexOf((java.lang.Object) 10.0f);
        int int24 = strComparableList19.size();
        boolean boolean25 = strComparableList7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList19);
        int int26 = strComparableList19.getSizeField();
        strComparableList19.clear();
        boolean boolean28 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList19);
        boolean boolean30 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test188");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        int int14 = strComparableList2.indexOf((java.lang.Object) strComparableList9);
        int int15 = strComparableList2.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableList18.indexOf((java.lang.Object) 10.0f);
        boolean boolean23 = strComparableList2.remove((java.lang.Object) int22);
        // The following exception was thrown during execution in test generation
        try {
            strComparableList2.add((int) (byte) 100, (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:100, size=3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test189");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList6 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int8 = strComparableList6.indexOf((java.lang.Object) (-7));
        int int10 = strComparableList6.indexOf((java.lang.Object) (-1.0d));
        boolean boolean11 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList6);
        boolean boolean13 = strComparableList0.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableList0.getSizeField();
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test190");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.getSizeField();
        boolean boolean17 = strComparableList2.remove((java.lang.Object) (byte) 100);
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList19 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int21 = strComparableList19.indexOf((java.lang.Object) (-7));
        int int23 = strComparableList19.indexOf((java.lang.Object) (-1.0d));
        boolean boolean24 = strComparableList2.remove((java.lang.Object) int23);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList2);
        // The following exception was thrown during execution in test generation
        try {
            strComparableList25.add(1, (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:1, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test191");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList6 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int8 = strComparableList6.indexOf((java.lang.Object) (-7));
        int int10 = strComparableList6.indexOf((java.lang.Object) (-1.0d));
        boolean boolean11 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList6);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableList13.size();
        boolean boolean16 = strComparableList0.remove((java.lang.Object) strComparableList13);
        strComparableList13.add((int) (byte) 1, (java.lang.Comparable<java.lang.String>) "");
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test192");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.getSizeField();
        boolean boolean17 = strComparableList2.remove((java.lang.Object) (byte) 100);
        int int18 = strComparableList2.getSizeField();
        java.lang.Comparable<java.lang.String> strComparable20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable21 = strComparableList2.set(10, strComparable20);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:10, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test193");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList13 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean17 = strComparableList13.remove((java.lang.Object) 10.0f);
        boolean boolean18 = strComparableList2.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int22 = strComparableList20.indexOf((java.lang.Object) (-7));
        int int24 = strComparableList20.indexOf((java.lang.Object) (-1.0d));
        boolean boolean25 = strComparableList13.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean27 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean28 = strComparableList20.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList29 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList32 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean34 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableList32.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList39 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean41 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableList39.indexOf((java.lang.Object) (-3));
        boolean boolean44 = strComparableList32.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList39);
        boolean boolean46 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList32.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList50 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableList50.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean52 = strComparableList50.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableList50.indexOf((java.lang.Object) (-3));
        int int55 = strComparableList32.indexOf((java.lang.Object) strComparableList50);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList56 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int58 = strComparableList56.indexOf((java.lang.Object) (-7));
        strComparableList56.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int63 = strComparableList56.indexOf((java.lang.Object) false);
        int int64 = strComparableList56.getSizeField();
        int int65 = strComparableList56.getSizeField();
        boolean boolean66 = strComparableList50.remove((java.lang.Object) strComparableList56);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList69 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean70 = strComparableList69.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean71 = strComparableList69.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int73 = strComparableList69.indexOf((java.lang.Object) 10.0f);
        int int74 = strComparableList69.size();
        boolean boolean75 = strComparableList69.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList76 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int78 = strComparableList76.indexOf((java.lang.Object) (-7));
        boolean boolean79 = strComparableList69.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList76);
        boolean boolean81 = strComparableList69.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int82 = strComparableList69.getSizeField();
        int int83 = strComparableList69.size();
        int int84 = strComparableList56.indexOf((java.lang.Object) int83);
        java.lang.Comparable<java.lang.String> strComparable86 = strComparableList56.get(0);
        boolean boolean87 = strComparableList29.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList56);
        int int88 = strComparableList29.getSizeField();
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test194");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        boolean boolean8 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableList2.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList10 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int12 = strComparableList10.indexOf((java.lang.Object) (-7));
        boolean boolean14 = strComparableList10.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList17 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean21 = strComparableList17.remove((java.lang.Object) 10.0f);
        boolean boolean22 = strComparableList10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList17);
        strComparableList10.clear();
        int int24 = strComparableList2.indexOf((java.lang.Object) strComparableList10);
        // The following exception was thrown during execution in test generation
        try {
            strComparableList10.add((int) (short) 10, (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:10, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test195");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean7 = strComparableList0.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList10 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean12 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "");
        int int13 = strComparableList10.getSizeField();
        boolean boolean14 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList10);
        int int15 = strComparableList10.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableList18.indexOf((java.lang.Object) 10.0f);
        int int23 = strComparableList18.size();
        boolean boolean24 = strComparableList18.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int27 = strComparableList25.indexOf((java.lang.Object) (-7));
        boolean boolean28 = strComparableList18.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList25);
        boolean boolean30 = strComparableList18.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int31 = strComparableList18.getSizeField();
        int int32 = strComparableList18.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList35 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean37 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean39 = strComparableList35.remove((java.lang.Object) 10.0f);
        boolean boolean41 = strComparableList35.remove((java.lang.Object) 0);
        boolean boolean42 = strComparableList35.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList44 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableList44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableList44.size();
        boolean boolean47 = strComparableList35.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList44);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList48 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList51 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableList51.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean53 = strComparableList51.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean55 = strComparableList51.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean56 = strComparableList48.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList51);
        boolean boolean57 = strComparableList35.remove((java.lang.Object) strComparableList48);
        boolean boolean58 = strComparableList48.isEmpty();
        boolean boolean60 = strComparableList48.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int61 = strComparableList18.indexOf((java.lang.Object) strComparableList48);
        boolean boolean63 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "");
        int int64 = strComparableList10.indexOf((java.lang.Object) strComparableList48);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable66 = strComparableList48.remove(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:1, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test196");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        int int15 = strComparableList2.getSizeField();
        int int16 = strComparableList2.getSizeField();
        java.lang.Comparable<java.lang.String> strComparable18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable19 = strComparableList2.set((int) '#', strComparable18);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:35, size=4");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test197");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList0.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList9 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.remove((java.lang.Object) 10.0f);
        boolean boolean15 = strComparableList9.remove((java.lang.Object) 0);
        boolean boolean16 = strComparableList9.isEmpty();
        boolean boolean17 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean18 = strComparableList0.isEmpty();
        boolean boolean20 = strComparableList0.add((java.lang.Comparable<java.lang.String>) "hi!");
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test198");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        boolean boolean7 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable10 = strComparableList2.set(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableList13.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        boolean boolean25 = strComparableList13.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean27 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList13.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList31 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean33 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableList31.indexOf((java.lang.Object) (-3));
        int int36 = strComparableList13.indexOf((java.lang.Object) strComparableList31);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList37 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int39 = strComparableList37.indexOf((java.lang.Object) (-7));
        strComparableList37.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableList37.indexOf((java.lang.Object) false);
        int int45 = strComparableList37.getSizeField();
        int int46 = strComparableList37.getSizeField();
        boolean boolean47 = strComparableList31.remove((java.lang.Object) strComparableList37);
        boolean boolean48 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList37);
        strComparableList37.clear();
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test199");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean1 = strComparableList0.isEmpty();
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator2 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList0.replaceAll(strComparableUnaryOperator2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test200");
        DataStructures.commonscollections.TreeList<java.lang.Object> objList0 = new DataStructures.commonscollections.TreeList<java.lang.Object>();
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test201");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        boolean boolean7 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable10 = strComparableList2.set(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableList13.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        boolean boolean25 = strComparableList13.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean27 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList13.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList31 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean33 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableList31.indexOf((java.lang.Object) (-3));
        int int36 = strComparableList13.indexOf((java.lang.Object) strComparableList31);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList37 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int39 = strComparableList37.indexOf((java.lang.Object) (-7));
        strComparableList37.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableList37.indexOf((java.lang.Object) false);
        int int45 = strComparableList37.getSizeField();
        int int46 = strComparableList37.getSizeField();
        boolean boolean47 = strComparableList31.remove((java.lang.Object) strComparableList37);
        boolean boolean48 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList37);
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator49 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList37.replaceAll(strComparableUnaryOperator49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test202");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList16 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean18 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableList16.indexOf((java.lang.Object) (-3));
        boolean boolean21 = strComparableList9.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList16);
        int int22 = strComparableList9.getSizeField();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList25 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean27 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean29 = strComparableList25.remove((java.lang.Object) 10.0f);
        boolean boolean31 = strComparableList25.remove((java.lang.Object) 0);
        boolean boolean32 = strComparableList25.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList36 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableList36.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean38 = strComparableList36.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean40 = strComparableList36.remove((java.lang.Object) 10.0f);
        boolean boolean41 = strComparableList25.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList36);
        boolean boolean42 = strComparableList9.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList36);
        boolean boolean43 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList36);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList46 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableList46.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean48 = strComparableList46.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int50 = strComparableList46.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList53 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableList53.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean55 = strComparableList53.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int57 = strComparableList53.indexOf((java.lang.Object) (-3));
        boolean boolean58 = strComparableList46.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList53);
        boolean boolean60 = strComparableList46.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList46.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList64 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean66 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int68 = strComparableList64.indexOf((java.lang.Object) (-3));
        int int69 = strComparableList46.indexOf((java.lang.Object) strComparableList64);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList70 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int72 = strComparableList70.indexOf((java.lang.Object) (-7));
        strComparableList70.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int77 = strComparableList70.indexOf((java.lang.Object) false);
        int int78 = strComparableList70.getSizeField();
        int int79 = strComparableList70.getSizeField();
        boolean boolean80 = strComparableList64.remove((java.lang.Object) strComparableList70);
        int int81 = strComparableList2.indexOf((java.lang.Object) strComparableList70);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList84 = strComparableList2.subList(1, 1);
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator85 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList2.replaceAll(strComparableUnaryOperator85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test203");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean7 = strComparableList0.add((java.lang.Comparable<java.lang.String>) "");
        int int8 = strComparableList0.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList10 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList10.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList14 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableList14.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean16 = strComparableList14.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableList14.indexOf((java.lang.Object) 10.0f);
        int int19 = strComparableList14.size();
        boolean boolean20 = strComparableList14.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList21 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int23 = strComparableList21.indexOf((java.lang.Object) (-7));
        boolean boolean24 = strComparableList14.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList21);
        boolean boolean26 = strComparableList14.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int27 = strComparableList14.getSizeField();
        int int28 = strComparableList14.size();
        boolean boolean29 = strComparableList10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList14);
        boolean boolean30 = strComparableList0.addAll(1, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList10);
    }

    @Test
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test204");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.lang.Comparable<java.lang.String> strComparable8 = strComparableList2.get(0);
    }

    @Test
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test205");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        boolean boolean7 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable10 = strComparableList2.set(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableList13.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        boolean boolean25 = strComparableList13.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean27 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList13.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList31 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean33 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableList31.indexOf((java.lang.Object) (-3));
        int int36 = strComparableList13.indexOf((java.lang.Object) strComparableList31);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList37 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int39 = strComparableList37.indexOf((java.lang.Object) (-7));
        strComparableList37.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableList37.indexOf((java.lang.Object) false);
        int int45 = strComparableList37.getSizeField();
        int int46 = strComparableList37.getSizeField();
        boolean boolean47 = strComparableList31.remove((java.lang.Object) strComparableList37);
        boolean boolean48 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList37);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList49 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int51 = strComparableList49.indexOf((java.lang.Object) (-7));
        strComparableList49.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean56 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean58 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList61 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean63 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int65 = strComparableList61.indexOf((java.lang.Object) 10.0f);
        int int66 = strComparableList61.size();
        boolean boolean67 = strComparableList49.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList61);
        int int68 = strComparableList61.getSizeField();
        int int69 = strComparableList37.indexOf((java.lang.Object) int68);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList72 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean73 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean74 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int76 = strComparableList72.indexOf((java.lang.Object) (-3));
        boolean boolean77 = strComparableList37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList72);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable80 = strComparableList37.set((int) (short) -1, (java.lang.Comparable<java.lang.String>) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-1, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test206");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        int int6 = strComparableList2.getSizeField();
    }

    @Test
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test207");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        boolean boolean7 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable10 = strComparableList2.set(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableList13.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        boolean boolean25 = strComparableList13.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean27 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList13.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList31 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean33 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableList31.indexOf((java.lang.Object) (-3));
        int int36 = strComparableList13.indexOf((java.lang.Object) strComparableList31);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList37 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int39 = strComparableList37.indexOf((java.lang.Object) (-7));
        strComparableList37.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableList37.indexOf((java.lang.Object) false);
        int int45 = strComparableList37.getSizeField();
        int int46 = strComparableList37.getSizeField();
        boolean boolean47 = strComparableList31.remove((java.lang.Object) strComparableList37);
        boolean boolean48 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList37);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList49 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int51 = strComparableList49.indexOf((java.lang.Object) (-7));
        strComparableList49.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean56 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean58 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList61 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean63 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int65 = strComparableList61.indexOf((java.lang.Object) 10.0f);
        int int66 = strComparableList61.size();
        boolean boolean67 = strComparableList49.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList61);
        int int68 = strComparableList61.getSizeField();
        int int69 = strComparableList37.indexOf((java.lang.Object) int68);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList72 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean73 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean74 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int76 = strComparableList72.indexOf((java.lang.Object) (-3));
        boolean boolean77 = strComparableList37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList72);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable79 = strComparableList37.get(0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:0, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test208");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        // The following exception was thrown during execution in test generation
        try {
            strComparableList2.add((int) ' ', (java.lang.Comparable<java.lang.String>) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:32, size=2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test209");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean7 = strComparableList0.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean9 = strComparableList0.add((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList12 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableList12.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean14 = strComparableList12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int16 = strComparableList12.indexOf((java.lang.Object) 10.0f);
        int int17 = strComparableList12.size();
        boolean boolean18 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList12);
        int int19 = strComparableList12.getSizeField();
        strComparableList12.clear();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList24 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean26 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean27 = strComparableList12.addAll((int) ' ', (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList24);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test210");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        int int14 = strComparableList2.indexOf((java.lang.Object) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableList17.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList24 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean26 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableList24.indexOf((java.lang.Object) (-3));
        boolean boolean29 = strComparableList17.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList24);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList32 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean34 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableList32.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList39 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean41 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableList39.indexOf((java.lang.Object) (-3));
        boolean boolean44 = strComparableList32.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList39);
        boolean boolean46 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "");
        int int47 = strComparableList17.indexOf((java.lang.Object) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList51 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableList51.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean53 = strComparableList51.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int55 = strComparableList51.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList58 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableList58.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean60 = strComparableList58.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int62 = strComparableList58.indexOf((java.lang.Object) (-3));
        boolean boolean63 = strComparableList51.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList58);
        int int64 = strComparableList58.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList67 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean68 = strComparableList67.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean69 = strComparableList67.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int71 = strComparableList67.indexOf((java.lang.Object) 10.0f);
        int int72 = strComparableList67.size();
        boolean boolean73 = strComparableList67.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList74 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int76 = strComparableList74.indexOf((java.lang.Object) (-7));
        boolean boolean77 = strComparableList67.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList74);
        boolean boolean79 = strComparableList67.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int80 = strComparableList67.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList83 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean84 = strComparableList83.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean85 = strComparableList83.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int87 = strComparableList83.indexOf((java.lang.Object) 10.0f);
        int int88 = strComparableList83.size();
        boolean boolean89 = strComparableList83.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList90 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int92 = strComparableList90.indexOf((java.lang.Object) (-7));
        boolean boolean93 = strComparableList83.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList90);
        boolean boolean94 = strComparableList67.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList83);
        boolean boolean95 = strComparableList58.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList83);
        boolean boolean96 = strComparableList17.addAll(2, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList83);
        boolean boolean97 = strComparableList2.remove((java.lang.Object) strComparableList17);
        boolean boolean98 = strComparableList17.isEmpty();
    }

    @Test
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test211");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.size();
        int int16 = strComparableList2.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList19 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableList19.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean21 = strComparableList19.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableList19.indexOf((java.lang.Object) (-3));
        boolean boolean25 = strComparableList19.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableList19.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList27 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int29 = strComparableList27.indexOf((java.lang.Object) (-7));
        boolean boolean31 = strComparableList27.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList34 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean36 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean38 = strComparableList34.remove((java.lang.Object) 10.0f);
        boolean boolean39 = strComparableList27.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList34);
        strComparableList27.clear();
        int int41 = strComparableList19.indexOf((java.lang.Object) strComparableList27);
        int int42 = strComparableList2.indexOf((java.lang.Object) strComparableList19);
        int int43 = strComparableList19.getSizeField();
        java.lang.Comparable<java.lang.String> strComparable45 = strComparableList19.remove(0);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList48 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean50 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean52 = strComparableList48.remove((java.lang.Object) 10.0f);
        boolean boolean54 = strComparableList48.remove((java.lang.Object) 0);
        boolean boolean55 = strComparableList48.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList59 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableList59.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean61 = strComparableList59.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean63 = strComparableList59.remove((java.lang.Object) 10.0f);
        boolean boolean64 = strComparableList48.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList59);
        boolean boolean65 = strComparableList19.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList59);
    }

    @Test
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test212");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        int int25 = strComparableList2.indexOf((java.lang.Object) strComparableList20);
        int int26 = strComparableList2.getSizeField();
    }

    @Test
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test213");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList6 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int8 = strComparableList6.indexOf((java.lang.Object) (-7));
        int int10 = strComparableList6.indexOf((java.lang.Object) (-1.0d));
        boolean boolean11 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList6);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableList13.size();
        boolean boolean16 = strComparableList0.remove((java.lang.Object) strComparableList13);
        // The following exception was thrown during execution in test generation
        try {
            strComparableList0.add((-2), (java.lang.Comparable<java.lang.String>) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-2, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test214");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int15 = strComparableList13.indexOf((java.lang.Object) (-7));
        strComparableList13.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableList13.size();
        boolean boolean20 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        java.lang.Comparable<java.lang.String> strComparable23 = strComparableList2.set(0, (java.lang.Comparable<java.lang.String>) "");
    }

    @Test
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test215");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.getSizeField();
        boolean boolean17 = strComparableList2.remove((java.lang.Object) (byte) 100);
        boolean boolean19 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean21 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable24 = strComparableList2.set((int) (short) -1, (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-1, size=3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test216");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.getSizeField();
        boolean boolean17 = strComparableList2.remove((java.lang.Object) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable19 = strComparableList2.get((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:35, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test217");
        DataStructures.commonscollections.TreeList<java.util.List<java.lang.Comparable<java.lang.String>>> strComparableListList0 = new DataStructures.commonscollections.TreeList<java.util.List<java.lang.Comparable<java.lang.String>>>();
    }

    @Test
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test218");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        boolean boolean7 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList10 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean12 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableList10.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableList17.indexOf((java.lang.Object) (-3));
        boolean boolean22 = strComparableList10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList17);
        boolean boolean24 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int27 = strComparableList25.indexOf((java.lang.Object) (-7));
        boolean boolean29 = strComparableList25.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList32 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean34 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean36 = strComparableList32.remove((java.lang.Object) 10.0f);
        boolean boolean37 = strComparableList25.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList32);
        strComparableList25.clear();
        boolean boolean39 = strComparableList10.remove((java.lang.Object) strComparableList25);
        strComparableList10.clear();
        boolean boolean41 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList10);
    }

    @Test
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test219");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        int int14 = strComparableList2.indexOf((java.lang.Object) strComparableList9);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList16 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean18 = strComparableList9.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList16);
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator19 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList16.replaceAll(strComparableUnaryOperator19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test220");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableList17.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList24 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean26 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableList24.indexOf((java.lang.Object) (-3));
        boolean boolean29 = strComparableList17.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList24);
        boolean boolean31 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        int int32 = strComparableList2.indexOf((java.lang.Object) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList35 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean37 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean39 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList42 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean44 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean46 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        int int47 = strComparableList35.indexOf((java.lang.Object) strComparableList42);
        boolean boolean48 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList35);
        java.lang.Comparable<java.lang.String> strComparable50 = strComparableList2.remove(4);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList53 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableList53.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean55 = strComparableList53.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int57 = strComparableList53.indexOf((java.lang.Object) 10.0f);
        int int58 = strComparableList53.size();
        boolean boolean59 = strComparableList53.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList60 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int62 = strComparableList60.indexOf((java.lang.Object) (-7));
        boolean boolean63 = strComparableList53.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList60);
        boolean boolean64 = strComparableList53.isEmpty();
        boolean boolean65 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList53);
        java.lang.Comparable<java.lang.String> strComparable67 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList53.add(7, strComparable67);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:7, size=2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test221");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList0.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList9 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.remove((java.lang.Object) 10.0f);
        boolean boolean15 = strComparableList9.remove((java.lang.Object) 0);
        boolean boolean16 = strComparableList9.isEmpty();
        boolean boolean17 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean19 = strComparableList0.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList22 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableList22.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean24 = strComparableList22.add((java.lang.Comparable<java.lang.String>) "");
        int int25 = strComparableList22.getSizeField();
        int int27 = strComparableList22.indexOf((java.lang.Object) 0.0f);
        boolean boolean29 = strComparableList22.removeElem((java.lang.Comparable<java.lang.String>) "");
        boolean boolean30 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable32 = strComparableList22.get(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:10, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test222");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList11 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList11.size();
        boolean boolean14 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList11);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList15 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean22 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean23 = strComparableList15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList18);
        boolean boolean24 = strComparableList2.remove((java.lang.Object) strComparableList15);
        int int26 = strComparableList15.indexOf((java.lang.Object) 1);
        strComparableList15.clear();
        strComparableList15.clear();
    }

    @Test
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test223");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable18 = strComparableList2.remove((int) (byte) 0);
        boolean boolean19 = strComparableList2.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList22 = strComparableList2.subList((-10), 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: fromIndex = -10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test224");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        boolean boolean8 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableList2.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList10 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int12 = strComparableList10.indexOf((java.lang.Object) (-7));
        boolean boolean14 = strComparableList10.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList17 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean21 = strComparableList17.remove((java.lang.Object) 10.0f);
        boolean boolean22 = strComparableList10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList17);
        strComparableList10.clear();
        int int24 = strComparableList2.indexOf((java.lang.Object) strComparableList10);
        int int25 = strComparableList10.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList27 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int29 = strComparableList27.indexOf((java.lang.Object) (-7));
        strComparableList27.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean34 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean36 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList39 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean41 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableList39.indexOf((java.lang.Object) 10.0f);
        int int44 = strComparableList39.size();
        boolean boolean45 = strComparableList27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList39);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean46 = strComparableList10.addAll((-4), (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList39);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -4, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test225");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList6 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int8 = strComparableList6.indexOf((java.lang.Object) (-7));
        int int10 = strComparableList6.indexOf((java.lang.Object) (-1.0d));
        boolean boolean11 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList6);
        boolean boolean13 = strComparableList6.add((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList14 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int16 = strComparableList14.indexOf((java.lang.Object) (-7));
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int19 = strComparableList17.indexOf((java.lang.Object) (-7));
        strComparableList17.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList23 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int25 = strComparableList23.indexOf((java.lang.Object) (-7));
        int int27 = strComparableList23.indexOf((java.lang.Object) (-1.0d));
        boolean boolean28 = strComparableList17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList23);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList30 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableList30.size();
        boolean boolean33 = strComparableList17.remove((java.lang.Object) strComparableList30);
        boolean boolean35 = strComparableList17.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean36 = strComparableList14.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList17);
        boolean boolean37 = strComparableList6.remove((java.lang.Object) strComparableList14);
        java.util.Collection<java.lang.Comparable<java.lang.String>> strComparableCollection38 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean39 = strComparableList6.addAll(strComparableCollection38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test226");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int1 = strComparableList0.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList4 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableList4.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList4.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int8 = strComparableList4.indexOf((java.lang.Object) 10.0f);
        int int9 = strComparableList4.size();
        boolean boolean10 = strComparableList4.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList11 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int13 = strComparableList11.indexOf((java.lang.Object) (-7));
        boolean boolean14 = strComparableList4.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList11);
        boolean boolean16 = strComparableList4.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int17 = strComparableList4.getSizeField();
        int int18 = strComparableList4.size();
        boolean boolean19 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList4);
        // The following exception was thrown during execution in test generation
        try {
            strComparableList0.add((int) (short) 1, (java.lang.Comparable<java.lang.String>) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:1, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test227");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        int int25 = strComparableList2.indexOf((java.lang.Object) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int28 = strComparableList26.indexOf((java.lang.Object) (-7));
        strComparableList26.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList26.indexOf((java.lang.Object) false);
        int int34 = strComparableList26.getSizeField();
        int int35 = strComparableList26.getSizeField();
        boolean boolean36 = strComparableList20.remove((java.lang.Object) strComparableList26);
        boolean boolean38 = strComparableList26.removeElem((java.lang.Comparable<java.lang.String>) "");
        boolean boolean39 = strComparableList26.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable42 = strComparableList26.set(6, (java.lang.Comparable<java.lang.String>) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:6, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test228");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        int int7 = strComparableList2.indexOf((java.lang.Object) 0.0f);
        boolean boolean9 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableList13.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        boolean boolean25 = strComparableList13.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean27 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable29 = strComparableList13.remove((int) (byte) 0);
        boolean boolean30 = strComparableList13.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList33 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableList33.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean35 = strComparableList33.add((java.lang.Comparable<java.lang.String>) "");
        int int36 = strComparableList33.getSizeField();
        java.lang.Comparable<java.lang.String> strComparable38 = strComparableList33.get(1);
        boolean boolean39 = strComparableList13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList33);
        boolean boolean40 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList33);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable43 = strComparableList2.set(10, (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:10, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test229");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        int int7 = strComparableList2.indexOf((java.lang.Object) 0.0f);
        boolean boolean9 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableList13.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        boolean boolean25 = strComparableList13.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean27 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable29 = strComparableList13.remove((int) (byte) 0);
        boolean boolean30 = strComparableList13.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList33 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableList33.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean35 = strComparableList33.add((java.lang.Comparable<java.lang.String>) "");
        int int36 = strComparableList33.getSizeField();
        java.lang.Comparable<java.lang.String> strComparable38 = strComparableList33.get(1);
        boolean boolean39 = strComparableList13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList33);
        boolean boolean40 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList33);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList43 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean45 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableList43.indexOf((java.lang.Object) 10.0f);
        int int48 = strComparableList43.size();
        boolean boolean49 = strComparableList43.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList50 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int52 = strComparableList50.indexOf((java.lang.Object) (-7));
        boolean boolean53 = strComparableList43.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList50);
        boolean boolean55 = strComparableList43.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int56 = strComparableList43.getSizeField();
        int int57 = strComparableList43.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList60 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableList60.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean62 = strComparableList60.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean64 = strComparableList60.remove((java.lang.Object) 10.0f);
        boolean boolean66 = strComparableList60.remove((java.lang.Object) 0);
        boolean boolean67 = strComparableList60.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList69 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean70 = strComparableList69.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int71 = strComparableList69.size();
        boolean boolean72 = strComparableList60.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList69);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList73 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList76 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean77 = strComparableList76.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean78 = strComparableList76.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean80 = strComparableList76.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean81 = strComparableList73.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList76);
        boolean boolean82 = strComparableList60.remove((java.lang.Object) strComparableList73);
        boolean boolean83 = strComparableList73.isEmpty();
        boolean boolean85 = strComparableList73.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int86 = strComparableList43.indexOf((java.lang.Object) strComparableList73);
        boolean boolean87 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList43);
    }

    @Test
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test230");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList0.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList9 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.remove((java.lang.Object) 10.0f);
        boolean boolean15 = strComparableList9.remove((java.lang.Object) 0);
        boolean boolean16 = strComparableList9.isEmpty();
        boolean boolean17 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int20 = strComparableList18.indexOf((java.lang.Object) (-7));
        strComparableList18.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList18.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList27 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean29 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean31 = strComparableList27.remove((java.lang.Object) 10.0f);
        boolean boolean33 = strComparableList27.remove((java.lang.Object) 0);
        boolean boolean34 = strComparableList27.isEmpty();
        boolean boolean35 = strComparableList18.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList27);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList36 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList27);
        int int37 = strComparableList0.indexOf((java.lang.Object) strComparableList27);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList41 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableList41.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean43 = strComparableList41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int45 = strComparableList41.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList48 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean50 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int52 = strComparableList48.indexOf((java.lang.Object) (-3));
        boolean boolean53 = strComparableList41.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList48);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList56 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableList56.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean58 = strComparableList56.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableList56.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList63 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean64 = strComparableList63.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean65 = strComparableList63.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int67 = strComparableList63.indexOf((java.lang.Object) (-3));
        boolean boolean68 = strComparableList56.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList63);
        boolean boolean70 = strComparableList56.add((java.lang.Comparable<java.lang.String>) "");
        int int71 = strComparableList41.indexOf((java.lang.Object) "");
        java.lang.Comparable<java.lang.String> strComparable74 = strComparableList41.set(0, (java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable76 = strComparableList41.get(1);
        boolean boolean77 = strComparableList27.addAll(2, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList41);
        java.util.Collection<java.lang.Comparable<java.lang.String>> strComparableCollection78 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean79 = strComparableList41.addAll(strComparableCollection78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test231");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        int int25 = strComparableList2.indexOf((java.lang.Object) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int28 = strComparableList26.indexOf((java.lang.Object) (-7));
        strComparableList26.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList26.indexOf((java.lang.Object) false);
        int int34 = strComparableList26.getSizeField();
        int int35 = strComparableList26.getSizeField();
        boolean boolean36 = strComparableList20.remove((java.lang.Object) strComparableList26);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList39 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean41 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableList39.indexOf((java.lang.Object) 10.0f);
        int int44 = strComparableList39.size();
        boolean boolean45 = strComparableList39.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList46 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int48 = strComparableList46.indexOf((java.lang.Object) (-7));
        boolean boolean49 = strComparableList39.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList46);
        boolean boolean51 = strComparableList39.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int52 = strComparableList39.getSizeField();
        int int53 = strComparableList39.size();
        int int54 = strComparableList26.indexOf((java.lang.Object) int53);
        java.lang.Comparable<java.lang.String> strComparable56 = strComparableList26.get(0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable58 = strComparableList26.get(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:100, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test232");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        boolean boolean4 = strComparableList0.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList7 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableList7.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean9 = strComparableList7.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList7.remove((java.lang.Object) 10.0f);
        boolean boolean12 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList7);
        int int13 = strComparableList0.size();
        java.lang.Comparable<java.lang.String> strComparable16 = strComparableList0.set((int) (short) 0, (java.lang.Comparable<java.lang.String>) "");
        int int18 = strComparableList0.indexOf((java.lang.Object) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable20 = strComparableList0.remove((-10));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-10, size=2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test233");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList13 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean17 = strComparableList13.remove((java.lang.Object) 10.0f);
        boolean boolean18 = strComparableList2.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int22 = strComparableList20.indexOf((java.lang.Object) (-7));
        int int24 = strComparableList20.indexOf((java.lang.Object) (-1.0d));
        boolean boolean25 = strComparableList13.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        int int28 = strComparableList26.indexOf((java.lang.Object) (-1));
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList31 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean33 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableList31.indexOf((java.lang.Object) (-3));
        boolean boolean37 = strComparableList31.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableList31.getSizeField();
        boolean boolean39 = strComparableList26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList31);
        // The following exception was thrown during execution in test generation
        try {
            strComparableList26.add((int) ' ', (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:32, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test234");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList16 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean18 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableList16.indexOf((java.lang.Object) (-3));
        boolean boolean21 = strComparableList9.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList16);
        int int22 = strComparableList9.getSizeField();
        int int23 = strComparableList9.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableList26.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean28 = strComparableList26.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int30 = strComparableList26.indexOf((java.lang.Object) 10.0f);
        int int31 = strComparableList26.size();
        boolean boolean32 = strComparableList26.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList33 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int35 = strComparableList33.indexOf((java.lang.Object) (-7));
        boolean boolean36 = strComparableList26.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList33);
        boolean boolean37 = strComparableList26.isEmpty();
        boolean boolean38 = strComparableList9.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList26);
        boolean boolean39 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList41 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int43 = strComparableList41.indexOf((java.lang.Object) (-7));
        strComparableList41.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int48 = strComparableList41.indexOf((java.lang.Object) false);
        int int49 = strComparableList41.getSizeField();
        int int50 = strComparableList41.getSizeField();
        boolean boolean51 = strComparableList9.addAll((int) (short) 1, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList41);
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator52 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList9.replaceAll(strComparableUnaryOperator52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test235");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        int int15 = strComparableList2.getSizeField();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList18 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean22 = strComparableList18.remove((java.lang.Object) 10.0f);
        boolean boolean24 = strComparableList18.remove((java.lang.Object) 0);
        boolean boolean25 = strComparableList18.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList29 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean31 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean33 = strComparableList29.remove((java.lang.Object) 10.0f);
        boolean boolean34 = strComparableList18.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList29);
        boolean boolean35 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList29);
        int int36 = strComparableList2.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList39 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean41 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableList39.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList46 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableList46.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean48 = strComparableList46.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int50 = strComparableList46.indexOf((java.lang.Object) (-3));
        boolean boolean51 = strComparableList39.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList46);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList54 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean55 = strComparableList54.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean56 = strComparableList54.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int58 = strComparableList54.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList61 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean63 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int65 = strComparableList61.indexOf((java.lang.Object) (-3));
        boolean boolean66 = strComparableList54.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList61);
        boolean boolean68 = strComparableList54.add((java.lang.Comparable<java.lang.String>) "");
        int int69 = strComparableList39.indexOf((java.lang.Object) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList72 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean73 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean74 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean76 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList79 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean80 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean81 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean83 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "");
        int int84 = strComparableList72.indexOf((java.lang.Object) strComparableList79);
        boolean boolean85 = strComparableList39.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList72);
        boolean boolean86 = strComparableList39.isEmpty();
        boolean boolean87 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList39);
        strComparableList2.clear();
        boolean boolean90 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
    }

    @Test
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test236");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        boolean boolean8 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean9 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableList13.indexOf((java.lang.Object) (-3));
        boolean boolean19 = strComparableList13.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean20 = strComparableList2.addAll((int) (byte) 1, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable22 = strComparableList2.remove(9);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:9, size=2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test237");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        int int25 = strComparableList2.indexOf((java.lang.Object) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int28 = strComparableList26.indexOf((java.lang.Object) (-7));
        strComparableList26.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList26.indexOf((java.lang.Object) false);
        int int34 = strComparableList26.getSizeField();
        int int35 = strComparableList26.getSizeField();
        boolean boolean36 = strComparableList20.remove((java.lang.Object) strComparableList26);
        boolean boolean38 = strComparableList26.removeElem((java.lang.Comparable<java.lang.String>) "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable40 = strComparableList26.get(2);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:2, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test238");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        boolean boolean8 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean9 = strComparableList2.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList12 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableList12.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean14 = strComparableList12.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean16 = strComparableList12.remove((java.lang.Object) 10.0f);
        boolean boolean18 = strComparableList12.remove((java.lang.Object) 0);
        boolean boolean19 = strComparableList12.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList21 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableList21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableList21.size();
        boolean boolean24 = strComparableList12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList21);
        int int25 = strComparableList21.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList28 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableList28.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean30 = strComparableList28.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableList28.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList35 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean37 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableList35.indexOf((java.lang.Object) (-3));
        boolean boolean40 = strComparableList28.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList35);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList43 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean45 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableList43.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList50 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableList50.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean52 = strComparableList50.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableList50.indexOf((java.lang.Object) (-3));
        boolean boolean55 = strComparableList43.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList50);
        boolean boolean57 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "");
        int int58 = strComparableList28.indexOf((java.lang.Object) "");
        boolean boolean59 = strComparableList21.remove((java.lang.Object) int58);
        boolean boolean60 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList21);
        int int61 = strComparableList2.getSizeField();
    }

    @Test
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test239");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList0.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList9 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.remove((java.lang.Object) 10.0f);
        boolean boolean15 = strComparableList9.remove((java.lang.Object) 0);
        boolean boolean16 = strComparableList9.isEmpty();
        boolean boolean17 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean19 = strComparableList0.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList22 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableList22.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean24 = strComparableList22.add((java.lang.Comparable<java.lang.String>) "");
        int int25 = strComparableList22.getSizeField();
        int int27 = strComparableList22.indexOf((java.lang.Object) 0.0f);
        boolean boolean29 = strComparableList22.removeElem((java.lang.Comparable<java.lang.String>) "");
        boolean boolean30 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable32 = strComparableList22.remove((-7));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-7, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test240");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        boolean boolean8 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableList2.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList10 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int12 = strComparableList10.indexOf((java.lang.Object) (-7));
        boolean boolean14 = strComparableList10.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList17 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean21 = strComparableList17.remove((java.lang.Object) 10.0f);
        boolean boolean22 = strComparableList10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList17);
        strComparableList10.clear();
        int int24 = strComparableList2.indexOf((java.lang.Object) strComparableList10);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList27 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean29 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int31 = strComparableList27.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList34 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean36 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableList34.indexOf((java.lang.Object) (-3));
        boolean boolean39 = strComparableList27.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList34);
        int int40 = strComparableList34.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList43 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean45 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableList43.indexOf((java.lang.Object) 10.0f);
        int int48 = strComparableList43.size();
        boolean boolean49 = strComparableList43.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList50 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int52 = strComparableList50.indexOf((java.lang.Object) (-7));
        boolean boolean53 = strComparableList43.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList50);
        boolean boolean55 = strComparableList43.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int56 = strComparableList43.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList59 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableList59.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean61 = strComparableList59.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int63 = strComparableList59.indexOf((java.lang.Object) 10.0f);
        int int64 = strComparableList59.size();
        boolean boolean65 = strComparableList59.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList66 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int68 = strComparableList66.indexOf((java.lang.Object) (-7));
        boolean boolean69 = strComparableList59.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList66);
        boolean boolean70 = strComparableList43.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList59);
        boolean boolean71 = strComparableList34.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList59);
        boolean boolean72 = strComparableList10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList59);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList75 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean76 = strComparableList75.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean77 = strComparableList75.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int79 = strComparableList75.indexOf((java.lang.Object) 10.0f);
        int int80 = strComparableList75.size();
        boolean boolean81 = strComparableList75.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList82 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int84 = strComparableList82.indexOf((java.lang.Object) (-7));
        boolean boolean85 = strComparableList75.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList82);
        boolean boolean87 = strComparableList75.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int88 = strComparableList75.getSizeField();
        boolean boolean90 = strComparableList75.remove((java.lang.Object) (byte) 100);
        boolean boolean92 = strComparableList75.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean94 = strComparableList75.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean95 = strComparableList10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList75);
    }

    @Test
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test241");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable6 = strComparableList2.remove(1);
        int int7 = strComparableList2.size();
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList2.replaceAll(strComparableUnaryOperator8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test242");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableList2.getSizeField();
        boolean boolean8 = strComparableList2.isEmpty();
    }

    @Test
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test243");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        boolean boolean7 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList8 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList2);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList11 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean15 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableList18.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean27 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableList25.indexOf((java.lang.Object) (-3));
        boolean boolean30 = strComparableList18.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList25);
        int int31 = strComparableList18.getSizeField();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList34 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean36 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean38 = strComparableList34.remove((java.lang.Object) 10.0f);
        boolean boolean40 = strComparableList34.remove((java.lang.Object) 0);
        boolean boolean41 = strComparableList34.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList45 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableList45.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean47 = strComparableList45.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean49 = strComparableList45.remove((java.lang.Object) 10.0f);
        boolean boolean50 = strComparableList34.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList45);
        boolean boolean51 = strComparableList18.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList45);
        boolean boolean52 = strComparableList11.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList45);
        boolean boolean54 = strComparableList11.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int55 = strComparableList2.indexOf((java.lang.Object) boolean54);
        int int56 = strComparableList2.size();
    }

    @Test
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test244");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable7 = strComparableList0.get(9);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:9, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test245");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        int int14 = strComparableList2.indexOf((java.lang.Object) strComparableList9);
        int int15 = strComparableList2.getSizeField();
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator16 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList2.replaceAll(strComparableUnaryOperator16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test246");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList0.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList9 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.remove((java.lang.Object) 10.0f);
        boolean boolean15 = strComparableList9.remove((java.lang.Object) 0);
        boolean boolean16 = strComparableList9.isEmpty();
        boolean boolean17 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean18 = strComparableList0.isEmpty();
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator19 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList0.replaceAll(strComparableUnaryOperator19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test247");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableList17.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList24 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean26 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableList24.indexOf((java.lang.Object) (-3));
        boolean boolean29 = strComparableList17.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList24);
        boolean boolean31 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        int int32 = strComparableList2.indexOf((java.lang.Object) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList35 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean37 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean39 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList42 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean44 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean46 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        int int47 = strComparableList35.indexOf((java.lang.Object) strComparableList42);
        boolean boolean48 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList35);
        boolean boolean49 = strComparableList2.isEmpty();
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator50 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList2.replaceAll(strComparableUnaryOperator50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test248");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        int int15 = strComparableList2.getSizeField();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList18 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean22 = strComparableList18.remove((java.lang.Object) 10.0f);
        boolean boolean24 = strComparableList18.remove((java.lang.Object) 0);
        boolean boolean25 = strComparableList18.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList29 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean31 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean33 = strComparableList29.remove((java.lang.Object) 10.0f);
        boolean boolean34 = strComparableList18.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList29);
        boolean boolean35 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList29);
        int int36 = strComparableList2.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList39 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean41 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableList39.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList46 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableList46.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean48 = strComparableList46.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int50 = strComparableList46.indexOf((java.lang.Object) (-3));
        boolean boolean51 = strComparableList39.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList46);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList54 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean55 = strComparableList54.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean56 = strComparableList54.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int58 = strComparableList54.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList61 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean63 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int65 = strComparableList61.indexOf((java.lang.Object) (-3));
        boolean boolean66 = strComparableList54.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList61);
        boolean boolean68 = strComparableList54.add((java.lang.Comparable<java.lang.String>) "");
        int int69 = strComparableList39.indexOf((java.lang.Object) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList72 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean73 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean74 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean76 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList79 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean80 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean81 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean83 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "");
        int int84 = strComparableList72.indexOf((java.lang.Object) strComparableList79);
        boolean boolean85 = strComparableList39.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList72);
        boolean boolean86 = strComparableList39.isEmpty();
        boolean boolean87 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList39);
        strComparableList2.clear();
        java.lang.Comparable<java.lang.String> strComparable90 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable91 = strComparableList2.set(100, strComparable90);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:100, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test249");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        boolean boolean7 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable10 = strComparableList2.set(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableList13.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        boolean boolean25 = strComparableList13.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean27 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList13.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList31 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean33 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableList31.indexOf((java.lang.Object) (-3));
        int int36 = strComparableList13.indexOf((java.lang.Object) strComparableList31);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList37 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int39 = strComparableList37.indexOf((java.lang.Object) (-7));
        strComparableList37.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableList37.indexOf((java.lang.Object) false);
        int int45 = strComparableList37.getSizeField();
        int int46 = strComparableList37.getSizeField();
        boolean boolean47 = strComparableList31.remove((java.lang.Object) strComparableList37);
        boolean boolean48 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList37);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList49 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int51 = strComparableList49.indexOf((java.lang.Object) (-7));
        strComparableList49.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean56 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean58 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList61 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean63 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int65 = strComparableList61.indexOf((java.lang.Object) 10.0f);
        int int66 = strComparableList61.size();
        boolean boolean67 = strComparableList49.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList61);
        int int68 = strComparableList61.getSizeField();
        int int69 = strComparableList37.indexOf((java.lang.Object) int68);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList72 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean73 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean74 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int76 = strComparableList72.indexOf((java.lang.Object) (-3));
        boolean boolean77 = strComparableList37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList72);
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator78 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList72.replaceAll(strComparableUnaryOperator78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test250");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        boolean boolean7 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable10 = strComparableList2.set(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableList13.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        boolean boolean25 = strComparableList13.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean27 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList13.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList31 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean33 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableList31.indexOf((java.lang.Object) (-3));
        int int36 = strComparableList13.indexOf((java.lang.Object) strComparableList31);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList37 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int39 = strComparableList37.indexOf((java.lang.Object) (-7));
        strComparableList37.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableList37.indexOf((java.lang.Object) false);
        int int45 = strComparableList37.getSizeField();
        int int46 = strComparableList37.getSizeField();
        boolean boolean47 = strComparableList31.remove((java.lang.Object) strComparableList37);
        boolean boolean48 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList37);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList49 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int51 = strComparableList49.indexOf((java.lang.Object) (-7));
        strComparableList49.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean56 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean58 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList61 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean63 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int65 = strComparableList61.indexOf((java.lang.Object) 10.0f);
        int int66 = strComparableList61.size();
        boolean boolean67 = strComparableList49.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList61);
        int int68 = strComparableList61.getSizeField();
        int int69 = strComparableList37.indexOf((java.lang.Object) int68);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList72 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean73 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean74 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int76 = strComparableList72.indexOf((java.lang.Object) (-3));
        boolean boolean77 = strComparableList37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList72);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable79 = strComparableList72.get((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:35, size=2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test251");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean7 = strComparableList0.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList10 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean12 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "");
        int int13 = strComparableList10.getSizeField();
        boolean boolean14 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList10);
        int int15 = strComparableList10.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableList18.indexOf((java.lang.Object) 10.0f);
        int int23 = strComparableList18.size();
        boolean boolean24 = strComparableList18.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int27 = strComparableList25.indexOf((java.lang.Object) (-7));
        boolean boolean28 = strComparableList18.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList25);
        boolean boolean30 = strComparableList18.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int31 = strComparableList18.getSizeField();
        int int32 = strComparableList18.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList35 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean37 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean39 = strComparableList35.remove((java.lang.Object) 10.0f);
        boolean boolean41 = strComparableList35.remove((java.lang.Object) 0);
        boolean boolean42 = strComparableList35.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList44 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableList44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableList44.size();
        boolean boolean47 = strComparableList35.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList44);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList48 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList51 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableList51.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean53 = strComparableList51.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean55 = strComparableList51.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean56 = strComparableList48.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList51);
        boolean boolean57 = strComparableList35.remove((java.lang.Object) strComparableList48);
        boolean boolean58 = strComparableList48.isEmpty();
        boolean boolean60 = strComparableList48.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int61 = strComparableList18.indexOf((java.lang.Object) strComparableList48);
        boolean boolean63 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "");
        int int64 = strComparableList10.indexOf((java.lang.Object) strComparableList48);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList65 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int67 = strComparableList65.indexOf((java.lang.Object) (-7));
        boolean boolean69 = strComparableList65.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList72 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean73 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean74 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean76 = strComparableList72.remove((java.lang.Object) 10.0f);
        boolean boolean77 = strComparableList65.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList72);
        int int78 = strComparableList65.size();
        boolean boolean79 = strComparableList48.remove((java.lang.Object) int78);
    }

    @Test
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test252");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList1 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableList1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableList1.size();
        boolean boolean5 = strComparableList1.add((java.lang.Comparable<java.lang.String>) "");
    }

    @Test
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test253");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableList0.indexOf((java.lang.Object) false);
        int int8 = strComparableList0.getSizeField();
        int int9 = strComparableList0.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList12 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableList12.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean14 = strComparableList12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int16 = strComparableList12.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList19 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableList19.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean21 = strComparableList19.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableList19.indexOf((java.lang.Object) (-3));
        boolean boolean24 = strComparableList12.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList19);
        boolean boolean26 = strComparableList12.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable28 = strComparableList12.remove((int) (byte) 0);
        boolean boolean29 = strComparableList12.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList32 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean34 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "");
        int int35 = strComparableList32.getSizeField();
        java.lang.Comparable<java.lang.String> strComparable37 = strComparableList32.get(1);
        boolean boolean38 = strComparableList12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList32);
        boolean boolean39 = strComparableList0.remove((java.lang.Object) strComparableList32);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable41 = strComparableList32.remove((-8));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-8, size=2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test254");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        int int14 = strComparableList9.indexOf((java.lang.Object) (byte) 10);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList16 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableList16.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = strComparableList9.addAll((int) '#', (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList16);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test255");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.size();
        int int16 = strComparableList2.size();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable19 = strComparableList2.set((-5), (java.lang.Comparable<java.lang.String>) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-5, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test256");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList6 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int8 = strComparableList6.indexOf((java.lang.Object) (-7));
        int int10 = strComparableList6.indexOf((java.lang.Object) (-1.0d));
        boolean boolean11 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList6);
        boolean boolean13 = strComparableList6.add((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList14 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int16 = strComparableList14.indexOf((java.lang.Object) (-7));
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int19 = strComparableList17.indexOf((java.lang.Object) (-7));
        strComparableList17.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList23 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int25 = strComparableList23.indexOf((java.lang.Object) (-7));
        int int27 = strComparableList23.indexOf((java.lang.Object) (-1.0d));
        boolean boolean28 = strComparableList17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList23);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList30 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableList30.size();
        boolean boolean33 = strComparableList17.remove((java.lang.Object) strComparableList30);
        boolean boolean35 = strComparableList17.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean36 = strComparableList14.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList17);
        boolean boolean37 = strComparableList6.remove((java.lang.Object) strComparableList14);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable40 = strComparableList6.set((-1), (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-1, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test257");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList6 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int8 = strComparableList6.indexOf((java.lang.Object) (-7));
        int int10 = strComparableList6.indexOf((java.lang.Object) (-1.0d));
        boolean boolean11 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList6);
        boolean boolean12 = strComparableList0.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = strComparableList0.subList(1, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test258");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList13 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean17 = strComparableList13.remove((java.lang.Object) 10.0f);
        boolean boolean18 = strComparableList2.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int22 = strComparableList20.indexOf((java.lang.Object) (-7));
        int int24 = strComparableList20.indexOf((java.lang.Object) (-1.0d));
        boolean boolean25 = strComparableList13.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        int int28 = strComparableList26.indexOf((java.lang.Object) (-1));
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList31 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean33 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableList31.indexOf((java.lang.Object) (-3));
        boolean boolean37 = strComparableList31.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableList31.getSizeField();
        boolean boolean39 = strComparableList26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList31);
        int int40 = strComparableList26.size();
    }

    @Test
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test259");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        boolean boolean4 = strComparableList0.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList7 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableList7.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean9 = strComparableList7.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList7.remove((java.lang.Object) 10.0f);
        boolean boolean12 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList7);
        int int13 = strComparableList0.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList16 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean18 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableList16.indexOf((java.lang.Object) (-3));
        boolean boolean22 = strComparableList16.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableList16.getSizeField();
        boolean boolean24 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList16);
        boolean boolean26 = strComparableList0.add((java.lang.Comparable<java.lang.String>) "");
    }

    @Test
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test260");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator7 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList2.replaceAll(strComparableUnaryOperator7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test261");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        int int25 = strComparableList2.indexOf((java.lang.Object) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int28 = strComparableList26.indexOf((java.lang.Object) (-7));
        strComparableList26.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList26.indexOf((java.lang.Object) false);
        int int34 = strComparableList26.getSizeField();
        int int35 = strComparableList26.getSizeField();
        boolean boolean36 = strComparableList20.remove((java.lang.Object) strComparableList26);
        boolean boolean38 = strComparableList26.add((java.lang.Comparable<java.lang.String>) "hi!");
        strComparableList26.clear();
        boolean boolean40 = strComparableList26.isEmpty();
        int int41 = strComparableList26.size();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable44 = strComparableList26.set((-4), (java.lang.Comparable<java.lang.String>) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-4, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test262");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        int int12 = strComparableList9.getSizeField();
        int int14 = strComparableList9.indexOf((java.lang.Object) 0.0f);
        boolean boolean16 = strComparableList9.removeElem((java.lang.Comparable<java.lang.String>) "");
        strComparableList9.clear();
        boolean boolean18 = strComparableList2.remove((java.lang.Object) strComparableList9);
        boolean boolean20 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable22 = strComparableList2.get((int) (byte) 0);
    }

    @Test
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test263");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList6 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int8 = strComparableList6.indexOf((java.lang.Object) (-7));
        int int10 = strComparableList6.indexOf((java.lang.Object) (-1.0d));
        boolean boolean11 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList6);
        boolean boolean13 = strComparableList6.add((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList14 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int16 = strComparableList14.indexOf((java.lang.Object) (-7));
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int19 = strComparableList17.indexOf((java.lang.Object) (-7));
        strComparableList17.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList23 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int25 = strComparableList23.indexOf((java.lang.Object) (-7));
        int int27 = strComparableList23.indexOf((java.lang.Object) (-1.0d));
        boolean boolean28 = strComparableList17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList23);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList30 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableList30.size();
        boolean boolean33 = strComparableList17.remove((java.lang.Object) strComparableList30);
        boolean boolean35 = strComparableList17.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean36 = strComparableList14.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList17);
        boolean boolean37 = strComparableList6.remove((java.lang.Object) strComparableList14);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList40 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableList40.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean42 = strComparableList40.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean44 = strComparableList40.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList47 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableList47.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean49 = strComparableList47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int51 = strComparableList47.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList54 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean55 = strComparableList54.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean56 = strComparableList54.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int58 = strComparableList54.indexOf((java.lang.Object) (-3));
        boolean boolean59 = strComparableList47.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList54);
        int int60 = strComparableList47.getSizeField();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList63 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean64 = strComparableList63.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean65 = strComparableList63.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean67 = strComparableList63.remove((java.lang.Object) 10.0f);
        boolean boolean69 = strComparableList63.remove((java.lang.Object) 0);
        boolean boolean70 = strComparableList63.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList74 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean75 = strComparableList74.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean76 = strComparableList74.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean78 = strComparableList74.remove((java.lang.Object) 10.0f);
        boolean boolean79 = strComparableList63.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList74);
        boolean boolean80 = strComparableList47.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList74);
        boolean boolean81 = strComparableList40.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList74);
        int int82 = strComparableList40.size();
        boolean boolean83 = strComparableList6.remove((java.lang.Object) int82);
    }

    @Test
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test264");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        boolean boolean7 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable10 = strComparableList2.set(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableList13.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        boolean boolean25 = strComparableList13.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean27 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList13.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList31 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean33 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableList31.indexOf((java.lang.Object) (-3));
        int int36 = strComparableList13.indexOf((java.lang.Object) strComparableList31);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList37 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int39 = strComparableList37.indexOf((java.lang.Object) (-7));
        strComparableList37.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableList37.indexOf((java.lang.Object) false);
        int int45 = strComparableList37.getSizeField();
        int int46 = strComparableList37.getSizeField();
        boolean boolean47 = strComparableList31.remove((java.lang.Object) strComparableList37);
        boolean boolean48 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList37);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList49 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int51 = strComparableList49.indexOf((java.lang.Object) (-7));
        strComparableList49.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean56 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean58 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList61 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean63 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int65 = strComparableList61.indexOf((java.lang.Object) 10.0f);
        int int66 = strComparableList61.size();
        boolean boolean67 = strComparableList49.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList61);
        int int68 = strComparableList61.getSizeField();
        int int69 = strComparableList37.indexOf((java.lang.Object) int68);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList72 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean73 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean74 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int76 = strComparableList72.indexOf((java.lang.Object) (-3));
        boolean boolean77 = strComparableList37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList72);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList78 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList72);
        boolean boolean80 = strComparableList78.add((java.lang.Comparable<java.lang.String>) "");
    }

    @Test
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test265");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        int int12 = strComparableList9.getSizeField();
        int int14 = strComparableList9.indexOf((java.lang.Object) 0.0f);
        boolean boolean16 = strComparableList9.removeElem((java.lang.Comparable<java.lang.String>) "");
        strComparableList9.clear();
        boolean boolean18 = strComparableList2.remove((java.lang.Object) strComparableList9);
        boolean boolean20 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean22 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
    }

    @Test
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test266");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        boolean boolean4 = strComparableList0.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList7 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableList7.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean9 = strComparableList7.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList7.remove((java.lang.Object) 10.0f);
        boolean boolean12 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList7);
        int int13 = strComparableList0.size();
        boolean boolean15 = strComparableList0.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable17 = strComparableList0.get((-3));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-3, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test267");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        strComparableList2.clear();
        int int7 = strComparableList2.size();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList10 = strComparableList2.subList(5, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(5) > toIndex(0)");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test268");
        DataStructures.commonscollections.TreeList<java.util.Collection<java.lang.Comparable<java.lang.String>>> strComparableCollectionList0 = new DataStructures.commonscollections.TreeList<java.util.Collection<java.lang.Comparable<java.lang.String>>>();
    }

    @Test
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test269");
        DataStructures.commonscollections.TreeList<java.lang.Cloneable> cloneableList0 = new DataStructures.commonscollections.TreeList<java.lang.Cloneable>();
    }

    @Test
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test270");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        boolean boolean8 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableList2.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList10 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int12 = strComparableList10.indexOf((java.lang.Object) (-7));
        boolean boolean14 = strComparableList10.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList17 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean21 = strComparableList17.remove((java.lang.Object) 10.0f);
        boolean boolean22 = strComparableList10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList17);
        strComparableList10.clear();
        int int24 = strComparableList2.indexOf((java.lang.Object) strComparableList10);
        boolean boolean26 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList29 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean31 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList29.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList36 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableList36.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean38 = strComparableList36.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int40 = strComparableList36.indexOf((java.lang.Object) (-3));
        boolean boolean41 = strComparableList29.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList36);
        boolean boolean43 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable45 = strComparableList29.remove((int) (byte) 0);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList48 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean50 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int52 = strComparableList48.indexOf((java.lang.Object) 10.0f);
        int int53 = strComparableList48.size();
        boolean boolean54 = strComparableList48.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList55 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int57 = strComparableList55.indexOf((java.lang.Object) (-7));
        boolean boolean58 = strComparableList48.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList55);
        boolean boolean60 = strComparableList48.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int61 = strComparableList48.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList64 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean66 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int68 = strComparableList64.indexOf((java.lang.Object) 10.0f);
        int int69 = strComparableList64.size();
        boolean boolean70 = strComparableList64.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList71 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int73 = strComparableList71.indexOf((java.lang.Object) (-7));
        boolean boolean74 = strComparableList64.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList71);
        boolean boolean75 = strComparableList48.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList64);
        boolean boolean76 = strComparableList29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList64);
        boolean boolean77 = strComparableList2.remove((java.lang.Object) strComparableList64);
        strComparableList2.clear();
    }

    @Test
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test271");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        int int14 = strComparableList9.indexOf((java.lang.Object) (short) 10);
        java.util.Collection<java.lang.Comparable<java.lang.String>> strComparableCollection15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = strComparableList9.addAll(strComparableCollection15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test272");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList0.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList9 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.remove((java.lang.Object) 10.0f);
        boolean boolean15 = strComparableList9.remove((java.lang.Object) 0);
        boolean boolean16 = strComparableList9.isEmpty();
        boolean boolean17 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean19 = strComparableList0.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.lang.Comparable<java.lang.String> strComparable21 = strComparableList0.remove((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable23 = strComparableList0.get(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:1, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test273");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        java.lang.Comparable<java.lang.String> strComparable10 = strComparableList2.remove((int) (byte) 0);
    }

    @Test
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test274");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        boolean boolean4 = strComparableList0.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList0.getSizeField();
    }

    @Test
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test275");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        int int14 = strComparableList2.indexOf((java.lang.Object) strComparableList9);
        int int15 = strComparableList2.size();
        boolean boolean17 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
    }

    @Test
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test276");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        int int25 = strComparableList2.indexOf((java.lang.Object) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int28 = strComparableList26.indexOf((java.lang.Object) (-7));
        strComparableList26.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList26.indexOf((java.lang.Object) false);
        int int34 = strComparableList26.getSizeField();
        int int35 = strComparableList26.getSizeField();
        boolean boolean36 = strComparableList20.remove((java.lang.Object) strComparableList26);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList39 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean41 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableList39.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList46 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableList46.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean48 = strComparableList46.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int50 = strComparableList46.indexOf((java.lang.Object) (-3));
        boolean boolean51 = strComparableList39.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList46);
        boolean boolean53 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList39.clear();
        int int55 = strComparableList39.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList56 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int58 = strComparableList56.indexOf((java.lang.Object) (-7));
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList59 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int61 = strComparableList59.indexOf((java.lang.Object) (-7));
        strComparableList59.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean66 = strComparableList59.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean68 = strComparableList59.add((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList71 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean72 = strComparableList71.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean73 = strComparableList71.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int75 = strComparableList71.indexOf((java.lang.Object) 10.0f);
        int int76 = strComparableList71.size();
        boolean boolean77 = strComparableList59.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList71);
        boolean boolean78 = strComparableList56.remove((java.lang.Object) strComparableList71);
        int int79 = strComparableList39.indexOf((java.lang.Object) strComparableList56);
        int int80 = strComparableList26.indexOf((java.lang.Object) strComparableList56);
    }

    @Test
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test277");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableList17.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList24 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean26 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableList24.indexOf((java.lang.Object) (-3));
        boolean boolean29 = strComparableList17.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList24);
        boolean boolean31 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        int int32 = strComparableList2.indexOf((java.lang.Object) "");
        java.lang.Comparable<java.lang.String> strComparable35 = strComparableList2.set(0, (java.lang.Comparable<java.lang.String>) "");
        int int36 = strComparableList2.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList39 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean41 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean43 = strComparableList39.remove((java.lang.Object) 10.0f);
        boolean boolean45 = strComparableList39.remove((java.lang.Object) 0);
        boolean boolean46 = strComparableList39.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList50 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableList50.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean52 = strComparableList50.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean54 = strComparableList50.remove((java.lang.Object) 10.0f);
        boolean boolean55 = strComparableList39.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList50);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList57 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int59 = strComparableList57.indexOf((java.lang.Object) (-7));
        int int61 = strComparableList57.indexOf((java.lang.Object) (-1.0d));
        boolean boolean62 = strComparableList50.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList57);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList63 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList50);
        boolean boolean64 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList50);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList65 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int67 = strComparableList65.indexOf((java.lang.Object) (-7));
        strComparableList65.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList71 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int73 = strComparableList71.indexOf((java.lang.Object) (-7));
        int int75 = strComparableList71.indexOf((java.lang.Object) (-1.0d));
        boolean boolean76 = strComparableList65.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList71);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList79 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean80 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean81 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int83 = strComparableList79.indexOf((java.lang.Object) 10.0f);
        int int84 = strComparableList79.size();
        boolean boolean85 = strComparableList79.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList86 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int88 = strComparableList86.indexOf((java.lang.Object) (-7));
        boolean boolean89 = strComparableList79.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList86);
        boolean boolean91 = strComparableList79.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int92 = strComparableList79.size();
        int int93 = strComparableList79.size();
        boolean boolean94 = strComparableList65.remove((java.lang.Object) int93);
        boolean boolean95 = strComparableList50.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList65);
    }

    @Test
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test278");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList16 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean18 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableList16.indexOf((java.lang.Object) (-3));
        boolean boolean21 = strComparableList9.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList16);
        int int22 = strComparableList9.getSizeField();
        int int23 = strComparableList9.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableList26.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean28 = strComparableList26.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int30 = strComparableList26.indexOf((java.lang.Object) 10.0f);
        int int31 = strComparableList26.size();
        boolean boolean32 = strComparableList26.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList33 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int35 = strComparableList33.indexOf((java.lang.Object) (-7));
        boolean boolean36 = strComparableList26.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList33);
        boolean boolean37 = strComparableList26.isEmpty();
        boolean boolean38 = strComparableList9.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList26);
        boolean boolean39 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList41 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int43 = strComparableList41.indexOf((java.lang.Object) (-7));
        strComparableList41.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList47 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int49 = strComparableList47.indexOf((java.lang.Object) (-7));
        int int51 = strComparableList47.indexOf((java.lang.Object) (-1.0d));
        boolean boolean52 = strComparableList41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList47);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList54 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean55 = strComparableList54.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int56 = strComparableList54.size();
        boolean boolean57 = strComparableList41.remove((java.lang.Object) strComparableList54);
        boolean boolean59 = strComparableList54.add((java.lang.Comparable<java.lang.String>) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean60 = strComparableList2.addAll((int) (short) -1, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList54);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test279");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        boolean boolean4 = strComparableList0.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList7 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableList7.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean9 = strComparableList7.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList7.remove((java.lang.Object) 10.0f);
        boolean boolean12 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList7);
        boolean boolean14 = strComparableList0.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator15 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList0.replaceAll(strComparableUnaryOperator15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test280");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable2 = strComparableList0.remove(5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:5, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test281");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator7 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList2.replaceAll(strComparableUnaryOperator7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test282");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        boolean boolean8 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableList2.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList10 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int12 = strComparableList10.indexOf((java.lang.Object) (-7));
        boolean boolean14 = strComparableList10.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList17 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean21 = strComparableList17.remove((java.lang.Object) 10.0f);
        boolean boolean22 = strComparableList10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList17);
        strComparableList10.clear();
        int int24 = strComparableList2.indexOf((java.lang.Object) strComparableList10);
        boolean boolean26 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList29 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean31 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList29.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList36 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableList36.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean38 = strComparableList36.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int40 = strComparableList36.indexOf((java.lang.Object) (-3));
        boolean boolean41 = strComparableList29.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList36);
        boolean boolean43 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable45 = strComparableList29.remove((int) (byte) 0);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList48 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean50 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int52 = strComparableList48.indexOf((java.lang.Object) 10.0f);
        int int53 = strComparableList48.size();
        boolean boolean54 = strComparableList48.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList55 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int57 = strComparableList55.indexOf((java.lang.Object) (-7));
        boolean boolean58 = strComparableList48.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList55);
        boolean boolean60 = strComparableList48.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int61 = strComparableList48.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList64 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean66 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int68 = strComparableList64.indexOf((java.lang.Object) 10.0f);
        int int69 = strComparableList64.size();
        boolean boolean70 = strComparableList64.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList71 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int73 = strComparableList71.indexOf((java.lang.Object) (-7));
        boolean boolean74 = strComparableList64.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList71);
        boolean boolean75 = strComparableList48.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList64);
        boolean boolean76 = strComparableList29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList64);
        boolean boolean77 = strComparableList2.remove((java.lang.Object) strComparableList64);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList80 = strComparableList2.subList((-8), (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: fromIndex = -8");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test283");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.remove((java.lang.Object) (short) 1);
        boolean boolean17 = strComparableList2.isEmpty();
        int int18 = strComparableList2.size();
    }

    @Test
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test284");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList17 = strComparableList9.subList((int) (short) -1, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: fromIndex = -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test285");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        int int25 = strComparableList2.indexOf((java.lang.Object) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int28 = strComparableList26.indexOf((java.lang.Object) (-7));
        strComparableList26.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList26.indexOf((java.lang.Object) false);
        int int34 = strComparableList26.getSizeField();
        int int35 = strComparableList26.getSizeField();
        boolean boolean36 = strComparableList20.remove((java.lang.Object) strComparableList26);
        boolean boolean38 = strComparableList26.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableList26.size();
    }

    @Test
    public void test286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test286");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList6 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int8 = strComparableList6.indexOf((java.lang.Object) (-7));
        int int10 = strComparableList6.indexOf((java.lang.Object) (-1.0d));
        boolean boolean11 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList6);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableList13.size();
        boolean boolean16 = strComparableList0.remove((java.lang.Object) strComparableList13);
        boolean boolean18 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        int int19 = strComparableList13.getSizeField();
    }

    @Test
    public void test287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test287");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList6 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int8 = strComparableList6.indexOf((java.lang.Object) (-7));
        int int10 = strComparableList6.indexOf((java.lang.Object) (-1.0d));
        boolean boolean11 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList6);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList14 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableList14.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean16 = strComparableList14.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableList14.indexOf((java.lang.Object) (-3));
        boolean boolean20 = strComparableList14.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean21 = strComparableList14.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean27 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableList25.indexOf((java.lang.Object) (-3));
        boolean boolean31 = strComparableList25.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean32 = strComparableList14.addAll((int) (byte) 1, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList25);
        boolean boolean33 = strComparableList6.remove((java.lang.Object) (byte) 1);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList35 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int37 = strComparableList35.indexOf((java.lang.Object) (-7));
        boolean boolean39 = strComparableList35.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList42 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean44 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean46 = strComparableList42.remove((java.lang.Object) 10.0f);
        boolean boolean47 = strComparableList35.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList42);
        int int48 = strComparableList35.size();
        boolean boolean49 = strComparableList6.addAll(0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList35);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList53 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableList53.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean55 = strComparableList53.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int57 = strComparableList53.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList60 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableList60.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean62 = strComparableList60.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int64 = strComparableList60.indexOf((java.lang.Object) (-3));
        boolean boolean65 = strComparableList53.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList60);
        int int66 = strComparableList53.getSizeField();
        int int67 = strComparableList53.getSizeField();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean68 = strComparableList6.addAll((int) (byte) -1, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList53);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test288");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        boolean boolean4 = strComparableList0.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean6 = strComparableList0.removeElem((java.lang.Comparable<java.lang.String>) "");
    }

    @Test
    public void test289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test289");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean7 = strComparableList0.add((java.lang.Comparable<java.lang.String>) "");
        int int8 = strComparableList0.getSizeField();
        int int9 = strComparableList0.getSizeField();
    }

    @Test
    public void test290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test290");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        int int15 = strComparableList2.getSizeField();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList18 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean22 = strComparableList18.remove((java.lang.Object) 10.0f);
        boolean boolean24 = strComparableList18.remove((java.lang.Object) 0);
        boolean boolean25 = strComparableList18.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList29 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean31 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean33 = strComparableList29.remove((java.lang.Object) 10.0f);
        boolean boolean34 = strComparableList18.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList29);
        boolean boolean35 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList29);
        int int36 = strComparableList2.size();
        boolean boolean38 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator39 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList2.replaceAll(strComparableUnaryOperator39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test291");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList11 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList11.size();
        boolean boolean14 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList11);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList15 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean22 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean23 = strComparableList15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList18);
        boolean boolean24 = strComparableList2.remove((java.lang.Object) strComparableList15);
        boolean boolean25 = strComparableList15.isEmpty();
        int int26 = strComparableList15.size();
        strComparableList15.clear();
    }

    @Test
    public void test292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test292");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int19 = strComparableList17.indexOf((java.lang.Object) (-7));
        boolean boolean21 = strComparableList17.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList24 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean26 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean28 = strComparableList24.remove((java.lang.Object) 10.0f);
        boolean boolean29 = strComparableList17.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList24);
        strComparableList17.clear();
        boolean boolean31 = strComparableList2.remove((java.lang.Object) strComparableList17);
        strComparableList2.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable34 = strComparableList2.get((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:32, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test293");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableList18.indexOf((java.lang.Object) 10.0f);
        int int23 = strComparableList18.size();
        boolean boolean24 = strComparableList18.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int27 = strComparableList25.indexOf((java.lang.Object) (-7));
        boolean boolean28 = strComparableList18.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList25);
        boolean boolean29 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList18);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList31 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList31.size();
        int int34 = strComparableList31.size();
        boolean boolean35 = strComparableList18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList31);
        strComparableList18.clear();
        boolean boolean38 = strComparableList18.removeElem((java.lang.Comparable<java.lang.String>) "");
    }

    @Test
    public void test294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test294");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableList17.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList24 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean26 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableList24.indexOf((java.lang.Object) (-3));
        boolean boolean29 = strComparableList17.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList24);
        boolean boolean31 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        int int32 = strComparableList2.indexOf((java.lang.Object) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList35 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean37 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean39 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList42 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean44 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean46 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        int int47 = strComparableList35.indexOf((java.lang.Object) strComparableList42);
        boolean boolean48 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList35);
        java.lang.Comparable<java.lang.String> strComparable50 = strComparableList2.remove(4);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList53 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableList53.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean55 = strComparableList53.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int57 = strComparableList53.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList60 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableList60.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean62 = strComparableList60.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int64 = strComparableList60.indexOf((java.lang.Object) (-3));
        boolean boolean65 = strComparableList53.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList60);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList68 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableList68.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean70 = strComparableList68.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int72 = strComparableList68.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList75 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean76 = strComparableList75.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean77 = strComparableList75.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int79 = strComparableList75.indexOf((java.lang.Object) (-3));
        boolean boolean80 = strComparableList68.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList75);
        boolean boolean82 = strComparableList68.add((java.lang.Comparable<java.lang.String>) "");
        int int83 = strComparableList53.indexOf((java.lang.Object) "");
        int int84 = strComparableList2.indexOf((java.lang.Object) strComparableList53);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable86 = strComparableList2.get(8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:8, size=6");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test295");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean7 = strComparableList0.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList10 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean12 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "");
        int int13 = strComparableList10.getSizeField();
        boolean boolean14 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList10);
        int int15 = strComparableList10.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableList18.indexOf((java.lang.Object) 10.0f);
        int int23 = strComparableList18.size();
        boolean boolean24 = strComparableList18.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int27 = strComparableList25.indexOf((java.lang.Object) (-7));
        boolean boolean28 = strComparableList18.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList25);
        boolean boolean30 = strComparableList18.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int31 = strComparableList18.getSizeField();
        int int32 = strComparableList18.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList35 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean37 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean39 = strComparableList35.remove((java.lang.Object) 10.0f);
        boolean boolean41 = strComparableList35.remove((java.lang.Object) 0);
        boolean boolean42 = strComparableList35.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList44 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableList44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableList44.size();
        boolean boolean47 = strComparableList35.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList44);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList48 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList51 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableList51.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean53 = strComparableList51.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean55 = strComparableList51.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean56 = strComparableList48.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList51);
        boolean boolean57 = strComparableList35.remove((java.lang.Object) strComparableList48);
        boolean boolean58 = strComparableList48.isEmpty();
        boolean boolean60 = strComparableList48.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int61 = strComparableList18.indexOf((java.lang.Object) strComparableList48);
        boolean boolean63 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "");
        int int64 = strComparableList10.indexOf((java.lang.Object) strComparableList48);
        boolean boolean66 = strComparableList10.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
    }

    @Test
    public void test296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test296");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int19 = strComparableList17.indexOf((java.lang.Object) (-7));
        boolean boolean21 = strComparableList17.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList24 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean26 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean28 = strComparableList24.remove((java.lang.Object) 10.0f);
        boolean boolean29 = strComparableList17.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList24);
        strComparableList17.clear();
        boolean boolean31 = strComparableList2.remove((java.lang.Object) strComparableList17);
        strComparableList17.clear();
    }

    @Test
    public void test297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test297");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList6 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int8 = strComparableList6.indexOf((java.lang.Object) (-7));
        int int10 = strComparableList6.indexOf((java.lang.Object) (-1.0d));
        boolean boolean11 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList6);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList14 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableList14.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean16 = strComparableList14.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableList14.indexOf((java.lang.Object) (-3));
        boolean boolean20 = strComparableList14.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean21 = strComparableList14.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean27 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableList25.indexOf((java.lang.Object) (-3));
        boolean boolean31 = strComparableList25.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean32 = strComparableList14.addAll((int) (byte) 1, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList25);
        boolean boolean33 = strComparableList6.remove((java.lang.Object) (byte) 1);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList35 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int37 = strComparableList35.indexOf((java.lang.Object) (-7));
        boolean boolean39 = strComparableList35.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList42 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean44 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean46 = strComparableList42.remove((java.lang.Object) 10.0f);
        boolean boolean47 = strComparableList35.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList42);
        int int48 = strComparableList35.size();
        boolean boolean49 = strComparableList6.addAll(0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList35);
        int int50 = strComparableList6.size();
    }

    @Test
    public void test298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test298");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        int int14 = strComparableList2.indexOf((java.lang.Object) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableList17.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList24 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean26 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableList24.indexOf((java.lang.Object) (-3));
        boolean boolean29 = strComparableList17.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList24);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList32 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean34 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableList32.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList39 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean41 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableList39.indexOf((java.lang.Object) (-3));
        boolean boolean44 = strComparableList32.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList39);
        boolean boolean46 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "");
        int int47 = strComparableList17.indexOf((java.lang.Object) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList51 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableList51.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean53 = strComparableList51.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int55 = strComparableList51.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList58 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableList58.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean60 = strComparableList58.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int62 = strComparableList58.indexOf((java.lang.Object) (-3));
        boolean boolean63 = strComparableList51.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList58);
        int int64 = strComparableList58.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList67 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean68 = strComparableList67.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean69 = strComparableList67.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int71 = strComparableList67.indexOf((java.lang.Object) 10.0f);
        int int72 = strComparableList67.size();
        boolean boolean73 = strComparableList67.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList74 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int76 = strComparableList74.indexOf((java.lang.Object) (-7));
        boolean boolean77 = strComparableList67.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList74);
        boolean boolean79 = strComparableList67.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int80 = strComparableList67.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList83 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean84 = strComparableList83.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean85 = strComparableList83.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int87 = strComparableList83.indexOf((java.lang.Object) 10.0f);
        int int88 = strComparableList83.size();
        boolean boolean89 = strComparableList83.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList90 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int92 = strComparableList90.indexOf((java.lang.Object) (-7));
        boolean boolean93 = strComparableList83.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList90);
        boolean boolean94 = strComparableList67.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList83);
        boolean boolean95 = strComparableList58.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList83);
        boolean boolean96 = strComparableList17.addAll(2, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList83);
        boolean boolean97 = strComparableList2.remove((java.lang.Object) strComparableList17);
        boolean boolean99 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
    }

    @Test
    public void test299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test299");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        boolean boolean8 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableList2.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList10 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int12 = strComparableList10.indexOf((java.lang.Object) (-7));
        boolean boolean14 = strComparableList10.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList17 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean21 = strComparableList17.remove((java.lang.Object) 10.0f);
        boolean boolean22 = strComparableList10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList17);
        strComparableList10.clear();
        int int24 = strComparableList2.indexOf((java.lang.Object) strComparableList10);
        int int25 = strComparableList10.getSizeField();
    }

    @Test
    public void test300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test300");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList6 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int8 = strComparableList6.indexOf((java.lang.Object) (-7));
        int int10 = strComparableList6.indexOf((java.lang.Object) (-1.0d));
        boolean boolean11 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList6);
        boolean boolean12 = strComparableList0.isEmpty();
        strComparableList0.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList14 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList0);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList15 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int17 = strComparableList15.indexOf((java.lang.Object) (-7));
        strComparableList15.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList15.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean27 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "");
        int int28 = strComparableList25.getSizeField();
        boolean boolean29 = strComparableList15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList25);
        strComparableList15.clear();
        boolean boolean31 = strComparableList0.remove((java.lang.Object) strComparableList15);
        // The following exception was thrown during execution in test generation
        try {
            strComparableList15.add(5, (java.lang.Comparable<java.lang.String>) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:5, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test301");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean7 = strComparableList0.add((java.lang.Comparable<java.lang.String>) "hi!");
        strComparableList0.clear();
    }

    @Test
    public void test302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test302");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList16 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean18 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableList16.indexOf((java.lang.Object) (-3));
        boolean boolean21 = strComparableList9.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList16);
        int int22 = strComparableList9.getSizeField();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList25 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean27 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean29 = strComparableList25.remove((java.lang.Object) 10.0f);
        boolean boolean31 = strComparableList25.remove((java.lang.Object) 0);
        boolean boolean32 = strComparableList25.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList36 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableList36.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean38 = strComparableList36.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean40 = strComparableList36.remove((java.lang.Object) 10.0f);
        boolean boolean41 = strComparableList25.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList36);
        boolean boolean42 = strComparableList9.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList36);
        boolean boolean43 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList36);
        java.lang.Comparable<java.lang.String> strComparable45 = strComparableList2.remove(0);
    }

    @Test
    public void test303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test303");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.size();
        int int16 = strComparableList2.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList19 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableList19.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean21 = strComparableList19.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableList19.indexOf((java.lang.Object) (-3));
        boolean boolean25 = strComparableList19.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableList19.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList27 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int29 = strComparableList27.indexOf((java.lang.Object) (-7));
        boolean boolean31 = strComparableList27.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList34 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean36 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean38 = strComparableList34.remove((java.lang.Object) 10.0f);
        boolean boolean39 = strComparableList27.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList34);
        strComparableList27.clear();
        int int41 = strComparableList19.indexOf((java.lang.Object) strComparableList27);
        int int42 = strComparableList2.indexOf((java.lang.Object) strComparableList19);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList43 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList2);
        strComparableList2.clear();
        boolean boolean46 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
    }

    @Test
    public void test304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test304");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList6 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int8 = strComparableList6.indexOf((java.lang.Object) (-7));
        int int10 = strComparableList6.indexOf((java.lang.Object) (-1.0d));
        boolean boolean11 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList6);
        boolean boolean13 = strComparableList0.add((java.lang.Comparable<java.lang.String>) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            strComparableList0.add((-1), (java.lang.Comparable<java.lang.String>) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-1, size=2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test305");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList11 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList11.size();
        boolean boolean14 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList11);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList15 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean22 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean23 = strComparableList15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList18);
        boolean boolean24 = strComparableList2.remove((java.lang.Object) strComparableList15);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int27 = strComparableList25.indexOf((java.lang.Object) (-7));
        strComparableList25.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int31 = strComparableList25.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList34 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean36 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean38 = strComparableList34.remove((java.lang.Object) 10.0f);
        boolean boolean40 = strComparableList34.remove((java.lang.Object) 0);
        boolean boolean41 = strComparableList34.isEmpty();
        boolean boolean42 = strComparableList25.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList34);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList43 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList34);
        boolean boolean44 = strComparableList15.remove((java.lang.Object) strComparableList34);
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator45 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList34.replaceAll(strComparableUnaryOperator45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test306");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int15 = strComparableList13.indexOf((java.lang.Object) (-7));
        strComparableList13.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableList13.size();
        boolean boolean20 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList23 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableList23.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean25 = strComparableList23.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean27 = strComparableList23.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList30 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean32 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean34 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        int int35 = strComparableList23.indexOf((java.lang.Object) strComparableList30);
        int int36 = strComparableList23.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList37 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList23);
        boolean boolean38 = strComparableList13.remove((java.lang.Object) strComparableList23);
    }

    @Test
    public void test307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test307");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        int int25 = strComparableList2.indexOf((java.lang.Object) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int28 = strComparableList26.indexOf((java.lang.Object) (-7));
        strComparableList26.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList26.indexOf((java.lang.Object) false);
        int int34 = strComparableList26.getSizeField();
        int int35 = strComparableList26.getSizeField();
        boolean boolean36 = strComparableList20.remove((java.lang.Object) strComparableList26);
        int int37 = strComparableList26.getSizeField();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable39 = strComparableList26.get((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:1, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test308");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList13 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean17 = strComparableList13.remove((java.lang.Object) 10.0f);
        boolean boolean18 = strComparableList2.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int22 = strComparableList20.indexOf((java.lang.Object) (-7));
        int int24 = strComparableList20.indexOf((java.lang.Object) (-1.0d));
        boolean boolean25 = strComparableList13.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean27 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean28 = strComparableList20.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList29 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean30 = strComparableList20.isEmpty();
    }

    @Test
    public void test309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test309");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        int int25 = strComparableList2.indexOf((java.lang.Object) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int28 = strComparableList26.indexOf((java.lang.Object) (-7));
        strComparableList26.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList26.indexOf((java.lang.Object) false);
        int int34 = strComparableList26.getSizeField();
        int int35 = strComparableList26.getSizeField();
        boolean boolean36 = strComparableList20.remove((java.lang.Object) strComparableList26);
        int int37 = strComparableList26.size();
        boolean boolean38 = strComparableList26.isEmpty();
    }

    @Test
    public void test310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test310");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableList18.indexOf((java.lang.Object) 10.0f);
        int int23 = strComparableList18.size();
        boolean boolean24 = strComparableList18.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int27 = strComparableList25.indexOf((java.lang.Object) (-7));
        boolean boolean28 = strComparableList18.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList25);
        boolean boolean29 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList18);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList30 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList2);
    }

    @Test
    public void test311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test311");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean7 = strComparableList0.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean9 = strComparableList0.add((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList12 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableList12.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean14 = strComparableList12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int16 = strComparableList12.indexOf((java.lang.Object) 10.0f);
        int int17 = strComparableList12.size();
        boolean boolean18 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList12);
        int int19 = strComparableList12.getSizeField();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList22 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableList22.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean24 = strComparableList22.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean26 = strComparableList22.remove((java.lang.Object) 10.0f);
        boolean boolean28 = strComparableList22.remove((java.lang.Object) 0);
        boolean boolean29 = strComparableList22.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList33 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableList33.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean35 = strComparableList33.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean37 = strComparableList33.remove((java.lang.Object) 10.0f);
        boolean boolean38 = strComparableList22.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList33);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList40 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int42 = strComparableList40.indexOf((java.lang.Object) (-7));
        int int44 = strComparableList40.indexOf((java.lang.Object) (-1.0d));
        boolean boolean45 = strComparableList33.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList40);
        boolean boolean47 = strComparableList40.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean48 = strComparableList40.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList51 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableList51.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean53 = strComparableList51.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int55 = strComparableList51.indexOf((java.lang.Object) 10.0f);
        int int56 = strComparableList51.size();
        boolean boolean57 = strComparableList51.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList58 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int60 = strComparableList58.indexOf((java.lang.Object) (-7));
        boolean boolean61 = strComparableList51.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList58);
        boolean boolean63 = strComparableList51.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int64 = strComparableList51.getSizeField();
        int int65 = strComparableList51.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList68 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableList68.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean70 = strComparableList68.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean72 = strComparableList68.remove((java.lang.Object) 10.0f);
        boolean boolean74 = strComparableList68.remove((java.lang.Object) 0);
        boolean boolean75 = strComparableList68.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList77 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean78 = strComparableList77.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int79 = strComparableList77.size();
        boolean boolean80 = strComparableList68.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList77);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList81 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList84 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean85 = strComparableList84.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean86 = strComparableList84.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean88 = strComparableList84.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean89 = strComparableList81.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList84);
        boolean boolean90 = strComparableList68.remove((java.lang.Object) strComparableList81);
        boolean boolean91 = strComparableList81.isEmpty();
        boolean boolean93 = strComparableList81.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int94 = strComparableList51.indexOf((java.lang.Object) strComparableList81);
        boolean boolean95 = strComparableList40.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList81);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList96 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList40);
        boolean boolean97 = strComparableList12.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList40);
    }

    @Test
    public void test312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test312");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList6 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int8 = strComparableList6.indexOf((java.lang.Object) (-7));
        int int10 = strComparableList6.indexOf((java.lang.Object) (-1.0d));
        boolean boolean11 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList6);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableList13.size();
        boolean boolean16 = strComparableList0.remove((java.lang.Object) strComparableList13);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList19 = strComparableList0.subList((-8), (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: fromIndex = -8");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test313");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        int int25 = strComparableList2.indexOf((java.lang.Object) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int28 = strComparableList26.indexOf((java.lang.Object) (-7));
        strComparableList26.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList26.indexOf((java.lang.Object) false);
        int int34 = strComparableList26.getSizeField();
        int int35 = strComparableList26.getSizeField();
        boolean boolean36 = strComparableList20.remove((java.lang.Object) strComparableList26);
        boolean boolean38 = strComparableList26.removeElem((java.lang.Comparable<java.lang.String>) "");
        boolean boolean39 = strComparableList26.isEmpty();
        boolean boolean41 = strComparableList26.add((java.lang.Comparable<java.lang.String>) "");
    }

    @Test
    public void test314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test314");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList3 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int5 = strComparableList3.indexOf((java.lang.Object) (-7));
        strComparableList3.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean10 = strComparableList3.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean12 = strComparableList3.add((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList15 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableList15.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean17 = strComparableList15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableList15.indexOf((java.lang.Object) 10.0f);
        int int20 = strComparableList15.size();
        boolean boolean21 = strComparableList3.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList15);
        boolean boolean22 = strComparableList0.remove((java.lang.Object) strComparableList15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable24 = strComparableList0.remove((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:100, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test315");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        boolean boolean8 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean9 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableList13.indexOf((java.lang.Object) (-3));
        boolean boolean19 = strComparableList13.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean20 = strComparableList2.addAll((int) (byte) 1, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        boolean boolean22 = strComparableList13.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int23 = strComparableList13.size();
    }

    @Test
    public void test316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test316");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.getSizeField();
        int int16 = strComparableList2.size();
        boolean boolean18 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean20 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
    }

    @Test
    public void test317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test317");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        boolean boolean7 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable10 = strComparableList2.set(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableList13.indexOf((java.lang.Object) 10.0f);
        int int18 = strComparableList13.size();
        boolean boolean19 = strComparableList13.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int22 = strComparableList20.indexOf((java.lang.Object) (-7));
        boolean boolean23 = strComparableList13.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean25 = strComparableList13.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int26 = strComparableList13.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList29 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean31 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList29.indexOf((java.lang.Object) 10.0f);
        int int34 = strComparableList29.size();
        boolean boolean35 = strComparableList29.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList36 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int38 = strComparableList36.indexOf((java.lang.Object) (-7));
        boolean boolean39 = strComparableList29.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList36);
        boolean boolean40 = strComparableList13.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList29);
        boolean boolean41 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList29);
    }

    @Test
    public void test318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test318");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.getSizeField();
        boolean boolean17 = strComparableList2.remove((java.lang.Object) (byte) 100);
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList19 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int21 = strComparableList19.indexOf((java.lang.Object) (-7));
        int int23 = strComparableList19.indexOf((java.lang.Object) (-1.0d));
        boolean boolean24 = strComparableList2.remove((java.lang.Object) int23);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList2);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList28 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableList28.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean30 = strComparableList28.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean32 = strComparableList28.remove((java.lang.Object) 10.0f);
        boolean boolean34 = strComparableList28.remove((java.lang.Object) 0);
        boolean boolean35 = strComparableList28.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList37 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableList37.size();
        boolean boolean40 = strComparableList28.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList37);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList41 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList44 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableList44.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean46 = strComparableList44.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean48 = strComparableList44.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean49 = strComparableList41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList44);
        boolean boolean50 = strComparableList28.remove((java.lang.Object) strComparableList41);
        int int52 = strComparableList41.indexOf((java.lang.Object) 1);
        strComparableList41.clear();
        boolean boolean54 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList41);
    }

    @Test
    public void test319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test319");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        int int14 = strComparableList2.indexOf((java.lang.Object) strComparableList9);
        int int15 = strComparableList2.getSizeField();
        boolean boolean17 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        boolean boolean26 = strComparableList20.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int27 = strComparableList20.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList28 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int30 = strComparableList28.indexOf((java.lang.Object) (-7));
        boolean boolean32 = strComparableList28.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList35 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean37 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean39 = strComparableList35.remove((java.lang.Object) 10.0f);
        boolean boolean40 = strComparableList28.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList35);
        strComparableList28.clear();
        int int42 = strComparableList20.indexOf((java.lang.Object) strComparableList28);
        int int43 = strComparableList28.size();
        int int44 = strComparableList2.indexOf((java.lang.Object) strComparableList28);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable47 = strComparableList28.set(1, (java.lang.Comparable<java.lang.String>) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:1, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test320");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList6 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int8 = strComparableList6.indexOf((java.lang.Object) (-7));
        int int10 = strComparableList6.indexOf((java.lang.Object) (-1.0d));
        boolean boolean11 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList6);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableList13.size();
        boolean boolean16 = strComparableList0.remove((java.lang.Object) strComparableList13);
        int int17 = strComparableList0.size();
    }

    @Test
    public void test321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test321");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        int int25 = strComparableList2.indexOf((java.lang.Object) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int28 = strComparableList26.indexOf((java.lang.Object) (-7));
        strComparableList26.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList26.indexOf((java.lang.Object) false);
        int int34 = strComparableList26.getSizeField();
        int int35 = strComparableList26.getSizeField();
        boolean boolean36 = strComparableList20.remove((java.lang.Object) strComparableList26);
        boolean boolean38 = strComparableList26.removeElem((java.lang.Comparable<java.lang.String>) "");
        boolean boolean39 = strComparableList26.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList40 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int42 = strComparableList40.indexOf((java.lang.Object) (-7));
        boolean boolean44 = strComparableList40.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList47 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableList47.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean49 = strComparableList47.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean51 = strComparableList47.remove((java.lang.Object) 10.0f);
        boolean boolean52 = strComparableList40.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList47);
        int int53 = strComparableList40.size();
        boolean boolean55 = strComparableList40.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.lang.Comparable<java.lang.String> strComparable57 = strComparableList40.get(0);
        boolean boolean59 = strComparableList40.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean60 = strComparableList26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList40);
        boolean boolean62 = strComparableList40.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean64 = strComparableList40.add((java.lang.Comparable<java.lang.String>) "hi!");
    }

    @Test
    public void test322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test322");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        boolean boolean7 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList8 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList2);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList11 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean15 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableList18.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean27 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableList25.indexOf((java.lang.Object) (-3));
        boolean boolean30 = strComparableList18.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList25);
        int int31 = strComparableList18.getSizeField();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList34 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean36 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean38 = strComparableList34.remove((java.lang.Object) 10.0f);
        boolean boolean40 = strComparableList34.remove((java.lang.Object) 0);
        boolean boolean41 = strComparableList34.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList45 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableList45.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean47 = strComparableList45.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean49 = strComparableList45.remove((java.lang.Object) 10.0f);
        boolean boolean50 = strComparableList34.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList45);
        boolean boolean51 = strComparableList18.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList45);
        boolean boolean52 = strComparableList11.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList45);
        boolean boolean54 = strComparableList11.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int55 = strComparableList2.indexOf((java.lang.Object) boolean54);
        java.lang.Object obj56 = null;
        boolean boolean57 = strComparableList2.remove(obj56);
    }

    @Test
    public void test323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test323");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        int int25 = strComparableList2.indexOf((java.lang.Object) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int28 = strComparableList26.indexOf((java.lang.Object) (-7));
        strComparableList26.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList26.indexOf((java.lang.Object) false);
        int int34 = strComparableList26.getSizeField();
        int int35 = strComparableList26.getSizeField();
        boolean boolean36 = strComparableList20.remove((java.lang.Object) strComparableList26);
        boolean boolean38 = strComparableList26.removeElem((java.lang.Comparable<java.lang.String>) "");
        boolean boolean39 = strComparableList26.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList40 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int42 = strComparableList40.indexOf((java.lang.Object) (-7));
        boolean boolean44 = strComparableList40.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList47 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableList47.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean49 = strComparableList47.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean51 = strComparableList47.remove((java.lang.Object) 10.0f);
        boolean boolean52 = strComparableList40.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList47);
        int int53 = strComparableList40.size();
        boolean boolean55 = strComparableList40.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.lang.Comparable<java.lang.String> strComparable57 = strComparableList40.get(0);
        boolean boolean59 = strComparableList40.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean60 = strComparableList26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList40);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable62 = strComparableList26.remove((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:100, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test324");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        boolean boolean7 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable10 = strComparableList2.set(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableList13.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        boolean boolean25 = strComparableList13.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean27 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList13.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList31 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean33 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableList31.indexOf((java.lang.Object) (-3));
        int int36 = strComparableList13.indexOf((java.lang.Object) strComparableList31);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList37 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int39 = strComparableList37.indexOf((java.lang.Object) (-7));
        strComparableList37.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableList37.indexOf((java.lang.Object) false);
        int int45 = strComparableList37.getSizeField();
        int int46 = strComparableList37.getSizeField();
        boolean boolean47 = strComparableList31.remove((java.lang.Object) strComparableList37);
        boolean boolean48 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList37);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList49 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int51 = strComparableList49.indexOf((java.lang.Object) (-7));
        strComparableList49.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean56 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean58 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList61 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean63 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int65 = strComparableList61.indexOf((java.lang.Object) 10.0f);
        int int66 = strComparableList61.size();
        boolean boolean67 = strComparableList49.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList61);
        int int68 = strComparableList61.getSizeField();
        int int69 = strComparableList37.indexOf((java.lang.Object) int68);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList72 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean73 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean74 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int76 = strComparableList72.indexOf((java.lang.Object) (-3));
        boolean boolean77 = strComparableList37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList72);
        boolean boolean78 = strComparableList37.isEmpty();
        boolean boolean79 = strComparableList37.isEmpty();
        boolean boolean80 = strComparableList37.isEmpty();
    }

    @Test
    public void test325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test325");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean1 = strComparableList0.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList4 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableList4.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean6 = strComparableList4.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int8 = strComparableList4.indexOf((java.lang.Object) (-3));
        boolean boolean10 = strComparableList4.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList4.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList15 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableList15.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean17 = strComparableList15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableList15.indexOf((java.lang.Object) (-3));
        boolean boolean21 = strComparableList15.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList4.addAll((int) (byte) 1, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList15);
        boolean boolean24 = strComparableList15.removeElem((java.lang.Comparable<java.lang.String>) "");
        boolean boolean25 = strComparableList0.remove((java.lang.Object) boolean24);
    }

    @Test
    public void test326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test326");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        boolean boolean8 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean9 = strComparableList2.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList12 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableList12.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean14 = strComparableList12.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean16 = strComparableList12.remove((java.lang.Object) 10.0f);
        boolean boolean18 = strComparableList12.remove((java.lang.Object) 0);
        boolean boolean19 = strComparableList12.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList21 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableList21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableList21.size();
        boolean boolean24 = strComparableList12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList21);
        int int25 = strComparableList21.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList28 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableList28.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean30 = strComparableList28.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableList28.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList35 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean37 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableList35.indexOf((java.lang.Object) (-3));
        boolean boolean40 = strComparableList28.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList35);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList43 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean45 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableList43.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList50 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableList50.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean52 = strComparableList50.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableList50.indexOf((java.lang.Object) (-3));
        boolean boolean55 = strComparableList43.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList50);
        boolean boolean57 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "");
        int int58 = strComparableList28.indexOf((java.lang.Object) "");
        boolean boolean59 = strComparableList21.remove((java.lang.Object) int58);
        boolean boolean60 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList21);
        int int61 = strComparableList21.size();
        java.util.Collection<java.lang.Comparable<java.lang.String>> strComparableCollection62 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean63 = strComparableList21.removeAll(strComparableCollection62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test327");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean7 = strComparableList0.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList10 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean12 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "");
        int int13 = strComparableList10.getSizeField();
        boolean boolean14 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList10);
        int int15 = strComparableList10.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableList18.indexOf((java.lang.Object) 10.0f);
        int int23 = strComparableList18.size();
        boolean boolean24 = strComparableList18.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int27 = strComparableList25.indexOf((java.lang.Object) (-7));
        boolean boolean28 = strComparableList18.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList25);
        boolean boolean30 = strComparableList18.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int31 = strComparableList18.getSizeField();
        int int32 = strComparableList18.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList35 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean37 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean39 = strComparableList35.remove((java.lang.Object) 10.0f);
        boolean boolean41 = strComparableList35.remove((java.lang.Object) 0);
        boolean boolean42 = strComparableList35.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList44 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableList44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableList44.size();
        boolean boolean47 = strComparableList35.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList44);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList48 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList51 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableList51.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean53 = strComparableList51.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean55 = strComparableList51.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean56 = strComparableList48.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList51);
        boolean boolean57 = strComparableList35.remove((java.lang.Object) strComparableList48);
        boolean boolean58 = strComparableList48.isEmpty();
        boolean boolean60 = strComparableList48.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int61 = strComparableList18.indexOf((java.lang.Object) strComparableList48);
        boolean boolean63 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "");
        int int64 = strComparableList10.indexOf((java.lang.Object) strComparableList48);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable67 = strComparableList48.set((-1), (java.lang.Comparable<java.lang.String>) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-1, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test328");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean1 = strComparableList0.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList4 = strComparableList0.subList(100, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test329");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList13 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean17 = strComparableList13.remove((java.lang.Object) 10.0f);
        boolean boolean18 = strComparableList2.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int22 = strComparableList20.indexOf((java.lang.Object) (-7));
        int int24 = strComparableList20.indexOf((java.lang.Object) (-1.0d));
        boolean boolean25 = strComparableList13.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        int int28 = strComparableList26.indexOf((java.lang.Object) (-1));
        strComparableList26.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList30 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList26);
    }

    @Test
    public void test330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test330");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList6 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int8 = strComparableList6.indexOf((java.lang.Object) (-7));
        int int10 = strComparableList6.indexOf((java.lang.Object) (-1.0d));
        boolean boolean11 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList6);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableList13.size();
        boolean boolean16 = strComparableList0.remove((java.lang.Object) strComparableList13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable18 = strComparableList13.remove((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:10, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test331");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        int int25 = strComparableList2.indexOf((java.lang.Object) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int28 = strComparableList26.indexOf((java.lang.Object) (-7));
        strComparableList26.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList26.indexOf((java.lang.Object) false);
        int int34 = strComparableList26.getSizeField();
        int int35 = strComparableList26.getSizeField();
        boolean boolean36 = strComparableList20.remove((java.lang.Object) strComparableList26);
        boolean boolean38 = strComparableList26.add((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList41 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableList41.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean43 = strComparableList41.add((java.lang.Comparable<java.lang.String>) "");
        int int44 = strComparableList41.getSizeField();
        boolean boolean46 = strComparableList41.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable49 = strComparableList41.set(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean51 = strComparableList41.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList52 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int54 = strComparableList52.indexOf((java.lang.Object) (-7));
        strComparableList52.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList58 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int60 = strComparableList58.indexOf((java.lang.Object) (-7));
        int int62 = strComparableList58.indexOf((java.lang.Object) (-1.0d));
        boolean boolean63 = strComparableList52.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList58);
        boolean boolean64 = strComparableList41.remove((java.lang.Object) boolean63);
        boolean boolean65 = strComparableList26.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList41);
    }

    @Test
    public void test332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test332");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList6 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int8 = strComparableList6.indexOf((java.lang.Object) (-7));
        int int10 = strComparableList6.indexOf((java.lang.Object) (-1.0d));
        boolean boolean11 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList6);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList14 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableList14.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean16 = strComparableList14.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableList14.indexOf((java.lang.Object) (-3));
        boolean boolean20 = strComparableList14.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean21 = strComparableList14.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean27 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableList25.indexOf((java.lang.Object) (-3));
        boolean boolean31 = strComparableList25.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean32 = strComparableList14.addAll((int) (byte) 1, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList25);
        boolean boolean33 = strComparableList6.remove((java.lang.Object) (byte) 1);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList35 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int37 = strComparableList35.indexOf((java.lang.Object) (-7));
        boolean boolean39 = strComparableList35.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList42 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean44 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean46 = strComparableList42.remove((java.lang.Object) 10.0f);
        boolean boolean47 = strComparableList35.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList42);
        int int48 = strComparableList35.size();
        boolean boolean49 = strComparableList6.addAll(0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList35);
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator50 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList35.replaceAll(strComparableUnaryOperator50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test333");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        boolean boolean7 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable10 = strComparableList2.set(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableList13.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        boolean boolean25 = strComparableList13.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean27 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList13.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList31 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean33 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableList31.indexOf((java.lang.Object) (-3));
        int int36 = strComparableList13.indexOf((java.lang.Object) strComparableList31);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList37 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int39 = strComparableList37.indexOf((java.lang.Object) (-7));
        strComparableList37.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableList37.indexOf((java.lang.Object) false);
        int int45 = strComparableList37.getSizeField();
        int int46 = strComparableList37.getSizeField();
        boolean boolean47 = strComparableList31.remove((java.lang.Object) strComparableList37);
        boolean boolean48 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList37);
        boolean boolean49 = strComparableList2.isEmpty();
    }

    @Test
    public void test334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test334");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        int int15 = strComparableList9.size();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable17 = strComparableList9.get(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:100, size=2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test335");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        int int15 = strComparableList2.getSizeField();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList18 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean22 = strComparableList18.remove((java.lang.Object) 10.0f);
        boolean boolean24 = strComparableList18.remove((java.lang.Object) 0);
        boolean boolean25 = strComparableList18.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList29 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean31 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean33 = strComparableList29.remove((java.lang.Object) 10.0f);
        boolean boolean34 = strComparableList18.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList29);
        boolean boolean35 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList29);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList38 = strComparableList29.subList((int) (byte) -1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: fromIndex = -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test336");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList1 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableList1.add((java.lang.Comparable<java.lang.String>) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            strComparableList1.add((-8), (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-8, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test337");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        int int25 = strComparableList2.indexOf((java.lang.Object) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int28 = strComparableList26.indexOf((java.lang.Object) (-7));
        strComparableList26.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList26.indexOf((java.lang.Object) false);
        int int34 = strComparableList26.getSizeField();
        int int35 = strComparableList26.getSizeField();
        boolean boolean36 = strComparableList20.remove((java.lang.Object) strComparableList26);
        boolean boolean37 = strComparableList20.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList38 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean40 = strComparableList20.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList42 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int44 = strComparableList42.indexOf((java.lang.Object) (-7));
        strComparableList42.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList48 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int50 = strComparableList48.indexOf((java.lang.Object) (-7));
        int int52 = strComparableList48.indexOf((java.lang.Object) (-1.0d));
        boolean boolean53 = strComparableList42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList48);
        boolean boolean55 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList59 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableList59.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean61 = strComparableList59.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int63 = strComparableList59.indexOf((java.lang.Object) (-3));
        boolean boolean65 = strComparableList59.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int66 = strComparableList59.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList69 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean70 = strComparableList69.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean71 = strComparableList69.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int73 = strComparableList69.indexOf((java.lang.Object) 10.0f);
        int int74 = strComparableList69.size();
        int int75 = strComparableList59.indexOf((java.lang.Object) int74);
        boolean boolean76 = strComparableList48.addAll(0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList59);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean77 = strComparableList20.addAll(2, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList59);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 2, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test338");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        int int3 = strComparableList0.getSizeField();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList6 = strComparableList0.subList((int) '4', 7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 7");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test339");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList11 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList11.size();
        boolean boolean14 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList11);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList15 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean22 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean23 = strComparableList15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList18);
        boolean boolean24 = strComparableList2.remove((java.lang.Object) strComparableList15);
        boolean boolean25 = strComparableList15.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList28 = strComparableList15.subList((-7), 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: fromIndex = -7");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test340");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList11 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList11.size();
        boolean boolean14 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList11);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList15 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean22 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean23 = strComparableList15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList18);
        boolean boolean24 = strComparableList2.remove((java.lang.Object) strComparableList15);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int27 = strComparableList25.indexOf((java.lang.Object) (-7));
        strComparableList25.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int31 = strComparableList25.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList34 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean36 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean38 = strComparableList34.remove((java.lang.Object) 10.0f);
        boolean boolean40 = strComparableList34.remove((java.lang.Object) 0);
        boolean boolean41 = strComparableList34.isEmpty();
        boolean boolean42 = strComparableList25.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList34);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList43 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList34);
        boolean boolean44 = strComparableList15.remove((java.lang.Object) strComparableList34);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable47 = strComparableList15.set(5, (java.lang.Comparable<java.lang.String>) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:5, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test341");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableList18.indexOf((java.lang.Object) 10.0f);
        int int23 = strComparableList18.size();
        boolean boolean24 = strComparableList18.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int27 = strComparableList25.indexOf((java.lang.Object) (-7));
        boolean boolean28 = strComparableList18.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList25);
        boolean boolean29 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList18);
        boolean boolean31 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean33 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableList18.getSizeField();
    }

    @Test
    public void test342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test342");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        int int14 = strComparableList9.indexOf((java.lang.Object) (byte) 10);
        strComparableList9.clear();
    }

    @Test
    public void test343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test343");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        int int15 = strComparableList2.getSizeField();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList18 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean22 = strComparableList18.remove((java.lang.Object) 10.0f);
        boolean boolean24 = strComparableList18.remove((java.lang.Object) 0);
        boolean boolean25 = strComparableList18.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList29 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean31 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean33 = strComparableList29.remove((java.lang.Object) 10.0f);
        boolean boolean34 = strComparableList18.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList29);
        boolean boolean35 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList29);
        int int36 = strComparableList2.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList39 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean41 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableList39.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList46 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableList46.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean48 = strComparableList46.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int50 = strComparableList46.indexOf((java.lang.Object) (-3));
        boolean boolean51 = strComparableList39.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList46);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList54 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean55 = strComparableList54.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean56 = strComparableList54.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int58 = strComparableList54.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList61 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean63 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int65 = strComparableList61.indexOf((java.lang.Object) (-3));
        boolean boolean66 = strComparableList54.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList61);
        boolean boolean68 = strComparableList54.add((java.lang.Comparable<java.lang.String>) "");
        int int69 = strComparableList39.indexOf((java.lang.Object) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList72 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean73 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean74 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean76 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList79 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean80 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean81 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean83 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "");
        int int84 = strComparableList72.indexOf((java.lang.Object) strComparableList79);
        boolean boolean85 = strComparableList39.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList72);
        boolean boolean86 = strComparableList39.isEmpty();
        boolean boolean87 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList39);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable90 = strComparableList2.set((int) '#', (java.lang.Comparable<java.lang.String>) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:35, size=13");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test344");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableList18.indexOf((java.lang.Object) 10.0f);
        int int23 = strComparableList18.size();
        boolean boolean24 = strComparableList18.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int27 = strComparableList25.indexOf((java.lang.Object) (-7));
        boolean boolean28 = strComparableList18.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList25);
        boolean boolean29 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList18);
        strComparableList2.clear();
    }

    @Test
    public void test345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test345");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        int int4 = strComparableList0.indexOf((java.lang.Object) 10.0d);
        strComparableList0.clear();
    }

    @Test
    public void test346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test346");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean7 = strComparableList0.add((java.lang.Comparable<java.lang.String>) "");
        int int8 = strComparableList0.getSizeField();
        boolean boolean9 = strComparableList0.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList10 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int12 = strComparableList10.indexOf((java.lang.Object) (-7));
        strComparableList10.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int16 = strComparableList10.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList19 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableList19.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean21 = strComparableList19.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean23 = strComparableList19.remove((java.lang.Object) 10.0f);
        boolean boolean25 = strComparableList19.remove((java.lang.Object) 0);
        boolean boolean26 = strComparableList19.isEmpty();
        boolean boolean27 = strComparableList10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList19);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList28 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList19);
        int int29 = strComparableList0.indexOf((java.lang.Object) strComparableList28);
    }

    @Test
    public void test347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test347");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        int int15 = strComparableList9.size();
        int int16 = strComparableList9.getSizeField();
        strComparableList9.clear();
    }

    @Test
    public void test348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test348");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableList0.indexOf((java.lang.Object) false);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int11 = strComparableList9.size();
        boolean boolean12 = strComparableList0.remove((java.lang.Object) strComparableList9);
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int19 = strComparableList17.indexOf((java.lang.Object) (-7));
        strComparableList17.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableList17.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList26 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableList26.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean28 = strComparableList26.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean30 = strComparableList26.remove((java.lang.Object) 10.0f);
        boolean boolean32 = strComparableList26.remove((java.lang.Object) 0);
        boolean boolean33 = strComparableList26.isEmpty();
        boolean boolean34 = strComparableList17.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList26);
        boolean boolean36 = strComparableList17.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList39 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean41 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "");
        int int42 = strComparableList39.getSizeField();
        int int44 = strComparableList39.indexOf((java.lang.Object) 0.0f);
        boolean boolean46 = strComparableList39.removeElem((java.lang.Comparable<java.lang.String>) "");
        boolean boolean47 = strComparableList17.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList39);
        boolean boolean49 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean50 = strComparableList0.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList39);
    }

    @Test
    public void test349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test349");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        boolean boolean8 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean9 = strComparableList2.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList12 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableList12.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean14 = strComparableList12.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean16 = strComparableList12.remove((java.lang.Object) 10.0f);
        boolean boolean18 = strComparableList12.remove((java.lang.Object) 0);
        boolean boolean19 = strComparableList12.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList21 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableList21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableList21.size();
        boolean boolean24 = strComparableList12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList21);
        int int25 = strComparableList21.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList28 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableList28.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean30 = strComparableList28.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableList28.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList35 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean37 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableList35.indexOf((java.lang.Object) (-3));
        boolean boolean40 = strComparableList28.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList35);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList43 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean45 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableList43.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList50 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableList50.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean52 = strComparableList50.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableList50.indexOf((java.lang.Object) (-3));
        boolean boolean55 = strComparableList43.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList50);
        boolean boolean57 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "");
        int int58 = strComparableList28.indexOf((java.lang.Object) "");
        boolean boolean59 = strComparableList21.remove((java.lang.Object) int58);
        boolean boolean60 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList21);
        int int61 = strComparableList2.size();
    }

    @Test
    public void test350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test350");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.getSizeField();
        boolean boolean17 = strComparableList2.remove((java.lang.Object) (byte) 100);
        int int18 = strComparableList2.getSizeField();
        boolean boolean20 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList22 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableList22.isEmpty();
        int int24 = strComparableList22.size();
        int int26 = strComparableList22.indexOf((java.lang.Object) 0);
        boolean boolean27 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList22);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean32 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean34 = strComparableList30.remove((java.lang.Object) 10.0f);
        boolean boolean36 = strComparableList30.remove((java.lang.Object) 0);
        boolean boolean37 = strComparableList30.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList39 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int41 = strComparableList39.size();
        boolean boolean42 = strComparableList30.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList39);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList43 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList46 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableList46.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean48 = strComparableList46.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean50 = strComparableList46.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean51 = strComparableList43.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList46);
        boolean boolean52 = strComparableList30.remove((java.lang.Object) strComparableList43);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList53 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int55 = strComparableList53.indexOf((java.lang.Object) (-7));
        strComparableList53.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int59 = strComparableList53.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList62 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean64 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean66 = strComparableList62.remove((java.lang.Object) 10.0f);
        boolean boolean68 = strComparableList62.remove((java.lang.Object) 0);
        boolean boolean69 = strComparableList62.isEmpty();
        boolean boolean70 = strComparableList53.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList62);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList71 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList62);
        boolean boolean72 = strComparableList43.remove((java.lang.Object) strComparableList62);
        int int73 = strComparableList22.indexOf((java.lang.Object) boolean72);
    }

    @Test
    public void test351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test351");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList16 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean18 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableList16.indexOf((java.lang.Object) (-3));
        boolean boolean21 = strComparableList9.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList16);
        int int22 = strComparableList9.getSizeField();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList25 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean27 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean29 = strComparableList25.remove((java.lang.Object) 10.0f);
        boolean boolean31 = strComparableList25.remove((java.lang.Object) 0);
        boolean boolean32 = strComparableList25.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList36 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableList36.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean38 = strComparableList36.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean40 = strComparableList36.remove((java.lang.Object) 10.0f);
        boolean boolean41 = strComparableList25.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList36);
        boolean boolean42 = strComparableList9.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList36);
        boolean boolean43 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList36);
        boolean boolean45 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableList2.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList49 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean51 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int53 = strComparableList49.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList56 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableList56.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean58 = strComparableList56.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableList56.indexOf((java.lang.Object) (-3));
        boolean boolean61 = strComparableList49.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList56);
        boolean boolean63 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList49.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList67 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean68 = strComparableList67.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean69 = strComparableList67.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int71 = strComparableList67.indexOf((java.lang.Object) (-3));
        int int72 = strComparableList49.indexOf((java.lang.Object) strComparableList67);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList73 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int75 = strComparableList73.indexOf((java.lang.Object) (-7));
        strComparableList73.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int80 = strComparableList73.indexOf((java.lang.Object) false);
        int int81 = strComparableList73.getSizeField();
        int int82 = strComparableList73.getSizeField();
        boolean boolean83 = strComparableList67.remove((java.lang.Object) strComparableList73);
        boolean boolean85 = strComparableList73.removeElem((java.lang.Comparable<java.lang.String>) "");
        boolean boolean86 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList73);
    }

    @Test
    public void test352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test352");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableList0.indexOf((java.lang.Object) false);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int11 = strComparableList9.size();
        boolean boolean12 = strComparableList0.remove((java.lang.Object) strComparableList9);
        boolean boolean14 = strComparableList9.removeElem((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList16 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int18 = strComparableList16.indexOf((java.lang.Object) (-7));
        strComparableList16.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableList16.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList25 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean27 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean29 = strComparableList25.remove((java.lang.Object) 10.0f);
        boolean boolean31 = strComparableList25.remove((java.lang.Object) 0);
        boolean boolean32 = strComparableList25.isEmpty();
        boolean boolean33 = strComparableList16.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList25);
        boolean boolean35 = strComparableList16.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.lang.Comparable<java.lang.String> strComparable37 = strComparableList16.remove((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean38 = strComparableList9.addAll((int) '#', (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList16);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test353");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableList17.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList24 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean26 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableList24.indexOf((java.lang.Object) (-3));
        boolean boolean29 = strComparableList17.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList24);
        boolean boolean31 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        int int32 = strComparableList2.indexOf((java.lang.Object) "");
        java.lang.Comparable<java.lang.String> strComparable35 = strComparableList2.set(0, (java.lang.Comparable<java.lang.String>) "");
        int int36 = strComparableList2.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList37 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int39 = strComparableList37.indexOf((java.lang.Object) (-7));
        boolean boolean41 = strComparableList37.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList44 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableList44.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean46 = strComparableList44.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean48 = strComparableList44.remove((java.lang.Object) 10.0f);
        boolean boolean49 = strComparableList37.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList44);
        int int50 = strComparableList37.size();
        boolean boolean52 = strComparableList37.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.lang.Comparable<java.lang.String> strComparable54 = strComparableList37.get(0);
        boolean boolean55 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList37);
    }

    @Test
    public void test354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test354");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        boolean boolean19 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
    }

    @Test
    public void test355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test355");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList6 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int8 = strComparableList6.indexOf((java.lang.Object) (-7));
        int int10 = strComparableList6.indexOf((java.lang.Object) (-1.0d));
        boolean boolean11 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList6);
        boolean boolean12 = strComparableList0.isEmpty();
        strComparableList0.clear();
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator14 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList0.replaceAll(strComparableUnaryOperator14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test356");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableList17.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList24 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean26 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableList24.indexOf((java.lang.Object) (-3));
        boolean boolean29 = strComparableList17.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList24);
        boolean boolean31 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        int int32 = strComparableList2.indexOf((java.lang.Object) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList35 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean37 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean39 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList42 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean44 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean46 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        int int47 = strComparableList35.indexOf((java.lang.Object) strComparableList42);
        boolean boolean48 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList35);
        java.lang.Comparable<java.lang.String> strComparable50 = strComparableList2.remove(4);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList53 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableList53.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean55 = strComparableList53.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int57 = strComparableList53.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList60 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableList60.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean62 = strComparableList60.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int64 = strComparableList60.indexOf((java.lang.Object) (-3));
        boolean boolean65 = strComparableList53.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList60);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList68 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableList68.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean70 = strComparableList68.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int72 = strComparableList68.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList75 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean76 = strComparableList75.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean77 = strComparableList75.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int79 = strComparableList75.indexOf((java.lang.Object) (-3));
        boolean boolean80 = strComparableList68.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList75);
        boolean boolean82 = strComparableList68.add((java.lang.Comparable<java.lang.String>) "");
        int int83 = strComparableList53.indexOf((java.lang.Object) "");
        int int84 = strComparableList2.indexOf((java.lang.Object) strComparableList53);
        boolean boolean85 = strComparableList53.isEmpty();
        java.lang.Comparable<java.lang.String> strComparable87 = strComparableList53.remove((int) (short) 1);
    }

    @Test
    public void test357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test357");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        int int14 = strComparableList2.indexOf((java.lang.Object) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableList17.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList24 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean26 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableList24.indexOf((java.lang.Object) (-3));
        boolean boolean29 = strComparableList17.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList24);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList32 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean34 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableList32.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList39 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean41 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableList39.indexOf((java.lang.Object) (-3));
        boolean boolean44 = strComparableList32.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList39);
        boolean boolean46 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "");
        int int47 = strComparableList17.indexOf((java.lang.Object) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList51 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableList51.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean53 = strComparableList51.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int55 = strComparableList51.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList58 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableList58.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean60 = strComparableList58.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int62 = strComparableList58.indexOf((java.lang.Object) (-3));
        boolean boolean63 = strComparableList51.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList58);
        int int64 = strComparableList58.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList67 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean68 = strComparableList67.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean69 = strComparableList67.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int71 = strComparableList67.indexOf((java.lang.Object) 10.0f);
        int int72 = strComparableList67.size();
        boolean boolean73 = strComparableList67.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList74 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int76 = strComparableList74.indexOf((java.lang.Object) (-7));
        boolean boolean77 = strComparableList67.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList74);
        boolean boolean79 = strComparableList67.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int80 = strComparableList67.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList83 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean84 = strComparableList83.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean85 = strComparableList83.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int87 = strComparableList83.indexOf((java.lang.Object) 10.0f);
        int int88 = strComparableList83.size();
        boolean boolean89 = strComparableList83.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList90 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int92 = strComparableList90.indexOf((java.lang.Object) (-7));
        boolean boolean93 = strComparableList83.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList90);
        boolean boolean94 = strComparableList67.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList83);
        boolean boolean95 = strComparableList58.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList83);
        boolean boolean96 = strComparableList17.addAll(2, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList83);
        boolean boolean97 = strComparableList2.remove((java.lang.Object) strComparableList17);
        boolean boolean99 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
    }

    @Test
    public void test358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test358");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        boolean boolean8 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableList2.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList10 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int12 = strComparableList10.indexOf((java.lang.Object) (-7));
        boolean boolean14 = strComparableList10.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList17 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean21 = strComparableList17.remove((java.lang.Object) 10.0f);
        boolean boolean22 = strComparableList10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList17);
        strComparableList10.clear();
        int int24 = strComparableList2.indexOf((java.lang.Object) strComparableList10);
        boolean boolean26 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList29 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean31 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList29.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList36 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableList36.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean38 = strComparableList36.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int40 = strComparableList36.indexOf((java.lang.Object) (-3));
        boolean boolean41 = strComparableList29.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList36);
        boolean boolean43 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable45 = strComparableList29.remove((int) (byte) 0);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList48 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean50 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int52 = strComparableList48.indexOf((java.lang.Object) 10.0f);
        int int53 = strComparableList48.size();
        boolean boolean54 = strComparableList48.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList55 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int57 = strComparableList55.indexOf((java.lang.Object) (-7));
        boolean boolean58 = strComparableList48.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList55);
        boolean boolean60 = strComparableList48.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int61 = strComparableList48.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList64 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean66 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int68 = strComparableList64.indexOf((java.lang.Object) 10.0f);
        int int69 = strComparableList64.size();
        boolean boolean70 = strComparableList64.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList71 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int73 = strComparableList71.indexOf((java.lang.Object) (-7));
        boolean boolean74 = strComparableList64.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList71);
        boolean boolean75 = strComparableList48.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList64);
        boolean boolean76 = strComparableList29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList64);
        boolean boolean77 = strComparableList2.remove((java.lang.Object) strComparableList64);
        int int78 = strComparableList2.size();
    }

    @Test
    public void test359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test359");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator15 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList9.replaceAll(strComparableUnaryOperator15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test360");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList13 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean17 = strComparableList13.remove((java.lang.Object) 10.0f);
        boolean boolean18 = strComparableList2.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList19 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator20 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList19.replaceAll(strComparableUnaryOperator20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test361");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList0.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList9 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.remove((java.lang.Object) 10.0f);
        boolean boolean15 = strComparableList9.remove((java.lang.Object) 0);
        boolean boolean16 = strComparableList9.isEmpty();
        boolean boolean17 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList22 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableList22.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean24 = strComparableList22.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableList22.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList29 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean31 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList29.indexOf((java.lang.Object) (-3));
        boolean boolean34 = strComparableList22.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList29);
        boolean boolean36 = strComparableList22.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable38 = strComparableList22.remove((int) (byte) 0);
        strComparableList22.clear();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean40 = strComparableList18.addAll(100, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList22);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test362");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        boolean boolean8 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean9 = strComparableList2.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList12 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableList12.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean14 = strComparableList12.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean16 = strComparableList12.remove((java.lang.Object) 10.0f);
        boolean boolean18 = strComparableList12.remove((java.lang.Object) 0);
        boolean boolean19 = strComparableList12.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList21 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableList21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableList21.size();
        boolean boolean24 = strComparableList12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList21);
        int int25 = strComparableList21.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList28 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableList28.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean30 = strComparableList28.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableList28.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList35 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean37 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableList35.indexOf((java.lang.Object) (-3));
        boolean boolean40 = strComparableList28.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList35);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList43 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean45 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableList43.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList50 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableList50.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean52 = strComparableList50.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableList50.indexOf((java.lang.Object) (-3));
        boolean boolean55 = strComparableList43.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList50);
        boolean boolean57 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "");
        int int58 = strComparableList28.indexOf((java.lang.Object) "");
        boolean boolean59 = strComparableList21.remove((java.lang.Object) int58);
        boolean boolean60 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList21);
        int int61 = strComparableList21.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList64 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean66 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "");
        int int67 = strComparableList64.getSizeField();
        boolean boolean69 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean70 = strComparableList21.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList64);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList73 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean74 = strComparableList73.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean75 = strComparableList73.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean77 = strComparableList73.remove((java.lang.Object) 10.0f);
        boolean boolean79 = strComparableList73.remove((java.lang.Object) 0);
        boolean boolean80 = strComparableList73.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList84 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean85 = strComparableList84.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean86 = strComparableList84.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean88 = strComparableList84.remove((java.lang.Object) 10.0f);
        boolean boolean89 = strComparableList73.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList84);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList91 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int93 = strComparableList91.indexOf((java.lang.Object) (-7));
        int int95 = strComparableList91.indexOf((java.lang.Object) (-1.0d));
        boolean boolean96 = strComparableList84.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList91);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList97 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList84);
        int int98 = strComparableList21.indexOf((java.lang.Object) strComparableList97);
    }

    @Test
    public void test363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test363");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList11 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList11.size();
        boolean boolean14 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList11);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList15 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean22 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean23 = strComparableList15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList18);
        boolean boolean24 = strComparableList2.remove((java.lang.Object) strComparableList15);
        int int26 = strComparableList15.indexOf((java.lang.Object) 1);
        strComparableList15.clear();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList30 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean32 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean34 = strComparableList30.remove((java.lang.Object) 10.0f);
        boolean boolean36 = strComparableList30.remove((java.lang.Object) 0);
        boolean boolean37 = strComparableList30.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList41 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableList41.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean43 = strComparableList41.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean45 = strComparableList41.remove((java.lang.Object) 10.0f);
        boolean boolean46 = strComparableList30.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList41);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList48 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int50 = strComparableList48.indexOf((java.lang.Object) (-7));
        int int52 = strComparableList48.indexOf((java.lang.Object) (-1.0d));
        boolean boolean53 = strComparableList41.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList48);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList54 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList41);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList57 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableList57.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean59 = strComparableList57.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean61 = strComparableList57.remove((java.lang.Object) 10.0f);
        boolean boolean63 = strComparableList57.remove((java.lang.Object) 0);
        boolean boolean64 = strComparableList57.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList66 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean67 = strComparableList66.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int68 = strComparableList66.size();
        boolean boolean69 = strComparableList57.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList66);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList70 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList73 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean74 = strComparableList73.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean75 = strComparableList73.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean77 = strComparableList73.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean78 = strComparableList70.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList73);
        boolean boolean79 = strComparableList57.remove((java.lang.Object) strComparableList70);
        int int81 = strComparableList70.indexOf((java.lang.Object) 1);
        strComparableList70.clear();
        boolean boolean83 = strComparableList41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList70);
        boolean boolean84 = strComparableList15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList41);
    }

    @Test
    public void test364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test364");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList7 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList2);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable9 = strComparableList7.get(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:10, size=2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test365");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int15 = strComparableList13.indexOf((java.lang.Object) (-7));
        strComparableList13.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableList13.size();
        boolean boolean20 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList23 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableList23.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean25 = strComparableList23.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean27 = strComparableList23.remove((java.lang.Object) 10.0f);
        boolean boolean29 = strComparableList23.remove((java.lang.Object) 0);
        boolean boolean30 = strComparableList23.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList34 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean36 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean38 = strComparableList34.remove((java.lang.Object) 10.0f);
        boolean boolean39 = strComparableList23.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList34);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList41 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int43 = strComparableList41.indexOf((java.lang.Object) (-7));
        int int45 = strComparableList41.indexOf((java.lang.Object) (-1.0d));
        boolean boolean46 = strComparableList34.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList41);
        boolean boolean48 = strComparableList41.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean49 = strComparableList41.isEmpty();
        strComparableList41.clear();
        boolean boolean51 = strComparableList13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList41);
    }

    @Test
    public void test366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test366");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList6 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int8 = strComparableList6.indexOf((java.lang.Object) (-7));
        int int10 = strComparableList6.indexOf((java.lang.Object) (-1.0d));
        boolean boolean11 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList6);
        boolean boolean13 = strComparableList0.add((java.lang.Comparable<java.lang.String>) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList16 = strComparableList0.subList((int) (short) 10, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(10) > toIndex(-1)");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test367");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList7 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList2);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList10 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean12 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableList10.indexOf((java.lang.Object) 10.0f);
        int int15 = strComparableList10.size();
        boolean boolean16 = strComparableList10.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int19 = strComparableList17.indexOf((java.lang.Object) (-7));
        boolean boolean20 = strComparableList10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList17);
        boolean boolean22 = strComparableList10.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int23 = strComparableList10.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableList26.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean28 = strComparableList26.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int30 = strComparableList26.indexOf((java.lang.Object) 10.0f);
        int int31 = strComparableList26.size();
        boolean boolean32 = strComparableList26.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList33 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int35 = strComparableList33.indexOf((java.lang.Object) (-7));
        boolean boolean36 = strComparableList26.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList33);
        boolean boolean37 = strComparableList10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList26);
        strComparableList10.add(1, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean41 = strComparableList7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList10);
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator42 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList10.replaceAll(strComparableUnaryOperator42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test368");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList2);
        boolean boolean11 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList14 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableList14.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean16 = strComparableList14.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableList14.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList21 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableList21.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean23 = strComparableList21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableList21.indexOf((java.lang.Object) (-3));
        boolean boolean26 = strComparableList14.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList21);
        int int27 = strComparableList14.getSizeField();
        int int28 = strComparableList14.getSizeField();
        int int29 = strComparableList14.getSizeField();
        boolean boolean30 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList14);
    }

    @Test
    public void test369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test369");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.getSizeField();
        boolean boolean17 = strComparableList2.remove((java.lang.Object) (byte) 100);
        boolean boolean19 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean21 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableList2.getSizeField();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable25 = strComparableList2.set((-2), (java.lang.Comparable<java.lang.String>) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-2, size=3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test370");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        boolean boolean8 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableList2.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList10 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int12 = strComparableList10.indexOf((java.lang.Object) (-7));
        boolean boolean14 = strComparableList10.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList17 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean21 = strComparableList17.remove((java.lang.Object) 10.0f);
        boolean boolean22 = strComparableList10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList17);
        strComparableList10.clear();
        int int24 = strComparableList2.indexOf((java.lang.Object) strComparableList10);
        boolean boolean26 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean28 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
    }

    @Test
    public void test371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test371");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        int int25 = strComparableList2.indexOf((java.lang.Object) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int28 = strComparableList26.indexOf((java.lang.Object) (-7));
        strComparableList26.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList26.indexOf((java.lang.Object) false);
        int int34 = strComparableList26.getSizeField();
        int int35 = strComparableList26.getSizeField();
        boolean boolean36 = strComparableList20.remove((java.lang.Object) strComparableList26);
        boolean boolean37 = strComparableList20.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList38 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean40 = strComparableList20.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList43 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean45 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean47 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList50 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableList50.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean52 = strComparableList50.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableList50.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList57 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableList57.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean59 = strComparableList57.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int61 = strComparableList57.indexOf((java.lang.Object) (-3));
        boolean boolean62 = strComparableList50.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList57);
        int int63 = strComparableList50.getSizeField();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList66 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean67 = strComparableList66.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean68 = strComparableList66.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean70 = strComparableList66.remove((java.lang.Object) 10.0f);
        boolean boolean72 = strComparableList66.remove((java.lang.Object) 0);
        boolean boolean73 = strComparableList66.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList77 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean78 = strComparableList77.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean79 = strComparableList77.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean81 = strComparableList77.remove((java.lang.Object) 10.0f);
        boolean boolean82 = strComparableList66.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList77);
        boolean boolean83 = strComparableList50.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList77);
        boolean boolean84 = strComparableList43.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList77);
        boolean boolean85 = strComparableList20.remove((java.lang.Object) strComparableList43);
        int int86 = strComparableList43.getSizeField();
    }

    @Test
    public void test372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test372");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.getSizeField();
        boolean boolean17 = strComparableList2.remove((java.lang.Object) (byte) 100);
        int int18 = strComparableList2.getSizeField();
        boolean boolean20 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable23 = strComparableList2.get((-6));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-6, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test373");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList6 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int8 = strComparableList6.indexOf((java.lang.Object) (-7));
        int int10 = strComparableList6.indexOf((java.lang.Object) (-1.0d));
        boolean boolean11 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList6);
        boolean boolean12 = strComparableList0.isEmpty();
        strComparableList0.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList14 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList0);
        int int15 = strComparableList0.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList16 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int18 = strComparableList16.indexOf((java.lang.Object) (-7));
        strComparableList16.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList22 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int24 = strComparableList22.indexOf((java.lang.Object) (-7));
        int int26 = strComparableList22.indexOf((java.lang.Object) (-1.0d));
        boolean boolean27 = strComparableList16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList22);
        boolean boolean29 = strComparableList22.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean30 = strComparableList0.remove((java.lang.Object) "hi!");
    }

    @Test
    public void test374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test374");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.getSizeField();
        boolean boolean17 = strComparableList2.remove((java.lang.Object) (byte) 100);
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList19 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int21 = strComparableList19.indexOf((java.lang.Object) (-7));
        int int23 = strComparableList19.indexOf((java.lang.Object) (-1.0d));
        boolean boolean24 = strComparableList2.remove((java.lang.Object) int23);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList2);
        boolean boolean27 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable30 = strComparableList25.set((-9), (java.lang.Comparable<java.lang.String>) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-9, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test375");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableList17.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList24 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean26 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableList24.indexOf((java.lang.Object) (-3));
        boolean boolean29 = strComparableList17.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList24);
        boolean boolean31 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        int int32 = strComparableList2.indexOf((java.lang.Object) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList36 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableList36.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean38 = strComparableList36.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int40 = strComparableList36.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList43 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean45 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableList43.indexOf((java.lang.Object) (-3));
        boolean boolean48 = strComparableList36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList43);
        int int49 = strComparableList43.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList52 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean54 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int56 = strComparableList52.indexOf((java.lang.Object) 10.0f);
        int int57 = strComparableList52.size();
        boolean boolean58 = strComparableList52.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList59 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int61 = strComparableList59.indexOf((java.lang.Object) (-7));
        boolean boolean62 = strComparableList52.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList59);
        boolean boolean64 = strComparableList52.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int65 = strComparableList52.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList68 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableList68.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean70 = strComparableList68.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int72 = strComparableList68.indexOf((java.lang.Object) 10.0f);
        int int73 = strComparableList68.size();
        boolean boolean74 = strComparableList68.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList75 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int77 = strComparableList75.indexOf((java.lang.Object) (-7));
        boolean boolean78 = strComparableList68.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList75);
        boolean boolean79 = strComparableList52.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList68);
        boolean boolean80 = strComparableList43.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList68);
        boolean boolean81 = strComparableList2.addAll(2, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList68);
        java.lang.Comparable<java.lang.String> strComparable83 = strComparableList68.get(1);
        strComparableList68.clear();
    }

    @Test
    public void test376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test376");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        int int14 = strComparableList2.indexOf((java.lang.Object) strComparableList9);
        int int15 = strComparableList2.getSizeField();
        boolean boolean17 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        int int19 = strComparableList2.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList22 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableList22.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean24 = strComparableList22.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableList22.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList29 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean31 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList29.indexOf((java.lang.Object) (-3));
        boolean boolean34 = strComparableList22.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList29);
        boolean boolean36 = strComparableList22.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList22.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList40 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableList40.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean42 = strComparableList40.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableList40.indexOf((java.lang.Object) (-3));
        int int45 = strComparableList22.indexOf((java.lang.Object) strComparableList40);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList46 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int48 = strComparableList46.indexOf((java.lang.Object) (-7));
        strComparableList46.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int53 = strComparableList46.indexOf((java.lang.Object) false);
        int int54 = strComparableList46.getSizeField();
        int int55 = strComparableList46.getSizeField();
        boolean boolean56 = strComparableList40.remove((java.lang.Object) strComparableList46);
        int int57 = strComparableList46.getSizeField();
        boolean boolean58 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList46);
    }

    @Test
    public void test377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test377");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList6 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int8 = strComparableList6.indexOf((java.lang.Object) (-7));
        int int10 = strComparableList6.indexOf((java.lang.Object) (-1.0d));
        boolean boolean11 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList6);
        boolean boolean13 = strComparableList0.add((java.lang.Comparable<java.lang.String>) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable16 = strComparableList0.set((-10), (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-10, size=2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test378");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList7 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList2);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList10 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean12 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableList10.indexOf((java.lang.Object) 10.0f);
        int int15 = strComparableList10.size();
        boolean boolean16 = strComparableList10.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int19 = strComparableList17.indexOf((java.lang.Object) (-7));
        boolean boolean20 = strComparableList10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList17);
        boolean boolean22 = strComparableList10.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int23 = strComparableList10.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableList26.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean28 = strComparableList26.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int30 = strComparableList26.indexOf((java.lang.Object) 10.0f);
        int int31 = strComparableList26.size();
        boolean boolean32 = strComparableList26.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList33 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int35 = strComparableList33.indexOf((java.lang.Object) (-7));
        boolean boolean36 = strComparableList26.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList33);
        boolean boolean37 = strComparableList10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList26);
        strComparableList10.add(1, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean41 = strComparableList7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList10);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList42 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int44 = strComparableList42.indexOf((java.lang.Object) (-7));
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList45 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int47 = strComparableList45.indexOf((java.lang.Object) (-7));
        strComparableList45.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean52 = strComparableList45.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean54 = strComparableList45.add((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList57 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableList57.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean59 = strComparableList57.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int61 = strComparableList57.indexOf((java.lang.Object) 10.0f);
        int int62 = strComparableList57.size();
        boolean boolean63 = strComparableList45.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList57);
        boolean boolean64 = strComparableList42.remove((java.lang.Object) strComparableList57);
        int int65 = strComparableList42.getSizeField();
        int int66 = strComparableList7.indexOf((java.lang.Object) int65);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList69 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean70 = strComparableList69.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean71 = strComparableList69.add((java.lang.Comparable<java.lang.String>) "");
        int int72 = strComparableList69.getSizeField();
        boolean boolean74 = strComparableList69.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean75 = strComparableList7.remove((java.lang.Object) "");
    }

    @Test
    public void test379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test379");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList13 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean17 = strComparableList13.remove((java.lang.Object) 10.0f);
        boolean boolean18 = strComparableList2.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int22 = strComparableList20.indexOf((java.lang.Object) (-7));
        int int24 = strComparableList20.indexOf((java.lang.Object) (-1.0d));
        boolean boolean25 = strComparableList13.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean27 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean28 = strComparableList20.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList29 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList32 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean34 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableList32.indexOf((java.lang.Object) 10.0f);
        int int37 = strComparableList32.size();
        boolean boolean38 = strComparableList32.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList39 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int41 = strComparableList39.indexOf((java.lang.Object) (-7));
        boolean boolean42 = strComparableList32.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList39);
        boolean boolean44 = strComparableList32.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int45 = strComparableList32.getSizeField();
        boolean boolean46 = strComparableList20.remove((java.lang.Object) strComparableList32);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable48 = strComparableList20.get(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:100, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test380");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList13 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean17 = strComparableList13.remove((java.lang.Object) 10.0f);
        boolean boolean18 = strComparableList2.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList19 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable22 = strComparableList19.set((-1), (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-1, size=2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test381");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList16 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean18 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableList16.indexOf((java.lang.Object) (-3));
        boolean boolean21 = strComparableList9.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList16);
        int int22 = strComparableList9.getSizeField();
        int int23 = strComparableList9.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableList26.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean28 = strComparableList26.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int30 = strComparableList26.indexOf((java.lang.Object) 10.0f);
        int int31 = strComparableList26.size();
        boolean boolean32 = strComparableList26.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList33 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int35 = strComparableList33.indexOf((java.lang.Object) (-7));
        boolean boolean36 = strComparableList26.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList33);
        boolean boolean37 = strComparableList26.isEmpty();
        boolean boolean38 = strComparableList9.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList26);
        boolean boolean39 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList41 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int43 = strComparableList41.indexOf((java.lang.Object) (-7));
        strComparableList41.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int48 = strComparableList41.indexOf((java.lang.Object) false);
        int int49 = strComparableList41.getSizeField();
        int int50 = strComparableList41.getSizeField();
        boolean boolean51 = strComparableList9.addAll((int) (short) 1, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList41);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable53 = strComparableList9.remove((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-1, size=7");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test382");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        int int12 = strComparableList9.getSizeField();
        int int14 = strComparableList9.indexOf((java.lang.Object) 0.0f);
        boolean boolean16 = strComparableList9.removeElem((java.lang.Comparable<java.lang.String>) "");
        strComparableList9.clear();
        boolean boolean18 = strComparableList2.remove((java.lang.Object) strComparableList9);
        java.lang.Comparable<java.lang.String> strComparable20 = strComparableList2.get(2);
        int int21 = strComparableList2.getSizeField();
    }

    @Test
    public void test383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test383");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableList0.indexOf((java.lang.Object) false);
        int int8 = strComparableList0.getSizeField();
        int int9 = strComparableList0.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList12 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableList12.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean14 = strComparableList12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int16 = strComparableList12.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList19 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableList19.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean21 = strComparableList19.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableList19.indexOf((java.lang.Object) (-3));
        boolean boolean24 = strComparableList12.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList19);
        boolean boolean26 = strComparableList12.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable28 = strComparableList12.remove((int) (byte) 0);
        boolean boolean29 = strComparableList12.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList32 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean34 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "");
        int int35 = strComparableList32.getSizeField();
        java.lang.Comparable<java.lang.String> strComparable37 = strComparableList32.get(1);
        boolean boolean38 = strComparableList12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList32);
        boolean boolean39 = strComparableList0.remove((java.lang.Object) strComparableList32);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList40 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int42 = strComparableList40.indexOf((java.lang.Object) (-7));
        int int44 = strComparableList40.indexOf((java.lang.Object) 10.0d);
        boolean boolean45 = strComparableList32.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList40);
        boolean boolean47 = strComparableList32.removeElem((java.lang.Comparable<java.lang.String>) "");
    }

    @Test
    public void test384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test384");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableList17.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList24 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean26 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableList24.indexOf((java.lang.Object) (-3));
        boolean boolean29 = strComparableList17.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList24);
        boolean boolean31 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        int int32 = strComparableList2.indexOf((java.lang.Object) "");
        java.lang.Comparable<java.lang.String> strComparable35 = strComparableList2.set(0, (java.lang.Comparable<java.lang.String>) "");
        int int36 = strComparableList2.size();
        java.lang.Comparable<java.lang.String> strComparable38 = strComparableList2.get((int) (short) 1);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList42 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean44 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableList42.indexOf((java.lang.Object) 10.0f);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean47 = strComparableList2.addAll((int) 'a', (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList42);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Size: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test385");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.size();
        int int16 = strComparableList2.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList19 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableList19.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean21 = strComparableList19.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableList19.indexOf((java.lang.Object) (-3));
        boolean boolean25 = strComparableList19.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableList19.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList27 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int29 = strComparableList27.indexOf((java.lang.Object) (-7));
        boolean boolean31 = strComparableList27.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList34 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean36 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean38 = strComparableList34.remove((java.lang.Object) 10.0f);
        boolean boolean39 = strComparableList27.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList34);
        strComparableList27.clear();
        int int41 = strComparableList19.indexOf((java.lang.Object) strComparableList27);
        int int42 = strComparableList2.indexOf((java.lang.Object) strComparableList19);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList43 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList2);
        strComparableList2.clear();
        int int45 = strComparableList2.size();
    }

    @Test
    public void test386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test386");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        boolean boolean8 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableList2.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList10 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int12 = strComparableList10.indexOf((java.lang.Object) (-7));
        boolean boolean14 = strComparableList10.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList17 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean21 = strComparableList17.remove((java.lang.Object) 10.0f);
        boolean boolean22 = strComparableList10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList17);
        strComparableList10.clear();
        int int24 = strComparableList2.indexOf((java.lang.Object) strComparableList10);
        int int25 = strComparableList10.size();
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator26 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList10.replaceAll(strComparableUnaryOperator26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test387");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        boolean boolean8 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableList2.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList10 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int12 = strComparableList10.indexOf((java.lang.Object) (-7));
        boolean boolean14 = strComparableList10.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList17 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean21 = strComparableList17.remove((java.lang.Object) 10.0f);
        boolean boolean22 = strComparableList10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList17);
        strComparableList10.clear();
        int int24 = strComparableList2.indexOf((java.lang.Object) strComparableList10);
        int int25 = strComparableList10.size();
        boolean boolean26 = strComparableList10.isEmpty();
        int int27 = strComparableList10.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList30 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean32 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableList30.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList37 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean39 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int41 = strComparableList37.indexOf((java.lang.Object) (-3));
        boolean boolean42 = strComparableList30.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList37);
        int int43 = strComparableList30.getSizeField();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList46 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableList46.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean48 = strComparableList46.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean50 = strComparableList46.remove((java.lang.Object) 10.0f);
        boolean boolean52 = strComparableList46.remove((java.lang.Object) 0);
        boolean boolean53 = strComparableList46.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList57 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableList57.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean59 = strComparableList57.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean61 = strComparableList57.remove((java.lang.Object) 10.0f);
        boolean boolean62 = strComparableList46.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList57);
        boolean boolean63 = strComparableList30.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList57);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList66 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean67 = strComparableList66.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean68 = strComparableList66.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean70 = strComparableList66.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList73 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean74 = strComparableList73.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean75 = strComparableList73.add((java.lang.Comparable<java.lang.String>) "");
        int int76 = strComparableList73.getSizeField();
        int int78 = strComparableList73.indexOf((java.lang.Object) 0.0f);
        boolean boolean80 = strComparableList73.removeElem((java.lang.Comparable<java.lang.String>) "");
        strComparableList73.clear();
        boolean boolean82 = strComparableList66.remove((java.lang.Object) strComparableList73);
        boolean boolean83 = strComparableList30.remove((java.lang.Object) strComparableList66);
        int int84 = strComparableList10.indexOf((java.lang.Object) boolean83);
    }

    @Test
    public void test388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test388");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean7 = strComparableList0.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList10 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean12 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "");
        int int13 = strComparableList10.getSizeField();
        boolean boolean14 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList10);
        // The following exception was thrown during execution in test generation
        try {
            strComparableList0.add((-1), (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-1, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test389");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableList18.indexOf((java.lang.Object) 10.0f);
        int int23 = strComparableList18.size();
        boolean boolean24 = strComparableList18.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int27 = strComparableList25.indexOf((java.lang.Object) (-7));
        boolean boolean28 = strComparableList18.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList25);
        boolean boolean29 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList18);
        int int30 = strComparableList18.getSizeField();
    }

    @Test
    public void test390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test390");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList13 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean17 = strComparableList13.remove((java.lang.Object) 10.0f);
        boolean boolean18 = strComparableList2.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int22 = strComparableList20.indexOf((java.lang.Object) (-7));
        int int24 = strComparableList20.indexOf((java.lang.Object) (-1.0d));
        boolean boolean25 = strComparableList13.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean27 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean28 = strComparableList20.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList31 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean33 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableList31.indexOf((java.lang.Object) 10.0f);
        int int36 = strComparableList31.size();
        boolean boolean37 = strComparableList31.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList38 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int40 = strComparableList38.indexOf((java.lang.Object) (-7));
        boolean boolean41 = strComparableList31.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList38);
        boolean boolean43 = strComparableList31.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int44 = strComparableList31.getSizeField();
        int int45 = strComparableList31.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList48 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean50 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean52 = strComparableList48.remove((java.lang.Object) 10.0f);
        boolean boolean54 = strComparableList48.remove((java.lang.Object) 0);
        boolean boolean55 = strComparableList48.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList57 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableList57.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int59 = strComparableList57.size();
        boolean boolean60 = strComparableList48.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList57);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList61 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList64 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean66 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean68 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean69 = strComparableList61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList64);
        boolean boolean70 = strComparableList48.remove((java.lang.Object) strComparableList61);
        boolean boolean71 = strComparableList61.isEmpty();
        boolean boolean73 = strComparableList61.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int74 = strComparableList31.indexOf((java.lang.Object) strComparableList61);
        boolean boolean75 = strComparableList20.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList61);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable78 = strComparableList61.set((-10), (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-10, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test391");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList13 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean17 = strComparableList13.remove((java.lang.Object) 10.0f);
        boolean boolean18 = strComparableList2.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int22 = strComparableList20.indexOf((java.lang.Object) (-7));
        int int24 = strComparableList20.indexOf((java.lang.Object) (-1.0d));
        boolean boolean25 = strComparableList13.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        int int28 = strComparableList26.indexOf((java.lang.Object) (-1));
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList31 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean33 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableList31.indexOf((java.lang.Object) (-3));
        boolean boolean37 = strComparableList31.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableList31.getSizeField();
        boolean boolean39 = strComparableList26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList31);
        java.lang.Comparable<java.lang.String> strComparable41 = strComparableList26.remove(0);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList44 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableList44.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean46 = strComparableList44.add((java.lang.Comparable<java.lang.String>) "");
        int int47 = strComparableList44.getSizeField();
        boolean boolean49 = strComparableList44.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable52 = strComparableList44.set(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList55 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean56 = strComparableList55.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean57 = strComparableList55.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int59 = strComparableList55.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList62 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean64 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int66 = strComparableList62.indexOf((java.lang.Object) (-3));
        boolean boolean67 = strComparableList55.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList62);
        boolean boolean69 = strComparableList55.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList55.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList73 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean74 = strComparableList73.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean75 = strComparableList73.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int77 = strComparableList73.indexOf((java.lang.Object) (-3));
        int int78 = strComparableList55.indexOf((java.lang.Object) strComparableList73);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList79 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int81 = strComparableList79.indexOf((java.lang.Object) (-7));
        strComparableList79.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int86 = strComparableList79.indexOf((java.lang.Object) false);
        int int87 = strComparableList79.getSizeField();
        int int88 = strComparableList79.getSizeField();
        boolean boolean89 = strComparableList73.remove((java.lang.Object) strComparableList79);
        boolean boolean90 = strComparableList44.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList79);
        boolean boolean91 = strComparableList26.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList44);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList94 = strComparableList26.subList((int) ' ', (-8));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(32) > toIndex(-8)");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test392");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList13 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean17 = strComparableList13.remove((java.lang.Object) 10.0f);
        boolean boolean18 = strComparableList2.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int22 = strComparableList20.indexOf((java.lang.Object) (-7));
        int int24 = strComparableList20.indexOf((java.lang.Object) (-1.0d));
        boolean boolean25 = strComparableList13.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean27 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean28 = strComparableList20.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList29 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList32 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean34 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableList32.indexOf((java.lang.Object) 10.0f);
        int int37 = strComparableList32.size();
        boolean boolean38 = strComparableList32.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList39 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int41 = strComparableList39.indexOf((java.lang.Object) (-7));
        boolean boolean42 = strComparableList32.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList39);
        boolean boolean44 = strComparableList32.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int45 = strComparableList32.getSizeField();
        boolean boolean46 = strComparableList20.remove((java.lang.Object) strComparableList32);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList49 = strComparableList32.subList((int) (short) 10, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test393");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        boolean boolean8 = strComparableList2.isEmpty();
        strComparableList2.clear();
    }

    @Test
    public void test394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test394");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList0.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList9 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.remove((java.lang.Object) 10.0f);
        boolean boolean15 = strComparableList9.remove((java.lang.Object) 0);
        boolean boolean16 = strComparableList9.isEmpty();
        boolean boolean17 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean19 = strComparableList0.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.lang.Comparable<java.lang.String> strComparable21 = strComparableList0.remove((int) (byte) 0);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList22 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int24 = strComparableList22.indexOf((java.lang.Object) (-7));
        strComparableList22.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableList22.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList31 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean33 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean35 = strComparableList31.remove((java.lang.Object) 10.0f);
        boolean boolean37 = strComparableList31.remove((java.lang.Object) 0);
        boolean boolean38 = strComparableList31.isEmpty();
        boolean boolean39 = strComparableList22.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList31);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList40 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList31);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList41 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList31);
        boolean boolean42 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList31);
        int int43 = strComparableList0.getSizeField();
    }

    @Test
    public void test395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test395");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        boolean boolean8 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList11 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableList11.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableList18.indexOf((java.lang.Object) (-3));
        boolean boolean23 = strComparableList11.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList18);
        boolean boolean25 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable27 = strComparableList11.remove((int) (byte) 0);
        boolean boolean28 = strComparableList11.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList31 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean33 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "");
        int int34 = strComparableList31.getSizeField();
        java.lang.Comparable<java.lang.String> strComparable36 = strComparableList31.get(1);
        boolean boolean37 = strComparableList11.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList31);
        boolean boolean38 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList11);
    }

    @Test
    public void test396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test396");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList6 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int8 = strComparableList6.indexOf((java.lang.Object) (-7));
        int int10 = strComparableList6.indexOf((java.lang.Object) (-1.0d));
        boolean boolean11 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList6);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList14 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableList14.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean16 = strComparableList14.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableList14.indexOf((java.lang.Object) (-3));
        boolean boolean20 = strComparableList14.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean21 = strComparableList14.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean27 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableList25.indexOf((java.lang.Object) (-3));
        boolean boolean31 = strComparableList25.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean32 = strComparableList14.addAll((int) (byte) 1, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList25);
        boolean boolean33 = strComparableList6.remove((java.lang.Object) (byte) 1);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList35 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int37 = strComparableList35.indexOf((java.lang.Object) (-7));
        boolean boolean39 = strComparableList35.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList42 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean44 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean46 = strComparableList42.remove((java.lang.Object) 10.0f);
        boolean boolean47 = strComparableList35.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList42);
        int int48 = strComparableList35.size();
        boolean boolean49 = strComparableList6.addAll(0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList35);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList50 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList6);
        boolean boolean52 = strComparableList6.add((java.lang.Comparable<java.lang.String>) "hi!");
    }

    @Test
    public void test397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test397");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable18 = strComparableList2.remove((int) (byte) 0);
        boolean boolean19 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList22 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableList22.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean24 = strComparableList22.add((java.lang.Comparable<java.lang.String>) "");
        int int25 = strComparableList22.getSizeField();
        java.lang.Comparable<java.lang.String> strComparable27 = strComparableList22.get(1);
        boolean boolean28 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList22);
        boolean boolean30 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
    }

    @Test
    public void test398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test398");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList3 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean4 = strComparableList3.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean5 = strComparableList3.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean7 = strComparableList3.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean8 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList3);
        int int9 = strComparableList0.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList12 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableList12.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean14 = strComparableList12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int16 = strComparableList12.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList19 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableList19.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean21 = strComparableList19.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableList19.indexOf((java.lang.Object) (-3));
        boolean boolean24 = strComparableList12.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList19);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList27 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean29 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int31 = strComparableList27.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList34 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean36 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableList34.indexOf((java.lang.Object) (-3));
        boolean boolean39 = strComparableList27.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList34);
        boolean boolean41 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "");
        int int42 = strComparableList12.indexOf((java.lang.Object) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList45 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableList45.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean47 = strComparableList45.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean49 = strComparableList45.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList52 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean54 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean56 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "");
        int int57 = strComparableList45.indexOf((java.lang.Object) strComparableList52);
        boolean boolean58 = strComparableList12.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList45);
        java.lang.Comparable<java.lang.String> strComparable60 = strComparableList12.remove(4);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList63 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean64 = strComparableList63.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean65 = strComparableList63.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int67 = strComparableList63.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList70 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean71 = strComparableList70.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean72 = strComparableList70.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int74 = strComparableList70.indexOf((java.lang.Object) (-3));
        boolean boolean75 = strComparableList63.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList70);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList78 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean79 = strComparableList78.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean80 = strComparableList78.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int82 = strComparableList78.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList85 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean86 = strComparableList85.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean87 = strComparableList85.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int89 = strComparableList85.indexOf((java.lang.Object) (-3));
        boolean boolean90 = strComparableList78.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList85);
        boolean boolean92 = strComparableList78.add((java.lang.Comparable<java.lang.String>) "");
        int int93 = strComparableList63.indexOf((java.lang.Object) "");
        int int94 = strComparableList12.indexOf((java.lang.Object) strComparableList63);
        boolean boolean95 = strComparableList63.isEmpty();
        boolean boolean96 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList63);
    }

    @Test
    public void test399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test399");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        boolean boolean8 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableList2.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList10 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int12 = strComparableList10.indexOf((java.lang.Object) (-7));
        boolean boolean14 = strComparableList10.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList17 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean21 = strComparableList17.remove((java.lang.Object) 10.0f);
        boolean boolean22 = strComparableList10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList17);
        strComparableList10.clear();
        int int24 = strComparableList2.indexOf((java.lang.Object) strComparableList10);
        boolean boolean26 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList29 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean31 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList29.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList36 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableList36.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean38 = strComparableList36.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int40 = strComparableList36.indexOf((java.lang.Object) (-3));
        boolean boolean41 = strComparableList29.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList36);
        boolean boolean43 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable45 = strComparableList29.remove((int) (byte) 0);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList48 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean50 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int52 = strComparableList48.indexOf((java.lang.Object) 10.0f);
        int int53 = strComparableList48.size();
        boolean boolean54 = strComparableList48.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList55 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int57 = strComparableList55.indexOf((java.lang.Object) (-7));
        boolean boolean58 = strComparableList48.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList55);
        boolean boolean60 = strComparableList48.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int61 = strComparableList48.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList64 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean66 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int68 = strComparableList64.indexOf((java.lang.Object) 10.0f);
        int int69 = strComparableList64.size();
        boolean boolean70 = strComparableList64.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList71 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int73 = strComparableList71.indexOf((java.lang.Object) (-7));
        boolean boolean74 = strComparableList64.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList71);
        boolean boolean75 = strComparableList48.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList64);
        boolean boolean76 = strComparableList29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList64);
        boolean boolean77 = strComparableList2.remove((java.lang.Object) strComparableList64);
        strComparableList64.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList79 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int81 = strComparableList79.indexOf((java.lang.Object) (-7));
        strComparableList79.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int86 = strComparableList79.indexOf((java.lang.Object) false);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList88 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean89 = strComparableList88.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int90 = strComparableList88.size();
        boolean boolean91 = strComparableList79.remove((java.lang.Object) strComparableList88);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList92 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList88);
        boolean boolean93 = strComparableList64.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList88);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable95 = strComparableList64.get(4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:4, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test400");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList7 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList2);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList10 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean12 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableList10.indexOf((java.lang.Object) (-3));
        boolean boolean16 = strComparableList10.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableList10.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int20 = strComparableList18.indexOf((java.lang.Object) (-7));
        boolean boolean22 = strComparableList18.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList25 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean27 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean29 = strComparableList25.remove((java.lang.Object) 10.0f);
        boolean boolean30 = strComparableList18.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList25);
        strComparableList18.clear();
        int int32 = strComparableList10.indexOf((java.lang.Object) strComparableList18);
        boolean boolean34 = strComparableList10.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList37 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean39 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int41 = strComparableList37.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList44 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableList44.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean46 = strComparableList44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int48 = strComparableList44.indexOf((java.lang.Object) (-3));
        boolean boolean49 = strComparableList37.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList44);
        boolean boolean51 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable53 = strComparableList37.remove((int) (byte) 0);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList56 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableList56.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean58 = strComparableList56.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableList56.indexOf((java.lang.Object) 10.0f);
        int int61 = strComparableList56.size();
        boolean boolean62 = strComparableList56.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList63 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int65 = strComparableList63.indexOf((java.lang.Object) (-7));
        boolean boolean66 = strComparableList56.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList63);
        boolean boolean68 = strComparableList56.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int69 = strComparableList56.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList72 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean73 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean74 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int76 = strComparableList72.indexOf((java.lang.Object) 10.0f);
        int int77 = strComparableList72.size();
        boolean boolean78 = strComparableList72.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList79 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int81 = strComparableList79.indexOf((java.lang.Object) (-7));
        boolean boolean82 = strComparableList72.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList79);
        boolean boolean83 = strComparableList56.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList72);
        boolean boolean84 = strComparableList37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList72);
        boolean boolean85 = strComparableList10.remove((java.lang.Object) strComparableList72);
        boolean boolean86 = strComparableList2.remove((java.lang.Object) boolean85);
    }

    @Test
    public void test401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test401");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList0.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList9 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.remove((java.lang.Object) 10.0f);
        boolean boolean15 = strComparableList9.remove((java.lang.Object) 0);
        boolean boolean16 = strComparableList9.isEmpty();
        boolean boolean17 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean18 = strComparableList0.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList19 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int21 = strComparableList19.indexOf((java.lang.Object) (-7));
        boolean boolean22 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList19);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable24 = strComparableList0.get((-10));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-10, size=3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test402");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        int int15 = strComparableList2.getSizeField();
        int int16 = strComparableList2.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList19 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableList19.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean21 = strComparableList19.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableList19.indexOf((java.lang.Object) 10.0f);
        int int24 = strComparableList19.size();
        boolean boolean25 = strComparableList19.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int28 = strComparableList26.indexOf((java.lang.Object) (-7));
        boolean boolean29 = strComparableList19.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList26);
        boolean boolean30 = strComparableList19.isEmpty();
        boolean boolean31 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList19);
        boolean boolean33 = strComparableList19.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean35 = strComparableList19.add((java.lang.Comparable<java.lang.String>) "");
    }

    @Test
    public void test403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test403");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        int int14 = strComparableList9.indexOf((java.lang.Object) (short) 10);
        boolean boolean15 = strComparableList9.isEmpty();
    }

    @Test
    public void test404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test404");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        int int25 = strComparableList2.indexOf((java.lang.Object) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int28 = strComparableList26.indexOf((java.lang.Object) (-7));
        strComparableList26.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList26.indexOf((java.lang.Object) false);
        int int34 = strComparableList26.getSizeField();
        int int35 = strComparableList26.getSizeField();
        boolean boolean36 = strComparableList20.remove((java.lang.Object) strComparableList26);
        int int37 = strComparableList26.getSizeField();
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator38 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList26.replaceAll(strComparableUnaryOperator38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test405");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList2);
        boolean boolean11 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
    }

    @Test
    public void test406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test406");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        int int25 = strComparableList2.indexOf((java.lang.Object) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int28 = strComparableList26.indexOf((java.lang.Object) (-7));
        strComparableList26.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList26.indexOf((java.lang.Object) false);
        int int34 = strComparableList26.getSizeField();
        int int35 = strComparableList26.getSizeField();
        boolean boolean36 = strComparableList20.remove((java.lang.Object) strComparableList26);
        boolean boolean38 = strComparableList26.removeElem((java.lang.Comparable<java.lang.String>) "");
        boolean boolean39 = strComparableList26.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList40 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int42 = strComparableList40.indexOf((java.lang.Object) (-7));
        boolean boolean44 = strComparableList40.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList47 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableList47.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean49 = strComparableList47.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean51 = strComparableList47.remove((java.lang.Object) 10.0f);
        boolean boolean52 = strComparableList40.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList47);
        int int53 = strComparableList40.size();
        boolean boolean55 = strComparableList40.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.lang.Comparable<java.lang.String> strComparable57 = strComparableList40.get(0);
        boolean boolean59 = strComparableList40.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean60 = strComparableList26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList40);
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator61 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList40.replaceAll(strComparableUnaryOperator61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test407");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        int int25 = strComparableList2.indexOf((java.lang.Object) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int28 = strComparableList26.indexOf((java.lang.Object) (-7));
        strComparableList26.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList26.indexOf((java.lang.Object) false);
        int int34 = strComparableList26.getSizeField();
        int int35 = strComparableList26.getSizeField();
        boolean boolean36 = strComparableList20.remove((java.lang.Object) strComparableList26);
        boolean boolean37 = strComparableList20.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList38 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean40 = strComparableList20.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList43 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean45 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean47 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList50 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableList50.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean52 = strComparableList50.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableList50.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList57 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableList57.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean59 = strComparableList57.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int61 = strComparableList57.indexOf((java.lang.Object) (-3));
        boolean boolean62 = strComparableList50.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList57);
        int int63 = strComparableList50.getSizeField();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList66 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean67 = strComparableList66.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean68 = strComparableList66.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean70 = strComparableList66.remove((java.lang.Object) 10.0f);
        boolean boolean72 = strComparableList66.remove((java.lang.Object) 0);
        boolean boolean73 = strComparableList66.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList77 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean78 = strComparableList77.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean79 = strComparableList77.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean81 = strComparableList77.remove((java.lang.Object) 10.0f);
        boolean boolean82 = strComparableList66.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList77);
        boolean boolean83 = strComparableList50.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList77);
        boolean boolean84 = strComparableList43.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList77);
        boolean boolean85 = strComparableList20.remove((java.lang.Object) strComparableList43);
        // The following exception was thrown during execution in test generation
        try {
            strComparableList20.add((-3), (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-3, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test408");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableList0.indexOf((java.lang.Object) false);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int11 = strComparableList9.size();
        boolean boolean12 = strComparableList0.remove((java.lang.Object) strComparableList9);
        boolean boolean14 = strComparableList9.removeElem((java.lang.Comparable<java.lang.String>) "");
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList17 = strComparableList9.subList((int) ' ', (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test409");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.remove((java.lang.Object) (short) 1);
        boolean boolean18 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
    }

    @Test
    public void test410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test410");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList13 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean17 = strComparableList13.remove((java.lang.Object) 10.0f);
        boolean boolean18 = strComparableList2.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int22 = strComparableList20.indexOf((java.lang.Object) (-7));
        int int24 = strComparableList20.indexOf((java.lang.Object) (-1.0d));
        boolean boolean25 = strComparableList13.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        int int28 = strComparableList26.indexOf((java.lang.Object) (-1));
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList31 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean33 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableList31.indexOf((java.lang.Object) (-3));
        boolean boolean37 = strComparableList31.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableList31.getSizeField();
        boolean boolean39 = strComparableList26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList31);
        java.lang.Comparable<java.lang.String> strComparable41 = strComparableList26.remove(0);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList44 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableList44.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean46 = strComparableList44.add((java.lang.Comparable<java.lang.String>) "");
        int int47 = strComparableList44.getSizeField();
        boolean boolean49 = strComparableList44.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable52 = strComparableList44.set(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList55 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean56 = strComparableList55.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean57 = strComparableList55.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int59 = strComparableList55.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList62 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean64 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int66 = strComparableList62.indexOf((java.lang.Object) (-3));
        boolean boolean67 = strComparableList55.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList62);
        boolean boolean69 = strComparableList55.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList55.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList73 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean74 = strComparableList73.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean75 = strComparableList73.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int77 = strComparableList73.indexOf((java.lang.Object) (-3));
        int int78 = strComparableList55.indexOf((java.lang.Object) strComparableList73);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList79 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int81 = strComparableList79.indexOf((java.lang.Object) (-7));
        strComparableList79.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int86 = strComparableList79.indexOf((java.lang.Object) false);
        int int87 = strComparableList79.getSizeField();
        int int88 = strComparableList79.getSizeField();
        boolean boolean89 = strComparableList73.remove((java.lang.Object) strComparableList79);
        boolean boolean90 = strComparableList44.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList79);
        boolean boolean91 = strComparableList26.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList44);
        java.lang.Comparable<java.lang.String> strComparable94 = strComparableList44.set(0, (java.lang.Comparable<java.lang.String>) "hi!");
    }

    @Test
    public void test411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test411");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int15 = strComparableList13.indexOf((java.lang.Object) (-7));
        strComparableList13.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableList13.size();
        boolean boolean20 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        java.lang.Comparable<java.lang.String> strComparable22 = strComparableList2.get(2);
    }

    @Test
    public void test412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test412");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        int int12 = strComparableList9.getSizeField();
        int int14 = strComparableList9.indexOf((java.lang.Object) 0.0f);
        boolean boolean16 = strComparableList9.removeElem((java.lang.Comparable<java.lang.String>) "");
        strComparableList9.clear();
        boolean boolean18 = strComparableList2.remove((java.lang.Object) strComparableList9);
        java.lang.Comparable<java.lang.String> strComparable20 = strComparableList2.get(2);
        boolean boolean21 = strComparableList2.isEmpty();
    }

    @Test
    public void test413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test413");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        int int3 = strComparableList0.getSizeField();
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator4 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList0.replaceAll(strComparableUnaryOperator4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test414");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        boolean boolean8 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean9 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableList13.indexOf((java.lang.Object) (-3));
        boolean boolean19 = strComparableList13.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean20 = strComparableList2.addAll((int) (byte) 1, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        boolean boolean22 = strComparableList13.removeElem((java.lang.Comparable<java.lang.String>) "");
        boolean boolean24 = strComparableList13.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable27 = strComparableList13.set(3, (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:3, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test415");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean7 = strComparableList0.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean9 = strComparableList0.add((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList12 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableList12.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean14 = strComparableList12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int16 = strComparableList12.indexOf((java.lang.Object) 10.0f);
        int int17 = strComparableList12.size();
        boolean boolean18 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList12);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList22 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableList22.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean24 = strComparableList22.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableList22.indexOf((java.lang.Object) 10.0f);
        int int27 = strComparableList22.size();
        boolean boolean28 = strComparableList22.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList29 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int31 = strComparableList29.indexOf((java.lang.Object) (-7));
        boolean boolean32 = strComparableList22.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList29);
        boolean boolean34 = strComparableList22.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int35 = strComparableList22.getSizeField();
        boolean boolean37 = strComparableList22.remove((java.lang.Object) (byte) 100);
        boolean boolean39 = strComparableList22.add((java.lang.Comparable<java.lang.String>) "");
        int int40 = strComparableList22.size();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean41 = strComparableList12.addAll((-7), (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList22);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -7, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test416");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList13 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean17 = strComparableList13.remove((java.lang.Object) 10.0f);
        boolean boolean18 = strComparableList2.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int22 = strComparableList20.indexOf((java.lang.Object) (-7));
        int int24 = strComparableList20.indexOf((java.lang.Object) (-1.0d));
        boolean boolean25 = strComparableList13.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean27 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean29 = strComparableList20.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
    }

    @Test
    public void test417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test417");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        boolean boolean8 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean9 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableList13.indexOf((java.lang.Object) (-3));
        boolean boolean19 = strComparableList13.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean20 = strComparableList2.addAll((int) (byte) 1, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        boolean boolean22 = strComparableList13.removeElem((java.lang.Comparable<java.lang.String>) "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable25 = strComparableList13.set(8, (java.lang.Comparable<java.lang.String>) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:8, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test418");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList0.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList9 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.remove((java.lang.Object) 10.0f);
        boolean boolean15 = strComparableList9.remove((java.lang.Object) 0);
        boolean boolean16 = strComparableList9.isEmpty();
        boolean boolean17 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) 10.0f);
        int int25 = strComparableList20.size();
        boolean boolean26 = strComparableList20.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList27 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int29 = strComparableList27.indexOf((java.lang.Object) (-7));
        boolean boolean30 = strComparableList20.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList27);
        boolean boolean32 = strComparableList20.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int33 = strComparableList20.getSizeField();
        boolean boolean35 = strComparableList20.remove((java.lang.Object) (byte) 100);
        boolean boolean36 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList39 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean41 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableList39.indexOf((java.lang.Object) (-3));
        boolean boolean45 = strComparableList39.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean46 = strComparableList39.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList49 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean51 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean53 = strComparableList49.remove((java.lang.Object) 10.0f);
        boolean boolean55 = strComparableList49.remove((java.lang.Object) 0);
        boolean boolean56 = strComparableList49.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList58 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableList58.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableList58.size();
        boolean boolean61 = strComparableList49.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList58);
        int int62 = strComparableList58.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList65 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableList65.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean67 = strComparableList65.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int69 = strComparableList65.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList72 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean73 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean74 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int76 = strComparableList72.indexOf((java.lang.Object) (-3));
        boolean boolean77 = strComparableList65.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList72);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList80 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean81 = strComparableList80.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean82 = strComparableList80.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int84 = strComparableList80.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList87 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean88 = strComparableList87.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean89 = strComparableList87.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int91 = strComparableList87.indexOf((java.lang.Object) (-3));
        boolean boolean92 = strComparableList80.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList87);
        boolean boolean94 = strComparableList80.add((java.lang.Comparable<java.lang.String>) "");
        int int95 = strComparableList65.indexOf((java.lang.Object) "");
        boolean boolean96 = strComparableList58.remove((java.lang.Object) int95);
        boolean boolean97 = strComparableList39.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList58);
        int int98 = strComparableList0.indexOf((java.lang.Object) boolean97);
    }

    @Test
    public void test419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test419");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        boolean boolean7 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable10 = strComparableList2.set(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableList13.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        boolean boolean25 = strComparableList13.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean27 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList13.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList31 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean33 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableList31.indexOf((java.lang.Object) (-3));
        int int36 = strComparableList13.indexOf((java.lang.Object) strComparableList31);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList37 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int39 = strComparableList37.indexOf((java.lang.Object) (-7));
        strComparableList37.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableList37.indexOf((java.lang.Object) false);
        int int45 = strComparableList37.getSizeField();
        int int46 = strComparableList37.getSizeField();
        boolean boolean47 = strComparableList31.remove((java.lang.Object) strComparableList37);
        boolean boolean48 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList37);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList52 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean54 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int56 = strComparableList52.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList59 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableList59.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean61 = strComparableList59.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int63 = strComparableList59.indexOf((java.lang.Object) (-3));
        boolean boolean64 = strComparableList52.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList59);
        boolean boolean66 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList52.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList70 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean71 = strComparableList70.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean72 = strComparableList70.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int74 = strComparableList70.indexOf((java.lang.Object) (-3));
        int int75 = strComparableList52.indexOf((java.lang.Object) strComparableList70);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList76 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int78 = strComparableList76.indexOf((java.lang.Object) (-7));
        strComparableList76.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int83 = strComparableList76.indexOf((java.lang.Object) false);
        int int84 = strComparableList76.getSizeField();
        int int85 = strComparableList76.getSizeField();
        boolean boolean86 = strComparableList70.remove((java.lang.Object) strComparableList76);
        boolean boolean88 = strComparableList76.add((java.lang.Comparable<java.lang.String>) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean89 = strComparableList2.addAll(6, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList76);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 6, Size: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test420");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable18 = strComparableList2.remove((int) (byte) 0);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList21 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableList21.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean23 = strComparableList21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableList21.indexOf((java.lang.Object) 10.0f);
        int int26 = strComparableList21.size();
        boolean boolean27 = strComparableList21.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList28 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int30 = strComparableList28.indexOf((java.lang.Object) (-7));
        boolean boolean31 = strComparableList21.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList28);
        boolean boolean33 = strComparableList21.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int34 = strComparableList21.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList37 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean39 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int41 = strComparableList37.indexOf((java.lang.Object) 10.0f);
        int int42 = strComparableList37.size();
        boolean boolean43 = strComparableList37.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList44 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int46 = strComparableList44.indexOf((java.lang.Object) (-7));
        boolean boolean47 = strComparableList37.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList44);
        boolean boolean48 = strComparableList21.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList37);
        boolean boolean49 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList37);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList53 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableList53.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean55 = strComparableList53.add((java.lang.Comparable<java.lang.String>) "");
        int int56 = strComparableList53.getSizeField();
        int int58 = strComparableList53.indexOf((java.lang.Object) 0.0f);
        boolean boolean60 = strComparableList53.removeElem((java.lang.Comparable<java.lang.String>) "");
        strComparableList53.clear();
        boolean boolean62 = strComparableList37.addAll(0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList53);
        // The following exception was thrown during execution in test generation
        try {
            strComparableList53.add((-1), (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-1, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test421");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        boolean boolean8 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableList2.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList10 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int12 = strComparableList10.indexOf((java.lang.Object) (-7));
        boolean boolean14 = strComparableList10.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList17 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean21 = strComparableList17.remove((java.lang.Object) 10.0f);
        boolean boolean22 = strComparableList10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList17);
        strComparableList10.clear();
        int int24 = strComparableList2.indexOf((java.lang.Object) strComparableList10);
        boolean boolean26 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList29 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean31 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList29.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList36 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableList36.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean38 = strComparableList36.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int40 = strComparableList36.indexOf((java.lang.Object) (-3));
        boolean boolean41 = strComparableList29.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList36);
        boolean boolean43 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable45 = strComparableList29.remove((int) (byte) 0);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList48 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean50 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int52 = strComparableList48.indexOf((java.lang.Object) 10.0f);
        int int53 = strComparableList48.size();
        boolean boolean54 = strComparableList48.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList55 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int57 = strComparableList55.indexOf((java.lang.Object) (-7));
        boolean boolean58 = strComparableList48.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList55);
        boolean boolean60 = strComparableList48.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int61 = strComparableList48.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList64 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean66 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int68 = strComparableList64.indexOf((java.lang.Object) 10.0f);
        int int69 = strComparableList64.size();
        boolean boolean70 = strComparableList64.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList71 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int73 = strComparableList71.indexOf((java.lang.Object) (-7));
        boolean boolean74 = strComparableList64.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList71);
        boolean boolean75 = strComparableList48.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList64);
        boolean boolean76 = strComparableList29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList64);
        boolean boolean77 = strComparableList2.remove((java.lang.Object) strComparableList64);
        strComparableList64.clear();
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator79 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList64.replaceAll(strComparableUnaryOperator79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test422");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        boolean boolean4 = strComparableList0.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList7 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableList7.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean9 = strComparableList7.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList7.remove((java.lang.Object) 10.0f);
        boolean boolean12 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList7);
        int int13 = strComparableList0.size();
        java.lang.Comparable<java.lang.String> strComparable16 = strComparableList0.set((int) (short) 0, (java.lang.Comparable<java.lang.String>) "");
        int int18 = strComparableList0.indexOf((java.lang.Object) 1);
        boolean boolean20 = strComparableList0.add((java.lang.Comparable<java.lang.String>) "hi!");
    }

    @Test
    public void test423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test423");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        int int25 = strComparableList2.indexOf((java.lang.Object) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int28 = strComparableList26.indexOf((java.lang.Object) (-7));
        strComparableList26.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList26.indexOf((java.lang.Object) false);
        int int34 = strComparableList26.getSizeField();
        int int35 = strComparableList26.getSizeField();
        boolean boolean36 = strComparableList20.remove((java.lang.Object) strComparableList26);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList39 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean41 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableList39.indexOf((java.lang.Object) 10.0f);
        int int44 = strComparableList39.size();
        boolean boolean45 = strComparableList39.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList46 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int48 = strComparableList46.indexOf((java.lang.Object) (-7));
        boolean boolean49 = strComparableList39.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList46);
        boolean boolean51 = strComparableList39.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int52 = strComparableList39.getSizeField();
        int int53 = strComparableList39.size();
        int int54 = strComparableList26.indexOf((java.lang.Object) int53);
        boolean boolean55 = strComparableList26.isEmpty();
    }

    @Test
    public void test424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test424");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableList0.indexOf((java.lang.Object) false);
        int int8 = strComparableList0.getSizeField();
        int int9 = strComparableList0.getSizeField();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable11 = strComparableList0.remove((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:52, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test425");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList13 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean17 = strComparableList13.remove((java.lang.Object) 10.0f);
        boolean boolean18 = strComparableList2.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int22 = strComparableList20.indexOf((java.lang.Object) (-7));
        int int24 = strComparableList20.indexOf((java.lang.Object) (-1.0d));
        boolean boolean25 = strComparableList13.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean27 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean28 = strComparableList20.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList31 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean33 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableList31.indexOf((java.lang.Object) 10.0f);
        int int36 = strComparableList31.size();
        boolean boolean37 = strComparableList31.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList38 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int40 = strComparableList38.indexOf((java.lang.Object) (-7));
        boolean boolean41 = strComparableList31.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList38);
        boolean boolean43 = strComparableList31.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int44 = strComparableList31.getSizeField();
        int int45 = strComparableList31.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList48 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean50 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean52 = strComparableList48.remove((java.lang.Object) 10.0f);
        boolean boolean54 = strComparableList48.remove((java.lang.Object) 0);
        boolean boolean55 = strComparableList48.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList57 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableList57.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int59 = strComparableList57.size();
        boolean boolean60 = strComparableList48.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList57);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList61 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList64 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean66 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean68 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean69 = strComparableList61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList64);
        boolean boolean70 = strComparableList48.remove((java.lang.Object) strComparableList61);
        boolean boolean71 = strComparableList61.isEmpty();
        boolean boolean73 = strComparableList61.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int74 = strComparableList31.indexOf((java.lang.Object) strComparableList61);
        boolean boolean75 = strComparableList20.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList61);
        boolean boolean77 = strComparableList20.removeElem((java.lang.Comparable<java.lang.String>) "");
        boolean boolean78 = strComparableList20.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList81 = strComparableList20.subList(3, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(3) > toIndex(-5)");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test426");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableList17.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList24 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean26 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableList24.indexOf((java.lang.Object) (-3));
        boolean boolean29 = strComparableList17.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList24);
        int int30 = strComparableList17.getSizeField();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList33 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableList33.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean35 = strComparableList33.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean37 = strComparableList33.remove((java.lang.Object) 10.0f);
        boolean boolean39 = strComparableList33.remove((java.lang.Object) 0);
        boolean boolean40 = strComparableList33.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList44 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableList44.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean46 = strComparableList44.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean48 = strComparableList44.remove((java.lang.Object) 10.0f);
        boolean boolean49 = strComparableList33.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList44);
        boolean boolean50 = strComparableList17.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList44);
        int int51 = strComparableList17.size();
        int int52 = strComparableList17.size();
        boolean boolean53 = strComparableList17.isEmpty();
        boolean boolean54 = strComparableList9.remove((java.lang.Object) boolean53);
        // The following exception was thrown during execution in test generation
        try {
            strComparableList9.add((-8), (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-8, size=2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test427");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.getSizeField();
        boolean boolean17 = strComparableList2.remove((java.lang.Object) (byte) 100);
        int int18 = strComparableList2.getSizeField();
        boolean boolean20 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList24 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean26 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableList24.indexOf((java.lang.Object) (-3));
        boolean boolean30 = strComparableList24.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int31 = strComparableList24.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList32 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int34 = strComparableList32.indexOf((java.lang.Object) (-7));
        boolean boolean36 = strComparableList32.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList39 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean41 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean43 = strComparableList39.remove((java.lang.Object) 10.0f);
        boolean boolean44 = strComparableList32.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList39);
        strComparableList32.clear();
        int int46 = strComparableList24.indexOf((java.lang.Object) strComparableList32);
        int int47 = strComparableList32.size();
        boolean boolean48 = strComparableList32.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList49 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int51 = strComparableList49.indexOf((java.lang.Object) (-7));
        boolean boolean53 = strComparableList49.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList56 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableList56.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean58 = strComparableList56.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean60 = strComparableList56.remove((java.lang.Object) 10.0f);
        boolean boolean61 = strComparableList49.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList56);
        strComparableList49.clear();
        boolean boolean64 = strComparableList49.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int65 = strComparableList49.size();
        boolean boolean66 = strComparableList32.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList49);
        int int67 = strComparableList2.indexOf((java.lang.Object) boolean66);
    }

    @Test
    public void test428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test428");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.getSizeField();
        boolean boolean17 = strComparableList2.remove((java.lang.Object) (byte) 100);
        int int18 = strComparableList2.getSizeField();
        boolean boolean20 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList23 = strComparableList2.subList((int) (byte) 10, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(10) > toIndex(-3)");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test429");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList11 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList11.size();
        boolean boolean14 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList11);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList15 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean22 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean23 = strComparableList15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList18);
        boolean boolean24 = strComparableList2.remove((java.lang.Object) strComparableList15);
        int int26 = strComparableList15.indexOf((java.lang.Object) 1);
        boolean boolean28 = strComparableList15.add((java.lang.Comparable<java.lang.String>) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable30 = strComparableList15.remove((-8));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-8, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test430");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList6 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int8 = strComparableList6.indexOf((java.lang.Object) (-7));
        int int10 = strComparableList6.indexOf((java.lang.Object) (-1.0d));
        boolean boolean11 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList6);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList14 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableList14.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean16 = strComparableList14.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableList14.indexOf((java.lang.Object) (-3));
        boolean boolean20 = strComparableList14.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean21 = strComparableList14.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean27 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableList25.indexOf((java.lang.Object) (-3));
        boolean boolean31 = strComparableList25.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean32 = strComparableList14.addAll((int) (byte) 1, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList25);
        boolean boolean33 = strComparableList6.remove((java.lang.Object) (byte) 1);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList35 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int37 = strComparableList35.indexOf((java.lang.Object) (-7));
        boolean boolean39 = strComparableList35.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList42 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean44 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean46 = strComparableList42.remove((java.lang.Object) 10.0f);
        boolean boolean47 = strComparableList35.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList42);
        int int48 = strComparableList35.size();
        boolean boolean49 = strComparableList6.addAll(0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList35);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList50 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList6);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList52 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int54 = strComparableList52.indexOf((java.lang.Object) (-7));
        strComparableList52.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int59 = strComparableList52.indexOf((java.lang.Object) false);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList61 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int63 = strComparableList61.size();
        boolean boolean64 = strComparableList52.remove((java.lang.Object) strComparableList61);
        boolean boolean66 = strComparableList61.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int67 = strComparableList61.getSizeField();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean68 = strComparableList50.addAll((-1), (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList61);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test431");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) 10.0f);
        int int25 = strComparableList20.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean27 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList26);
    }

    @Test
    public void test432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test432");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        java.lang.Comparable<java.lang.String> strComparable7 = strComparableList2.get(1);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList10 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean12 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableList10.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableList17.indexOf((java.lang.Object) (-3));
        boolean boolean22 = strComparableList10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList17);
        boolean boolean24 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList10.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList28 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableList28.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean30 = strComparableList28.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableList28.indexOf((java.lang.Object) (-3));
        int int33 = strComparableList10.indexOf((java.lang.Object) strComparableList28);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList34 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int36 = strComparableList34.indexOf((java.lang.Object) (-7));
        strComparableList34.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int41 = strComparableList34.indexOf((java.lang.Object) false);
        int int42 = strComparableList34.getSizeField();
        int int43 = strComparableList34.getSizeField();
        boolean boolean44 = strComparableList28.remove((java.lang.Object) strComparableList34);
        boolean boolean45 = strComparableList28.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList46 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList28);
        boolean boolean48 = strComparableList28.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList51 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableList51.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean53 = strComparableList51.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean55 = strComparableList51.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList58 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableList58.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean60 = strComparableList58.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int62 = strComparableList58.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList65 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableList65.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean67 = strComparableList65.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int69 = strComparableList65.indexOf((java.lang.Object) (-3));
        boolean boolean70 = strComparableList58.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList65);
        int int71 = strComparableList58.getSizeField();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList74 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean75 = strComparableList74.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean76 = strComparableList74.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean78 = strComparableList74.remove((java.lang.Object) 10.0f);
        boolean boolean80 = strComparableList74.remove((java.lang.Object) 0);
        boolean boolean81 = strComparableList74.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList85 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean86 = strComparableList85.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean87 = strComparableList85.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean89 = strComparableList85.remove((java.lang.Object) 10.0f);
        boolean boolean90 = strComparableList74.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList85);
        boolean boolean91 = strComparableList58.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList85);
        boolean boolean92 = strComparableList51.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList85);
        boolean boolean93 = strComparableList28.remove((java.lang.Object) strComparableList51);
        int int94 = strComparableList2.indexOf((java.lang.Object) strComparableList28);
        boolean boolean96 = strComparableList28.removeElem((java.lang.Comparable<java.lang.String>) "");
        boolean boolean97 = strComparableList28.isEmpty();
    }

    @Test
    public void test433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test433");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        int int25 = strComparableList2.indexOf((java.lang.Object) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int28 = strComparableList26.indexOf((java.lang.Object) (-7));
        strComparableList26.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList26.indexOf((java.lang.Object) false);
        int int34 = strComparableList26.getSizeField();
        int int35 = strComparableList26.getSizeField();
        boolean boolean36 = strComparableList20.remove((java.lang.Object) strComparableList26);
        boolean boolean37 = strComparableList20.isEmpty();
        boolean boolean39 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean41 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "");
    }

    @Test
    public void test434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test434");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.getSizeField();
        boolean boolean17 = strComparableList2.remove((java.lang.Object) (byte) 100);
        int int18 = strComparableList2.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList21 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableList21.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean23 = strComparableList21.add((java.lang.Comparable<java.lang.String>) "");
        int int24 = strComparableList21.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Object> objList25 = new DataStructures.commonscollections.TreeList<java.lang.Object>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList21);
        strComparableList21.clear();
        boolean boolean27 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList21);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable29 = strComparableList21.remove((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-1, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test435");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        int int15 = strComparableList2.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableList18.indexOf((java.lang.Object) (-3));
        boolean boolean24 = strComparableList18.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableList18.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int28 = strComparableList26.indexOf((java.lang.Object) (-7));
        boolean boolean30 = strComparableList26.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList33 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableList33.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean35 = strComparableList33.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean37 = strComparableList33.remove((java.lang.Object) 10.0f);
        boolean boolean38 = strComparableList26.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList33);
        strComparableList26.clear();
        int int40 = strComparableList18.indexOf((java.lang.Object) strComparableList26);
        int int41 = strComparableList26.size();
        boolean boolean42 = strComparableList26.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList43 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int45 = strComparableList43.indexOf((java.lang.Object) (-7));
        boolean boolean47 = strComparableList43.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList50 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableList50.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean52 = strComparableList50.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean54 = strComparableList50.remove((java.lang.Object) 10.0f);
        boolean boolean55 = strComparableList43.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList50);
        strComparableList43.clear();
        boolean boolean58 = strComparableList43.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int59 = strComparableList43.size();
        boolean boolean60 = strComparableList26.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList43);
        int int61 = strComparableList2.indexOf((java.lang.Object) boolean60);
    }

    @Test
    public void test436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test436");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        int int18 = strComparableList2.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList19 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int21 = strComparableList19.indexOf((java.lang.Object) (-7));
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList22 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int24 = strComparableList22.indexOf((java.lang.Object) (-7));
        strComparableList22.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean29 = strComparableList22.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean31 = strComparableList22.add((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList34 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean36 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableList34.indexOf((java.lang.Object) 10.0f);
        int int39 = strComparableList34.size();
        boolean boolean40 = strComparableList22.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList34);
        boolean boolean41 = strComparableList19.remove((java.lang.Object) strComparableList34);
        int int42 = strComparableList2.indexOf((java.lang.Object) strComparableList19);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList43 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int45 = strComparableList43.indexOf((java.lang.Object) (-7));
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList46 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int48 = strComparableList46.indexOf((java.lang.Object) (-7));
        strComparableList46.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList52 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int54 = strComparableList52.indexOf((java.lang.Object) (-7));
        int int56 = strComparableList52.indexOf((java.lang.Object) (-1.0d));
        boolean boolean57 = strComparableList46.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList52);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList59 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableList59.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int61 = strComparableList59.size();
        boolean boolean62 = strComparableList46.remove((java.lang.Object) strComparableList59);
        boolean boolean64 = strComparableList46.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean65 = strComparableList43.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList46);
        boolean boolean66 = strComparableList19.remove((java.lang.Object) strComparableList43);
    }

    @Test
    public void test437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test437");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.getSizeField();
        boolean boolean17 = strComparableList2.remove((java.lang.Object) (byte) 100);
        boolean boolean19 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean21 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableList2.getSizeField();
        strComparableList2.add(1, (java.lang.Comparable<java.lang.String>) "");
    }

    @Test
    public void test438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test438");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList0.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList9 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.remove((java.lang.Object) 10.0f);
        boolean boolean15 = strComparableList9.remove((java.lang.Object) 0);
        boolean boolean16 = strComparableList9.isEmpty();
        boolean boolean17 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) 10.0f);
        int int25 = strComparableList20.size();
        boolean boolean26 = strComparableList20.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList27 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int29 = strComparableList27.indexOf((java.lang.Object) (-7));
        boolean boolean30 = strComparableList20.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList27);
        boolean boolean32 = strComparableList20.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int33 = strComparableList20.getSizeField();
        boolean boolean35 = strComparableList20.remove((java.lang.Object) (byte) 100);
        boolean boolean36 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator37 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList0.replaceAll(strComparableUnaryOperator37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test439");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        int int14 = strComparableList2.indexOf((java.lang.Object) strComparableList9);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList17 = strComparableList2.subList((int) (short) 10, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 32");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test440");
        DataStructures.commonscollections.TreeList<java.util.AbstractList<java.lang.Comparable<java.lang.String>>> strComparableListList0 = new DataStructures.commonscollections.TreeList<java.util.AbstractList<java.lang.Comparable<java.lang.String>>>();
    }

    @Test
    public void test441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test441");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.getSizeField();
        boolean boolean17 = strComparableList2.remove((java.lang.Object) (byte) 100);
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList19 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int21 = strComparableList19.indexOf((java.lang.Object) (-7));
        int int23 = strComparableList19.indexOf((java.lang.Object) (-1.0d));
        boolean boolean24 = strComparableList2.remove((java.lang.Object) int23);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList2);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList28 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableList28.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean30 = strComparableList28.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableList28.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList35 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean37 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableList35.indexOf((java.lang.Object) (-3));
        boolean boolean40 = strComparableList28.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList35);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList43 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean45 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableList43.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList50 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableList50.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean52 = strComparableList50.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableList50.indexOf((java.lang.Object) (-3));
        boolean boolean55 = strComparableList43.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList50);
        boolean boolean57 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "");
        int int58 = strComparableList28.indexOf((java.lang.Object) "");
        java.lang.Comparable<java.lang.String> strComparable61 = strComparableList28.set(0, (java.lang.Comparable<java.lang.String>) "");
        int int62 = strComparableList28.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList65 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableList65.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean67 = strComparableList65.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean69 = strComparableList65.remove((java.lang.Object) 10.0f);
        boolean boolean71 = strComparableList65.remove((java.lang.Object) 0);
        boolean boolean72 = strComparableList65.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList76 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean77 = strComparableList76.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean78 = strComparableList76.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean80 = strComparableList76.remove((java.lang.Object) 10.0f);
        boolean boolean81 = strComparableList65.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList76);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList83 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int85 = strComparableList83.indexOf((java.lang.Object) (-7));
        int int87 = strComparableList83.indexOf((java.lang.Object) (-1.0d));
        boolean boolean88 = strComparableList76.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList83);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList89 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList76);
        boolean boolean90 = strComparableList28.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList76);
        boolean boolean91 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList28);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable93 = strComparableList2.get(5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:5, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test442");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableList0.indexOf((java.lang.Object) false);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int11 = strComparableList9.size();
        boolean boolean12 = strComparableList0.remove((java.lang.Object) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable15 = strComparableList13.remove((-10));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-10, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test443");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        int int7 = strComparableList2.indexOf((java.lang.Object) 0.0f);
        boolean boolean9 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableList13.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        boolean boolean25 = strComparableList13.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean27 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable29 = strComparableList13.remove((int) (byte) 0);
        boolean boolean30 = strComparableList13.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList33 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableList33.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean35 = strComparableList33.add((java.lang.Comparable<java.lang.String>) "");
        int int36 = strComparableList33.getSizeField();
        java.lang.Comparable<java.lang.String> strComparable38 = strComparableList33.get(1);
        boolean boolean39 = strComparableList13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList33);
        boolean boolean40 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList33);
        boolean boolean41 = strComparableList33.isEmpty();
        int int42 = strComparableList33.getSizeField();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList45 = strComparableList33.subList((-4), (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: fromIndex = -4");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test444");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        int int25 = strComparableList2.indexOf((java.lang.Object) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int28 = strComparableList26.indexOf((java.lang.Object) (-7));
        strComparableList26.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList26.indexOf((java.lang.Object) false);
        int int34 = strComparableList26.getSizeField();
        int int35 = strComparableList26.getSizeField();
        boolean boolean36 = strComparableList20.remove((java.lang.Object) strComparableList26);
        boolean boolean38 = strComparableList26.removeElem((java.lang.Comparable<java.lang.String>) "");
        boolean boolean39 = strComparableList26.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList40 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int42 = strComparableList40.indexOf((java.lang.Object) (-7));
        boolean boolean44 = strComparableList40.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList47 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableList47.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean49 = strComparableList47.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean51 = strComparableList47.remove((java.lang.Object) 10.0f);
        boolean boolean52 = strComparableList40.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList47);
        int int53 = strComparableList40.size();
        boolean boolean55 = strComparableList40.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.lang.Comparable<java.lang.String> strComparable57 = strComparableList40.get(0);
        boolean boolean59 = strComparableList40.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean60 = strComparableList26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList40);
        boolean boolean62 = strComparableList40.add((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList65 = strComparableList40.subList((int) (short) 1, 1);
    }

    @Test
    public void test445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test445");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        int int15 = strComparableList2.getSizeField();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList18 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean22 = strComparableList18.remove((java.lang.Object) 10.0f);
        boolean boolean24 = strComparableList18.remove((java.lang.Object) 0);
        boolean boolean25 = strComparableList18.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList29 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean31 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean33 = strComparableList29.remove((java.lang.Object) 10.0f);
        boolean boolean34 = strComparableList18.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList29);
        boolean boolean35 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList29);
        int int36 = strComparableList2.size();
        boolean boolean38 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean39 = strComparableList2.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable41 = strComparableList2.remove((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:35, size=5");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test446");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableList17.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList24 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean26 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableList24.indexOf((java.lang.Object) (-3));
        boolean boolean29 = strComparableList17.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList24);
        boolean boolean31 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        int int32 = strComparableList2.indexOf((java.lang.Object) "");
        java.lang.Comparable<java.lang.String> strComparable35 = strComparableList2.set(0, (java.lang.Comparable<java.lang.String>) "");
        int int36 = strComparableList2.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList39 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean41 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean43 = strComparableList39.remove((java.lang.Object) 10.0f);
        boolean boolean45 = strComparableList39.remove((java.lang.Object) 0);
        boolean boolean46 = strComparableList39.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList48 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int50 = strComparableList48.size();
        boolean boolean51 = strComparableList39.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList48);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList52 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList55 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean56 = strComparableList55.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean57 = strComparableList55.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean59 = strComparableList55.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean60 = strComparableList52.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList55);
        boolean boolean61 = strComparableList39.remove((java.lang.Object) strComparableList52);
        boolean boolean62 = strComparableList52.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList65 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableList65.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean67 = strComparableList65.add((java.lang.Comparable<java.lang.String>) "");
        int int68 = strComparableList65.getSizeField();
        int int70 = strComparableList65.indexOf((java.lang.Object) 0.0f);
        boolean boolean72 = strComparableList65.removeElem((java.lang.Comparable<java.lang.String>) "");
        strComparableList65.clear();
        boolean boolean74 = strComparableList52.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList65);
        boolean boolean76 = strComparableList65.add((java.lang.Comparable<java.lang.String>) "");
        int int77 = strComparableList2.indexOf((java.lang.Object) strComparableList65);
        int int78 = strComparableList65.size();
    }

    @Test
    public void test447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test447");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        boolean boolean8 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableList2.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList10 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int12 = strComparableList10.indexOf((java.lang.Object) (-7));
        boolean boolean14 = strComparableList10.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList17 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean21 = strComparableList17.remove((java.lang.Object) 10.0f);
        boolean boolean22 = strComparableList10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList17);
        strComparableList10.clear();
        int int24 = strComparableList2.indexOf((java.lang.Object) strComparableList10);
        boolean boolean26 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList29 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean31 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList29.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList36 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableList36.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean38 = strComparableList36.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int40 = strComparableList36.indexOf((java.lang.Object) (-3));
        boolean boolean41 = strComparableList29.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList36);
        boolean boolean43 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable45 = strComparableList29.remove((int) (byte) 0);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList48 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean50 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int52 = strComparableList48.indexOf((java.lang.Object) 10.0f);
        int int53 = strComparableList48.size();
        boolean boolean54 = strComparableList48.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList55 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int57 = strComparableList55.indexOf((java.lang.Object) (-7));
        boolean boolean58 = strComparableList48.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList55);
        boolean boolean60 = strComparableList48.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int61 = strComparableList48.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList64 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean66 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int68 = strComparableList64.indexOf((java.lang.Object) 10.0f);
        int int69 = strComparableList64.size();
        boolean boolean70 = strComparableList64.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList71 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int73 = strComparableList71.indexOf((java.lang.Object) (-7));
        boolean boolean74 = strComparableList64.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList71);
        boolean boolean75 = strComparableList48.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList64);
        boolean boolean76 = strComparableList29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList64);
        boolean boolean77 = strComparableList2.remove((java.lang.Object) strComparableList64);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList78 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList64);
    }

    @Test
    public void test448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test448");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableList2.getSizeField();
    }

    @Test
    public void test449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test449");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        boolean boolean7 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList8 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList2);
        strComparableList8.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableList13.indexOf((java.lang.Object) (-3));
        boolean boolean19 = strComparableList13.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean20 = strComparableList13.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList23 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableList23.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean25 = strComparableList23.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean27 = strComparableList23.remove((java.lang.Object) 10.0f);
        boolean boolean29 = strComparableList23.remove((java.lang.Object) 0);
        boolean boolean30 = strComparableList23.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList32 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableList32.size();
        boolean boolean35 = strComparableList23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList32);
        int int36 = strComparableList32.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList39 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean41 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableList39.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList46 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableList46.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean48 = strComparableList46.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int50 = strComparableList46.indexOf((java.lang.Object) (-3));
        boolean boolean51 = strComparableList39.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList46);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList54 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean55 = strComparableList54.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean56 = strComparableList54.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int58 = strComparableList54.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList61 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean63 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int65 = strComparableList61.indexOf((java.lang.Object) (-3));
        boolean boolean66 = strComparableList54.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList61);
        boolean boolean68 = strComparableList54.add((java.lang.Comparable<java.lang.String>) "");
        int int69 = strComparableList39.indexOf((java.lang.Object) "");
        boolean boolean70 = strComparableList32.remove((java.lang.Object) int69);
        boolean boolean71 = strComparableList13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList32);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean72 = strComparableList8.addAll((int) (short) 1, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test450");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableList17.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList24 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean26 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableList24.indexOf((java.lang.Object) (-3));
        boolean boolean29 = strComparableList17.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList24);
        boolean boolean31 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        int int32 = strComparableList2.indexOf((java.lang.Object) "");
        java.lang.Comparable<java.lang.String> strComparable35 = strComparableList2.set(0, (java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        int int37 = strComparableList2.getSizeField();
        strComparableList2.clear();
        strComparableList2.clear();
    }

    @Test
    public void test451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test451");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        int int14 = strComparableList2.indexOf((java.lang.Object) strComparableList9);
        int int15 = strComparableList2.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList16 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList2);
        java.lang.Comparable<java.lang.String> strComparable18 = strComparableList2.get(2);
    }

    @Test
    public void test452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test452");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) (-3));
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList7 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList2);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList10 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean12 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableList10.indexOf((java.lang.Object) 10.0f);
        int int15 = strComparableList10.size();
        boolean boolean16 = strComparableList10.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int19 = strComparableList17.indexOf((java.lang.Object) (-7));
        boolean boolean20 = strComparableList10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList17);
        boolean boolean22 = strComparableList10.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int23 = strComparableList10.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableList26.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean28 = strComparableList26.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int30 = strComparableList26.indexOf((java.lang.Object) 10.0f);
        int int31 = strComparableList26.size();
        boolean boolean32 = strComparableList26.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList33 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int35 = strComparableList33.indexOf((java.lang.Object) (-7));
        boolean boolean36 = strComparableList26.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList33);
        boolean boolean37 = strComparableList10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList26);
        strComparableList10.add(1, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean41 = strComparableList7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable44 = strComparableList10.set((int) (byte) 10, (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:10, size=4");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test453");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        int int25 = strComparableList2.indexOf((java.lang.Object) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int28 = strComparableList26.indexOf((java.lang.Object) (-7));
        strComparableList26.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList26.indexOf((java.lang.Object) false);
        int int34 = strComparableList26.getSizeField();
        int int35 = strComparableList26.getSizeField();
        boolean boolean36 = strComparableList20.remove((java.lang.Object) strComparableList26);
        boolean boolean37 = strComparableList20.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList38 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean40 = strComparableList20.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        strComparableList20.clear();
    }

    @Test
    public void test454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test454");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        int int3 = strComparableList0.size();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable5 = strComparableList0.remove((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:10, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test455");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        // The following exception was thrown during execution in test generation
        try {
            strComparableList0.add(2, (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:2, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test456");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        int int25 = strComparableList2.indexOf((java.lang.Object) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int28 = strComparableList26.indexOf((java.lang.Object) (-7));
        strComparableList26.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList26.indexOf((java.lang.Object) false);
        int int34 = strComparableList26.getSizeField();
        int int35 = strComparableList26.getSizeField();
        boolean boolean36 = strComparableList20.remove((java.lang.Object) strComparableList26);
        boolean boolean38 = strComparableList26.removeElem((java.lang.Comparable<java.lang.String>) "");
        boolean boolean40 = strComparableList26.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.lang.Comparable<java.lang.String> strComparable42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable43 = strComparableList26.set((int) (short) 10, strComparable42);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:10, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test457");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList13 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean17 = strComparableList13.remove((java.lang.Object) 10.0f);
        boolean boolean18 = strComparableList2.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int22 = strComparableList20.indexOf((java.lang.Object) (-7));
        int int24 = strComparableList20.indexOf((java.lang.Object) (-1.0d));
        boolean boolean25 = strComparableList13.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        int int27 = strComparableList26.getSizeField();
        boolean boolean28 = strComparableList26.isEmpty();
    }

    @Test
    public void test458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test458");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList13 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean17 = strComparableList13.remove((java.lang.Object) 10.0f);
        boolean boolean18 = strComparableList2.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int22 = strComparableList20.indexOf((java.lang.Object) (-7));
        int int24 = strComparableList20.indexOf((java.lang.Object) (-1.0d));
        boolean boolean25 = strComparableList13.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean27 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean28 = strComparableList20.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList29 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList32 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean34 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableList32.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList39 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean41 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableList39.indexOf((java.lang.Object) (-3));
        boolean boolean44 = strComparableList32.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList39);
        boolean boolean46 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList32.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList50 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableList50.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean52 = strComparableList50.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableList50.indexOf((java.lang.Object) (-3));
        int int55 = strComparableList32.indexOf((java.lang.Object) strComparableList50);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList56 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int58 = strComparableList56.indexOf((java.lang.Object) (-7));
        strComparableList56.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int63 = strComparableList56.indexOf((java.lang.Object) false);
        int int64 = strComparableList56.getSizeField();
        int int65 = strComparableList56.getSizeField();
        boolean boolean66 = strComparableList50.remove((java.lang.Object) strComparableList56);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList69 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean70 = strComparableList69.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean71 = strComparableList69.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int73 = strComparableList69.indexOf((java.lang.Object) 10.0f);
        int int74 = strComparableList69.size();
        boolean boolean75 = strComparableList69.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList76 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int78 = strComparableList76.indexOf((java.lang.Object) (-7));
        boolean boolean79 = strComparableList69.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList76);
        boolean boolean81 = strComparableList69.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int82 = strComparableList69.getSizeField();
        int int83 = strComparableList69.size();
        int int84 = strComparableList56.indexOf((java.lang.Object) int83);
        java.lang.Comparable<java.lang.String> strComparable86 = strComparableList56.get(0);
        boolean boolean87 = strComparableList29.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList56);
        boolean boolean89 = strComparableList56.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean90 = strComparableList56.isEmpty();
    }

    @Test
    public void test459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test459");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableList0.indexOf((java.lang.Object) false);
        int int8 = strComparableList0.getSizeField();
        int int9 = strComparableList0.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList12 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableList12.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean14 = strComparableList12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int16 = strComparableList12.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList19 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableList19.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean21 = strComparableList19.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableList19.indexOf((java.lang.Object) (-3));
        boolean boolean24 = strComparableList12.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList19);
        boolean boolean26 = strComparableList12.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable28 = strComparableList12.remove((int) (byte) 0);
        boolean boolean29 = strComparableList12.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList32 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean34 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "");
        int int35 = strComparableList32.getSizeField();
        java.lang.Comparable<java.lang.String> strComparable37 = strComparableList32.get(1);
        boolean boolean38 = strComparableList12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList32);
        boolean boolean39 = strComparableList0.remove((java.lang.Object) strComparableList32);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList40 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int42 = strComparableList40.indexOf((java.lang.Object) (-7));
        int int44 = strComparableList40.indexOf((java.lang.Object) 10.0d);
        boolean boolean45 = strComparableList32.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList40);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList46 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int48 = strComparableList46.indexOf((java.lang.Object) (-7));
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList49 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int51 = strComparableList49.indexOf((java.lang.Object) (-7));
        strComparableList49.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean56 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean58 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList61 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean63 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int65 = strComparableList61.indexOf((java.lang.Object) 10.0f);
        int int66 = strComparableList61.size();
        boolean boolean67 = strComparableList49.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList61);
        boolean boolean68 = strComparableList46.remove((java.lang.Object) strComparableList61);
        boolean boolean69 = strComparableList32.remove((java.lang.Object) strComparableList46);
    }

    @Test
    public void test460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test460");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList11 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList11.size();
        boolean boolean14 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList11);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList16 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int18 = strComparableList16.indexOf((java.lang.Object) (-7));
        boolean boolean20 = strComparableList16.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList23 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableList23.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean25 = strComparableList23.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean27 = strComparableList23.remove((java.lang.Object) 10.0f);
        boolean boolean28 = strComparableList16.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList23);
        boolean boolean30 = strComparableList16.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean31 = strComparableList11.addAll(1, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList16);
        // The following exception was thrown during execution in test generation
        try {
            strComparableList11.add(5, (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:5, size=2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test461");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList13 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean17 = strComparableList13.remove((java.lang.Object) 10.0f);
        boolean boolean18 = strComparableList2.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int22 = strComparableList20.indexOf((java.lang.Object) (-7));
        int int24 = strComparableList20.indexOf((java.lang.Object) (-1.0d));
        boolean boolean25 = strComparableList13.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable29 = strComparableList26.set(2, (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:2, size=2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test462");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        int int14 = strComparableList2.indexOf((java.lang.Object) strComparableList9);
        int int15 = strComparableList2.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList16 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList2);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable18 = strComparableList2.remove(9);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:9, size=3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test463");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        int int15 = strComparableList9.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableList18.indexOf((java.lang.Object) 10.0f);
        int int23 = strComparableList18.size();
        boolean boolean24 = strComparableList18.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int27 = strComparableList25.indexOf((java.lang.Object) (-7));
        boolean boolean28 = strComparableList18.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList25);
        boolean boolean30 = strComparableList18.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int31 = strComparableList18.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList34 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean36 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableList34.indexOf((java.lang.Object) 10.0f);
        int int39 = strComparableList34.size();
        boolean boolean40 = strComparableList34.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList41 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int43 = strComparableList41.indexOf((java.lang.Object) (-7));
        boolean boolean44 = strComparableList34.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList41);
        boolean boolean45 = strComparableList18.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList34);
        boolean boolean46 = strComparableList9.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList34);
        boolean boolean47 = strComparableList9.isEmpty();
    }

    @Test
    public void test464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test464");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        int int14 = strComparableList9.indexOf((java.lang.Object) (short) 10);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList15 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int17 = strComparableList15.indexOf((java.lang.Object) (-7));
        strComparableList15.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableList15.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList24 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean26 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean28 = strComparableList24.remove((java.lang.Object) 10.0f);
        boolean boolean30 = strComparableList24.remove((java.lang.Object) 0);
        boolean boolean31 = strComparableList24.isEmpty();
        boolean boolean32 = strComparableList15.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList24);
        boolean boolean33 = strComparableList15.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList34 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int36 = strComparableList34.indexOf((java.lang.Object) (-7));
        boolean boolean37 = strComparableList15.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList34);
        boolean boolean38 = strComparableList9.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList15);
    }

    @Test
    public void test465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test465");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        int int25 = strComparableList2.indexOf((java.lang.Object) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int28 = strComparableList26.indexOf((java.lang.Object) (-7));
        strComparableList26.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList26.indexOf((java.lang.Object) false);
        int int34 = strComparableList26.getSizeField();
        int int35 = strComparableList26.getSizeField();
        boolean boolean36 = strComparableList20.remove((java.lang.Object) strComparableList26);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList39 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean41 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableList39.indexOf((java.lang.Object) 10.0f);
        int int44 = strComparableList39.size();
        boolean boolean45 = strComparableList39.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList46 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int48 = strComparableList46.indexOf((java.lang.Object) (-7));
        boolean boolean49 = strComparableList39.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList46);
        boolean boolean51 = strComparableList39.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int52 = strComparableList39.getSizeField();
        int int53 = strComparableList39.size();
        int int54 = strComparableList26.indexOf((java.lang.Object) int53);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList58 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableList58.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean60 = strComparableList58.add((java.lang.Comparable<java.lang.String>) "");
        int int61 = strComparableList58.getSizeField();
        int int63 = strComparableList58.indexOf((java.lang.Object) 0.0f);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean64 = strComparableList26.addAll(7, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList58);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 7, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test466");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList1 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableList1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableList1.size();
        int int4 = strComparableList1.size();
        java.lang.Comparable<java.lang.String> strComparable6 = strComparableList1.remove(0);
        boolean boolean7 = strComparableList1.isEmpty();
    }

    @Test
    public void test467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test467");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList11 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList11.size();
        boolean boolean14 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList11);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList15 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean22 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean23 = strComparableList15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList18);
        boolean boolean24 = strComparableList2.remove((java.lang.Object) strComparableList15);
        int int26 = strComparableList15.indexOf((java.lang.Object) 1);
        boolean boolean28 = strComparableList15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableList15.getSizeField();
    }

    @Test
    public void test468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test468");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList11 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList11.size();
        boolean boolean14 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList11);
        int int15 = strComparableList11.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableList18.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean27 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableList25.indexOf((java.lang.Object) (-3));
        boolean boolean30 = strComparableList18.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList25);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList33 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableList33.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean35 = strComparableList33.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int37 = strComparableList33.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList40 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableList40.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean42 = strComparableList40.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableList40.indexOf((java.lang.Object) (-3));
        boolean boolean45 = strComparableList33.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList40);
        boolean boolean47 = strComparableList33.add((java.lang.Comparable<java.lang.String>) "");
        int int48 = strComparableList18.indexOf((java.lang.Object) "");
        boolean boolean49 = strComparableList11.remove((java.lang.Object) int48);
        boolean boolean51 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            strComparableList11.add(10, (java.lang.Comparable<java.lang.String>) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:10, size=2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test469");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList11 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList11.size();
        boolean boolean14 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList11);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList15 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean22 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean23 = strComparableList15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList18);
        boolean boolean24 = strComparableList2.remove((java.lang.Object) strComparableList15);
        boolean boolean25 = strComparableList15.isEmpty();
        boolean boolean27 = strComparableList15.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList30 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean32 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean34 = strComparableList30.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList37 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean39 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "");
        int int40 = strComparableList37.getSizeField();
        int int42 = strComparableList37.indexOf((java.lang.Object) 0.0f);
        boolean boolean44 = strComparableList37.removeElem((java.lang.Comparable<java.lang.String>) "");
        strComparableList37.clear();
        boolean boolean46 = strComparableList30.remove((java.lang.Object) strComparableList37);
        boolean boolean47 = strComparableList15.remove((java.lang.Object) boolean46);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList50 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableList50.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean52 = strComparableList50.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableList50.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList57 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableList57.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean59 = strComparableList57.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int61 = strComparableList57.indexOf((java.lang.Object) (-3));
        boolean boolean62 = strComparableList50.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList57);
        boolean boolean64 = strComparableList50.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList50.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList68 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableList68.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean70 = strComparableList68.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int72 = strComparableList68.indexOf((java.lang.Object) (-3));
        int int73 = strComparableList50.indexOf((java.lang.Object) strComparableList68);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList74 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int76 = strComparableList74.indexOf((java.lang.Object) (-7));
        strComparableList74.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int81 = strComparableList74.indexOf((java.lang.Object) false);
        int int82 = strComparableList74.getSizeField();
        int int83 = strComparableList74.getSizeField();
        boolean boolean84 = strComparableList68.remove((java.lang.Object) strComparableList74);
        boolean boolean85 = strComparableList68.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList86 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList68);
        boolean boolean88 = strComparableList68.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean89 = strComparableList15.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList68);
        // The following exception was thrown during execution in test generation
        try {
            strComparableList15.add(8, (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:8, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test470");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean7 = strComparableList0.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean9 = strComparableList0.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList10 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList10.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList14 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableList14.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean16 = strComparableList14.add((java.lang.Comparable<java.lang.String>) "");
        int int17 = strComparableList14.getSizeField();
        boolean boolean19 = strComparableList14.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable22 = strComparableList14.set(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean27 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableList25.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList32 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean34 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableList32.indexOf((java.lang.Object) (-3));
        boolean boolean37 = strComparableList25.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList32);
        boolean boolean39 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList25.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList43 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean45 = strComparableList43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableList43.indexOf((java.lang.Object) (-3));
        int int48 = strComparableList25.indexOf((java.lang.Object) strComparableList43);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList49 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int51 = strComparableList49.indexOf((java.lang.Object) (-7));
        strComparableList49.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int56 = strComparableList49.indexOf((java.lang.Object) false);
        int int57 = strComparableList49.getSizeField();
        int int58 = strComparableList49.getSizeField();
        boolean boolean59 = strComparableList43.remove((java.lang.Object) strComparableList49);
        boolean boolean60 = strComparableList14.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList49);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList61 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int63 = strComparableList61.indexOf((java.lang.Object) (-7));
        strComparableList61.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean68 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean70 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList73 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean74 = strComparableList73.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean75 = strComparableList73.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int77 = strComparableList73.indexOf((java.lang.Object) 10.0f);
        int int78 = strComparableList73.size();
        boolean boolean79 = strComparableList61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList73);
        int int80 = strComparableList73.getSizeField();
        int int81 = strComparableList49.indexOf((java.lang.Object) int80);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList84 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean85 = strComparableList84.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean86 = strComparableList84.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int88 = strComparableList84.indexOf((java.lang.Object) (-3));
        boolean boolean89 = strComparableList49.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList84);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList90 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList84);
        boolean boolean91 = strComparableList10.remove((java.lang.Object) strComparableList90);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList92 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList10);
        boolean boolean93 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList92);
        java.lang.Object obj94 = null;
        int int95 = strComparableList0.indexOf(obj94);
    }

    @Test
    public void test471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test471");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        int int25 = strComparableList2.indexOf((java.lang.Object) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int28 = strComparableList26.indexOf((java.lang.Object) (-7));
        strComparableList26.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList26.indexOf((java.lang.Object) false);
        int int34 = strComparableList26.getSizeField();
        int int35 = strComparableList26.getSizeField();
        boolean boolean36 = strComparableList20.remove((java.lang.Object) strComparableList26);
        boolean boolean38 = strComparableList26.removeElem((java.lang.Comparable<java.lang.String>) "");
        // The following exception was thrown during execution in test generation
        try {
            strComparableList26.add((int) (short) 100, (java.lang.Comparable<java.lang.String>) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:100, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test472");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        int int25 = strComparableList2.indexOf((java.lang.Object) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int28 = strComparableList26.indexOf((java.lang.Object) (-7));
        strComparableList26.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList26.indexOf((java.lang.Object) false);
        int int34 = strComparableList26.getSizeField();
        int int35 = strComparableList26.getSizeField();
        boolean boolean36 = strComparableList20.remove((java.lang.Object) strComparableList26);
        boolean boolean38 = strComparableList26.add((java.lang.Comparable<java.lang.String>) "hi!");
        strComparableList26.clear();
        boolean boolean40 = strComparableList26.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable42 = strComparableList26.get((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:10, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test473");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean7 = strComparableList0.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList10 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean12 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "");
        int int13 = strComparableList10.getSizeField();
        boolean boolean14 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList10);
        int int15 = strComparableList10.size();
        // The following exception was thrown during execution in test generation
        try {
            strComparableList10.add(5, (java.lang.Comparable<java.lang.String>) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:5, size=2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test474");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableList2.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList8 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList2);
        // The following exception was thrown during execution in test generation
        try {
            strComparableList2.add((-100), (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-100, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test475");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList13 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean17 = strComparableList13.remove((java.lang.Object) 10.0f);
        boolean boolean18 = strComparableList2.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int22 = strComparableList20.indexOf((java.lang.Object) (-7));
        int int24 = strComparableList20.indexOf((java.lang.Object) (-1.0d));
        boolean boolean25 = strComparableList13.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        int int28 = strComparableList26.indexOf((java.lang.Object) (-1));
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList29 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int31 = strComparableList29.indexOf((java.lang.Object) (-7));
        strComparableList29.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableList29.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList38 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableList38.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean40 = strComparableList38.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean42 = strComparableList38.remove((java.lang.Object) 10.0f);
        boolean boolean44 = strComparableList38.remove((java.lang.Object) 0);
        boolean boolean45 = strComparableList38.isEmpty();
        boolean boolean46 = strComparableList29.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList38);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList47 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList38);
        boolean boolean48 = strComparableList26.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList47);
    }

    @Test
    public void test476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test476");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList13 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean17 = strComparableList13.remove((java.lang.Object) 10.0f);
        boolean boolean18 = strComparableList2.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int22 = strComparableList20.indexOf((java.lang.Object) (-7));
        int int24 = strComparableList20.indexOf((java.lang.Object) (-1.0d));
        boolean boolean25 = strComparableList13.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean27 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable29 = strComparableList20.remove((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:10, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test477");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableList17.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList24 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean26 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableList24.indexOf((java.lang.Object) (-3));
        boolean boolean29 = strComparableList17.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList24);
        boolean boolean31 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        int int32 = strComparableList2.indexOf((java.lang.Object) "");
        java.lang.Comparable<java.lang.String> strComparable35 = strComparableList2.set(0, (java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList37 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int39 = strComparableList37.indexOf((java.lang.Object) (-7));
        strComparableList37.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableList37.indexOf((java.lang.Object) false);
        int int45 = strComparableList37.getSizeField();
        int int46 = strComparableList37.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList49 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean51 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int53 = strComparableList49.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList56 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableList56.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean58 = strComparableList56.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableList56.indexOf((java.lang.Object) (-3));
        boolean boolean61 = strComparableList49.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList56);
        boolean boolean63 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable65 = strComparableList49.remove((int) (byte) 0);
        boolean boolean66 = strComparableList49.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList69 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean70 = strComparableList69.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean71 = strComparableList69.add((java.lang.Comparable<java.lang.String>) "");
        int int72 = strComparableList69.getSizeField();
        java.lang.Comparable<java.lang.String> strComparable74 = strComparableList69.get(1);
        boolean boolean75 = strComparableList49.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList69);
        boolean boolean76 = strComparableList37.remove((java.lang.Object) strComparableList69);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList79 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean80 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean81 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int83 = strComparableList79.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList86 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean87 = strComparableList86.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean88 = strComparableList86.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int90 = strComparableList86.indexOf((java.lang.Object) (-3));
        boolean boolean91 = strComparableList79.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList86);
        boolean boolean93 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList79.clear();
        boolean boolean95 = strComparableList37.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList79);
        boolean boolean96 = strComparableList2.addAll((int) (short) 1, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList37);
        java.util.function.UnaryOperator<java.lang.Comparable<java.lang.String>> strComparableUnaryOperator97 = null;
        // The following exception was thrown during execution in test generation
        try {
            strComparableList2.replaceAll(strComparableUnaryOperator97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test478");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList6 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int8 = strComparableList6.indexOf((java.lang.Object) (-7));
        int int10 = strComparableList6.indexOf((java.lang.Object) (-1.0d));
        boolean boolean11 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList6);
        boolean boolean13 = strComparableList6.add((java.lang.Comparable<java.lang.String>) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            strComparableList6.add((-7), (java.lang.Comparable<java.lang.String>) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-7, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test479");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean7 = strComparableList0.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean9 = strComparableList0.add((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableList13.indexOf((java.lang.Object) 10.0f);
        int int18 = strComparableList13.size();
        boolean boolean19 = strComparableList13.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int22 = strComparableList20.indexOf((java.lang.Object) (-7));
        boolean boolean23 = strComparableList13.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean25 = strComparableList13.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int26 = strComparableList13.getSizeField();
        boolean boolean28 = strComparableList13.remove((java.lang.Object) (byte) 100);
        int int29 = strComparableList13.getSizeField();
        boolean boolean31 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        int int32 = strComparableList13.size();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean33 = strComparableList0.addAll((-3), (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -3, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test480");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList17 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean19 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableList17.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList24 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean26 = strComparableList24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableList24.indexOf((java.lang.Object) (-3));
        boolean boolean29 = strComparableList17.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList24);
        boolean boolean31 = strComparableList17.add((java.lang.Comparable<java.lang.String>) "");
        int int32 = strComparableList2.indexOf((java.lang.Object) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList35 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean37 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean39 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList42 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean44 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean46 = strComparableList42.add((java.lang.Comparable<java.lang.String>) "");
        int int47 = strComparableList35.indexOf((java.lang.Object) strComparableList42);
        boolean boolean48 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList35);
        boolean boolean50 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
    }

    @Test
    public void test481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test481");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        int int25 = strComparableList2.indexOf((java.lang.Object) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int28 = strComparableList26.indexOf((java.lang.Object) (-7));
        strComparableList26.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableList26.indexOf((java.lang.Object) false);
        int int34 = strComparableList26.getSizeField();
        int int35 = strComparableList26.getSizeField();
        boolean boolean36 = strComparableList20.remove((java.lang.Object) strComparableList26);
        boolean boolean37 = strComparableList20.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList38 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        // The following exception was thrown during execution in test generation
        try {
            strComparableList20.add((-8), (java.lang.Comparable<java.lang.String>) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-8, size=2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test482");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        boolean boolean4 = strComparableList0.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList7 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableList7.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean9 = strComparableList7.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList7.remove((java.lang.Object) 10.0f);
        boolean boolean12 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList7);
        strComparableList0.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList16 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean18 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableList16.indexOf((java.lang.Object) 10.0f);
        int int21 = strComparableList16.size();
        boolean boolean22 = strComparableList16.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList23 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int25 = strComparableList23.indexOf((java.lang.Object) (-7));
        boolean boolean26 = strComparableList16.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList23);
        boolean boolean28 = strComparableList16.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int29 = strComparableList16.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList32 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean34 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableList32.indexOf((java.lang.Object) 10.0f);
        int int37 = strComparableList32.size();
        boolean boolean38 = strComparableList32.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList39 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int41 = strComparableList39.indexOf((java.lang.Object) (-7));
        boolean boolean42 = strComparableList32.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList39);
        boolean boolean43 = strComparableList16.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList32);
        boolean boolean45 = strComparableList32.add((java.lang.Comparable<java.lang.String>) "");
        int int46 = strComparableList0.indexOf((java.lang.Object) "");
        int int47 = strComparableList0.size();
        strComparableList0.clear();
    }

    @Test
    public void test483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test483");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList16 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean18 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableList16.indexOf((java.lang.Object) (-3));
        boolean boolean21 = strComparableList9.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList16);
        int int22 = strComparableList9.getSizeField();
        int int23 = strComparableList9.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList26 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableList26.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean28 = strComparableList26.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int30 = strComparableList26.indexOf((java.lang.Object) 10.0f);
        int int31 = strComparableList26.size();
        boolean boolean32 = strComparableList26.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList33 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int35 = strComparableList33.indexOf((java.lang.Object) (-7));
        boolean boolean36 = strComparableList26.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList33);
        boolean boolean37 = strComparableList26.isEmpty();
        boolean boolean38 = strComparableList9.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList26);
        boolean boolean39 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        strComparableList9.add(5, (java.lang.Comparable<java.lang.String>) "hi!");
    }

    @Test
    public void test484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test484");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        boolean boolean4 = strComparableList0.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList7 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableList7.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean9 = strComparableList7.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableList7.remove((java.lang.Object) 10.0f);
        boolean boolean12 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList7);
        int int13 = strComparableList0.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList16 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean18 = strComparableList16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableList16.indexOf((java.lang.Object) (-3));
        boolean boolean22 = strComparableList16.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableList16.getSizeField();
        boolean boolean24 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList16);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList0);
    }

    @Test
    public void test485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test485");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.getSizeField();
        boolean boolean17 = strComparableList2.remove((java.lang.Object) (byte) 100);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList2);
    }

    @Test
    public void test486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test486");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean7 = strComparableList0.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList10 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean12 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "");
        int int13 = strComparableList10.getSizeField();
        boolean boolean14 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList10);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList16 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int18 = strComparableList16.indexOf((java.lang.Object) (-7));
        strComparableList16.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableList16.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList25 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean27 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean29 = strComparableList25.remove((java.lang.Object) 10.0f);
        boolean boolean31 = strComparableList25.remove((java.lang.Object) 0);
        boolean boolean32 = strComparableList25.isEmpty();
        boolean boolean33 = strComparableList16.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList25);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList36 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableList36.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean38 = strComparableList36.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int40 = strComparableList36.indexOf((java.lang.Object) 10.0f);
        int int41 = strComparableList36.size();
        boolean boolean42 = strComparableList36.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList43 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int45 = strComparableList43.indexOf((java.lang.Object) (-7));
        boolean boolean46 = strComparableList36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList43);
        boolean boolean48 = strComparableList36.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int49 = strComparableList36.getSizeField();
        boolean boolean51 = strComparableList36.remove((java.lang.Object) (byte) 100);
        boolean boolean52 = strComparableList16.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList36);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean53 = strComparableList0.addAll((-1), (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList36);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test487");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList0.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList9 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.remove((java.lang.Object) 10.0f);
        boolean boolean15 = strComparableList9.remove((java.lang.Object) 0);
        boolean boolean16 = strComparableList9.isEmpty();
        boolean boolean17 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int20 = strComparableList18.indexOf((java.lang.Object) (-7));
        strComparableList18.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList18.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList27 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean29 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean31 = strComparableList27.remove((java.lang.Object) 10.0f);
        boolean boolean33 = strComparableList27.remove((java.lang.Object) 0);
        boolean boolean34 = strComparableList27.isEmpty();
        boolean boolean35 = strComparableList18.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList27);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList36 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList27);
        int int37 = strComparableList0.indexOf((java.lang.Object) strComparableList27);
        int int38 = strComparableList0.getSizeField();
    }

    @Test
    public void test488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test488");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable18 = strComparableList2.remove((int) (byte) 0);
        boolean boolean19 = strComparableList2.isEmpty();
        strComparableList2.clear();
    }

    @Test
    public void test489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test489");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList3 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean4 = strComparableList3.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean5 = strComparableList3.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean7 = strComparableList3.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean8 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList3);
        int int9 = strComparableList0.size();
        boolean boolean10 = strComparableList0.isEmpty();
    }

    @Test
    public void test490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test490");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList0.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList9 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean13 = strComparableList9.remove((java.lang.Object) 10.0f);
        boolean boolean15 = strComparableList9.remove((java.lang.Object) 0);
        boolean boolean16 = strComparableList9.isEmpty();
        boolean boolean17 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) 10.0f);
        int int25 = strComparableList20.size();
        boolean boolean26 = strComparableList20.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList27 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int29 = strComparableList27.indexOf((java.lang.Object) (-7));
        boolean boolean30 = strComparableList20.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList27);
        boolean boolean32 = strComparableList20.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int33 = strComparableList20.getSizeField();
        boolean boolean35 = strComparableList20.remove((java.lang.Object) (byte) 100);
        boolean boolean36 = strComparableList0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList37 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList0);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList38 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList0);
    }

    @Test
    public void test491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test491");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList2.clear();
        int int18 = strComparableList2.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList19 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int21 = strComparableList19.indexOf((java.lang.Object) (-7));
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList22 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int24 = strComparableList22.indexOf((java.lang.Object) (-7));
        strComparableList22.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean29 = strComparableList22.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean31 = strComparableList22.add((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList34 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean36 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableList34.indexOf((java.lang.Object) 10.0f);
        int int39 = strComparableList34.size();
        boolean boolean40 = strComparableList22.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList34);
        boolean boolean41 = strComparableList19.remove((java.lang.Object) strComparableList34);
        int int42 = strComparableList2.indexOf((java.lang.Object) strComparableList19);
        boolean boolean43 = strComparableList2.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            strComparableList2.add(1, (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:1, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test492");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList0 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int2 = strComparableList0.indexOf((java.lang.Object) (-7));
        strComparableList0.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList6 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int8 = strComparableList6.indexOf((java.lang.Object) (-7));
        int int10 = strComparableList6.indexOf((java.lang.Object) (-1.0d));
        boolean boolean11 = strComparableList0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList6);
        boolean boolean12 = strComparableList0.isEmpty();
        strComparableList0.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList14 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList0);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList15 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int17 = strComparableList15.indexOf((java.lang.Object) (-7));
        strComparableList15.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList15.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList25 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean27 = strComparableList25.add((java.lang.Comparable<java.lang.String>) "");
        int int28 = strComparableList25.getSizeField();
        boolean boolean29 = strComparableList15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList25);
        strComparableList15.clear();
        boolean boolean31 = strComparableList0.remove((java.lang.Object) strComparableList15);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList34 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean36 = strComparableList34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableList34.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList41 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableList41.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean43 = strComparableList41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int45 = strComparableList41.indexOf((java.lang.Object) (-3));
        boolean boolean46 = strComparableList34.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList41);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList49 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean51 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int53 = strComparableList49.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList56 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableList56.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean58 = strComparableList56.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableList56.indexOf((java.lang.Object) (-3));
        boolean boolean61 = strComparableList49.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList56);
        boolean boolean63 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "");
        int int64 = strComparableList34.indexOf((java.lang.Object) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList67 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean68 = strComparableList67.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean69 = strComparableList67.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean71 = strComparableList67.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList74 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean75 = strComparableList74.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean76 = strComparableList74.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean78 = strComparableList74.add((java.lang.Comparable<java.lang.String>) "");
        int int79 = strComparableList67.indexOf((java.lang.Object) strComparableList74);
        boolean boolean80 = strComparableList34.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList67);
        java.lang.Comparable<java.lang.String> strComparable82 = strComparableList34.remove(4);
        boolean boolean83 = strComparableList15.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList34);
        strComparableList15.clear();
    }

    @Test
    public void test493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test493");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean16 = strComparableList2.remove((java.lang.Object) (short) 1);
        boolean boolean17 = strComparableList2.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable20 = strComparableList2.set((-7), (java.lang.Comparable<java.lang.String>) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-7, size=4");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test494");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableList2.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList8 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList2);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList12 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableList12.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean14 = strComparableList12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int16 = strComparableList12.indexOf((java.lang.Object) (-3));
        boolean boolean18 = strComparableList12.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableList12.getSizeField();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int22 = strComparableList20.indexOf((java.lang.Object) (-7));
        boolean boolean24 = strComparableList20.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList27 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean29 = strComparableList27.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean31 = strComparableList27.remove((java.lang.Object) 10.0f);
        boolean boolean32 = strComparableList20.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList27);
        strComparableList20.clear();
        int int34 = strComparableList12.indexOf((java.lang.Object) strComparableList20);
        boolean boolean35 = strComparableList2.addAll((int) (short) 1, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList12);
        // The following exception was thrown during execution in test generation
        try {
            strComparableList12.add(9, (java.lang.Comparable<java.lang.String>) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:9, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test495");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableList9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList9.indexOf((java.lang.Object) (-3));
        boolean boolean14 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        int int15 = strComparableList2.getSizeField();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList18 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean22 = strComparableList18.remove((java.lang.Object) 10.0f);
        boolean boolean24 = strComparableList18.remove((java.lang.Object) 0);
        boolean boolean25 = strComparableList18.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList29 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean31 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean33 = strComparableList29.remove((java.lang.Object) 10.0f);
        boolean boolean34 = strComparableList18.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList29);
        boolean boolean35 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList29);
        int int36 = strComparableList2.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList39 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean41 = strComparableList39.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableList39.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList46 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableList46.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean48 = strComparableList46.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int50 = strComparableList46.indexOf((java.lang.Object) (-3));
        boolean boolean51 = strComparableList39.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList46);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList54 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean55 = strComparableList54.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean56 = strComparableList54.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int58 = strComparableList54.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList61 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean63 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int65 = strComparableList61.indexOf((java.lang.Object) (-3));
        boolean boolean66 = strComparableList54.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList61);
        boolean boolean68 = strComparableList54.add((java.lang.Comparable<java.lang.String>) "");
        int int69 = strComparableList39.indexOf((java.lang.Object) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList72 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean73 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean74 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean76 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList79 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean80 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean81 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean83 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "");
        int int84 = strComparableList72.indexOf((java.lang.Object) strComparableList79);
        boolean boolean85 = strComparableList39.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList72);
        boolean boolean86 = strComparableList39.isEmpty();
        boolean boolean87 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList39);
        strComparableList2.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList91 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean92 = strComparableList91.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean93 = strComparableList91.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int95 = strComparableList91.indexOf((java.lang.Object) 10.0f);
        int int96 = strComparableList2.indexOf((java.lang.Object) strComparableList91);
    }

    @Test
    public void test496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test496");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        java.lang.Comparable<java.lang.String> strComparable7 = strComparableList2.get(1);
        int int8 = strComparableList2.size();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList2);
    }

    @Test
    public void test497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test497");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        int int5 = strComparableList2.getSizeField();
        boolean boolean7 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.Comparable<java.lang.String> strComparable10 = strComparableList2.set(0, (java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList13 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableList13.indexOf((java.lang.Object) 10.0f);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean22 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableList20.indexOf((java.lang.Object) (-3));
        boolean boolean25 = strComparableList13.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean27 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        strComparableList13.clear();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList31 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean33 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableList31.indexOf((java.lang.Object) (-3));
        int int36 = strComparableList13.indexOf((java.lang.Object) strComparableList31);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList37 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int39 = strComparableList37.indexOf((java.lang.Object) (-7));
        strComparableList37.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableList37.indexOf((java.lang.Object) false);
        int int45 = strComparableList37.getSizeField();
        int int46 = strComparableList37.getSizeField();
        boolean boolean47 = strComparableList31.remove((java.lang.Object) strComparableList37);
        boolean boolean48 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList37);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList49 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int51 = strComparableList49.indexOf((java.lang.Object) (-7));
        strComparableList49.add(0, (java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean56 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean58 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList61 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean63 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int65 = strComparableList61.indexOf((java.lang.Object) 10.0f);
        int int66 = strComparableList61.size();
        boolean boolean67 = strComparableList49.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList61);
        int int68 = strComparableList61.getSizeField();
        int int69 = strComparableList37.indexOf((java.lang.Object) int68);
        boolean boolean71 = strComparableList37.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean72 = strComparableList37.isEmpty();
    }

    @Test
    public void test498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test498");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList2 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableList2.indexOf((java.lang.Object) 10.0f);
        int int7 = strComparableList2.size();
        boolean boolean8 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList9 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int11 = strComparableList9.indexOf((java.lang.Object) (-7));
        boolean boolean12 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList9);
        boolean boolean14 = strComparableList2.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int15 = strComparableList2.getSizeField();
        boolean boolean17 = strComparableList2.remove((java.lang.Object) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable19 = strComparableList2.get(9);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:9, size=1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test499");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList11 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableList11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableList11.size();
        boolean boolean14 = strComparableList2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList11);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList15 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList18 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean20 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean22 = strComparableList18.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean23 = strComparableList15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList18);
        boolean boolean24 = strComparableList2.remove((java.lang.Object) strComparableList15);
        int int26 = strComparableList15.indexOf((java.lang.Object) 1);
        boolean boolean28 = strComparableList15.add((java.lang.Comparable<java.lang.String>) "hi!");
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList29 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList15);
        boolean boolean31 = strComparableList29.add((java.lang.Comparable<java.lang.String>) "");
    }

    @Test
    public void test500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "TreeListTester0.test500");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean6 = strComparableList2.remove((java.lang.Object) 10.0f);
        boolean boolean8 = strComparableList2.remove((java.lang.Object) 0);
        boolean boolean9 = strComparableList2.isEmpty();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList13 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean15 = strComparableList13.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean17 = strComparableList13.remove((java.lang.Object) 10.0f);
        boolean boolean18 = strComparableList2.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList13);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList20 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int22 = strComparableList20.indexOf((java.lang.Object) (-7));
        int int24 = strComparableList20.indexOf((java.lang.Object) (-1.0d));
        boolean boolean25 = strComparableList13.addAll((int) (short) 0, (java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList20);
        boolean boolean27 = strComparableList20.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean28 = strComparableList20.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList31 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean33 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableList31.indexOf((java.lang.Object) 10.0f);
        int int36 = strComparableList31.size();
        boolean boolean37 = strComparableList31.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList38 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        int int40 = strComparableList38.indexOf((java.lang.Object) (-7));
        boolean boolean41 = strComparableList31.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList38);
        boolean boolean43 = strComparableList31.removeElem((java.lang.Comparable<java.lang.String>) "");
        int int44 = strComparableList31.getSizeField();
        int int45 = strComparableList31.size();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList48 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean50 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean52 = strComparableList48.remove((java.lang.Object) 10.0f);
        boolean boolean54 = strComparableList48.remove((java.lang.Object) 0);
        boolean boolean55 = strComparableList48.isEmpty();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList57 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableList57.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int59 = strComparableList57.size();
        boolean boolean60 = strComparableList48.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList57);
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList61 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>> strComparableList64 = new DataStructures.commonscollections.TreeList<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean66 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean68 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean69 = strComparableList61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList64);
        boolean boolean70 = strComparableList48.remove((java.lang.Object) strComparableList61);
        boolean boolean71 = strComparableList61.isEmpty();
        boolean boolean73 = strComparableList61.removeElem((java.lang.Comparable<java.lang.String>) "hi!");
        int int74 = strComparableList31.indexOf((java.lang.Object) strComparableList61);
        boolean boolean75 = strComparableList20.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList61);
        boolean boolean77 = strComparableList20.removeElem((java.lang.Comparable<java.lang.String>) "");
        boolean boolean78 = strComparableList20.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String> strComparable80 = strComparableList20.remove((-2));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Invalid index:-2, size=0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }
}

